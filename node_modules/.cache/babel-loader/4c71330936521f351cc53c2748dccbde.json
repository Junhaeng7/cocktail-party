{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2]) _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nimport { GRAPHQL_AUTH_MODE } from '@aws-amplify/api-graphql';\nimport { GraphQLAuthError } from '@aws-amplify/api';\nimport { Logger } from '@aws-amplify/core';\nimport { isEnumFieldType, isGraphQLScalarType, isPredicateObj, isSchemaModel, isTargetNameAssociation, isNonModelFieldType, OpType, ModelOperation } from '../types';\nimport { exhaustiveCheck } from '../util';\nvar logger = new Logger('DataStore');\nvar GraphQLOperationType;\n(function (GraphQLOperationType) {\n  GraphQLOperationType[\"LIST\"] = \"query\";\n  GraphQLOperationType[\"CREATE\"] = \"mutation\";\n  GraphQLOperationType[\"UPDATE\"] = \"mutation\";\n  GraphQLOperationType[\"DELETE\"] = \"mutation\";\n  GraphQLOperationType[\"GET\"] = \"query\";\n})(GraphQLOperationType || (GraphQLOperationType = {}));\nexport var TransformerMutationType;\n(function (TransformerMutationType) {\n  TransformerMutationType[\"CREATE\"] = \"Create\";\n  TransformerMutationType[\"UPDATE\"] = \"Update\";\n  TransformerMutationType[\"DELETE\"] = \"Delete\";\n  TransformerMutationType[\"GET\"] = \"Get\";\n})(TransformerMutationType || (TransformerMutationType = {}));\nvar dummyMetadata = {\n  _version: undefined,\n  _lastChangedAt: undefined,\n  _deleted: undefined\n};\nvar metadataFields = Object.keys(dummyMetadata);\nexport function getMetadataFields() {\n  return metadataFields;\n}\nexport function generateSelectionSet(namespace, modelDefinition) {\n  var scalarFields = getScalarFields(modelDefinition);\n  var nonModelFields = getNonModelFields(namespace, modelDefinition);\n  var implicitOwnerField = getImplicitOwnerField(modelDefinition, scalarFields);\n  var scalarAndMetadataFields = Object.values(scalarFields).map(function (_a) {\n    var name = _a.name;\n    return name;\n  }).concat(implicitOwnerField).concat(nonModelFields);\n  if (isSchemaModel(modelDefinition)) {\n    scalarAndMetadataFields = scalarAndMetadataFields.concat(getMetadataFields()).concat(getConnectionFields(modelDefinition));\n  }\n  var result = scalarAndMetadataFields.join('\\n');\n  return result;\n}\nfunction getImplicitOwnerField(modelDefinition, scalarFields) {\n  var ownerFields = getOwnerFields(modelDefinition);\n  if (!scalarFields.owner && ownerFields.includes('owner')) {\n    return ['owner'];\n  }\n  return [];\n}\nfunction getOwnerFields(modelDefinition) {\n  var ownerFields = [];\n  if (isSchemaModel(modelDefinition) && modelDefinition.attributes) {\n    modelDefinition.attributes.forEach(function (attr) {\n      if (attr.properties && attr.properties.rules) {\n        var rule = attr.properties.rules.find(function (rule) {\n          return rule.allow === 'owner';\n        });\n        if (rule && rule.ownerField) {\n          ownerFields.push(rule.ownerField);\n        }\n      }\n    });\n  }\n  return ownerFields;\n}\nfunction getScalarFields(modelDefinition) {\n  var fields = modelDefinition.fields;\n  var result = Object.values(fields).filter(function (field) {\n    if (isGraphQLScalarType(field.type) || isEnumFieldType(field.type)) {\n      return true;\n    }\n    return false;\n  }).reduce(function (acc, field) {\n    acc[field.name] = field;\n    return acc;\n  }, {});\n  return result;\n}\nfunction getConnectionFields(modelDefinition) {\n  var result = [];\n  Object.values(modelDefinition.fields).filter(function (_a) {\n    var association = _a.association;\n    return association && Object.keys(association).length;\n  }).forEach(function (_a) {\n    var name = _a.name,\n      association = _a.association;\n    var connectionType = association.connectionType;\n    switch (connectionType) {\n      case 'HAS_ONE':\n      case 'HAS_MANY':\n        // Intentionally blank\n        break;\n      case 'BELONGS_TO':\n        if (isTargetNameAssociation(association)) {\n          result.push(name + \" { id _deleted }\");\n        }\n        break;\n      default:\n        exhaustiveCheck(connectionType);\n    }\n  });\n  return result;\n}\nfunction getNonModelFields(namespace, modelDefinition) {\n  var result = [];\n  Object.values(modelDefinition.fields).forEach(function (_a) {\n    var name = _a.name,\n      type = _a.type;\n    if (isNonModelFieldType(type)) {\n      var typeDefinition = namespace.nonModels[type.nonModel];\n      var scalarFields = Object.values(getScalarFields(typeDefinition)).map(function (_a) {\n        var name = _a.name;\n        return name;\n      });\n      var nested_1 = [];\n      Object.values(typeDefinition.fields).forEach(function (field) {\n        var type = field.type,\n          name = field.name;\n        if (isNonModelFieldType(type)) {\n          var typeDefinition_1 = namespace.nonModels[type.nonModel];\n          nested_1.push(name + \" { \" + generateSelectionSet(namespace, typeDefinition_1) + \" }\");\n        }\n      });\n      result.push(name + \" { \" + scalarFields.join(' ') + \" \" + nested_1.join(' ') + \" }\");\n    }\n  });\n  return result;\n}\nexport function getAuthorizationRules(modelDefinition) {\n  // Searching for owner authorization on attributes\n  var authConfig = [].concat(modelDefinition.attributes).find(function (attr) {\n    return attr && attr.type === 'auth';\n  });\n  var _a = (authConfig || {}).properties,\n    _b = (_a === void 0 ? {} : _a).rules,\n    rules = _b === void 0 ? [] : _b;\n  var resultRules = [];\n  // Multiple rules can be declared for allow: owner\n  rules.forEach(function (rule) {\n    // setting defaults for backwards compatibility with old cli\n    var _a = rule.identityClaim,\n      identityClaim = _a === void 0 ? 'cognito:username' : _a,\n      _b = rule.ownerField,\n      ownerField = _b === void 0 ? 'owner' : _b,\n      _c = rule.operations,\n      operations = _c === void 0 ? ['create', 'update', 'delete', 'read'] : _c,\n      _d = rule.provider,\n      provider = _d === void 0 ? 'userPools' : _d,\n      _e = rule.groupClaim,\n      groupClaim = _e === void 0 ? 'cognito:groups' : _e,\n      _f = rule.allow,\n      authStrategy = _f === void 0 ? 'iam' : _f,\n      _g = rule.groups,\n      groups = _g === void 0 ? [] : _g;\n    var isReadAuthorized = operations.includes('read');\n    var isOwnerAuth = authStrategy === 'owner';\n    if (!isReadAuthorized && !isOwnerAuth) {\n      return;\n    }\n    var authRule = {\n      identityClaim: identityClaim,\n      ownerField: ownerField,\n      provider: provider,\n      groupClaim: groupClaim,\n      authStrategy: authStrategy,\n      groups: groups,\n      areSubscriptionsPublic: false\n    };\n    if (isOwnerAuth) {\n      // look for the subscription level override\n      // only pay attention to the public level\n      var modelConfig = [].concat(modelDefinition.attributes).find(function (attr) {\n        return attr && attr.type === 'model';\n      });\n      // find the subscriptions level. ON is default\n      var _h = (modelConfig || {}).properties,\n        _j = (_h === void 0 ? {} : _h).subscriptions,\n        _k = (_j === void 0 ? {} : _j).level,\n        level = _k === void 0 ? 'on' : _k;\n      // treat subscriptions as public for owner auth with unprotected reads\n      // when `read` is omitted from `operations`\n      authRule.areSubscriptionsPublic = !operations.includes('read') || level === 'public';\n    }\n    if (isOwnerAuth) {\n      // owner rules has least priority\n      resultRules.push(authRule);\n      return;\n    }\n    resultRules.unshift(authRule);\n  });\n  return resultRules;\n}\nexport function buildSubscriptionGraphQLOperation(namespace, modelDefinition, transformerMutationType, isOwnerAuthorization, ownerField) {\n  var selectionSet = generateSelectionSet(namespace, modelDefinition);\n  var typeName = modelDefinition.name,\n    pluralTypeName = modelDefinition.pluralName;\n  var opName = \"on\" + transformerMutationType + typeName;\n  var docArgs = '';\n  var opArgs = '';\n  if (isOwnerAuthorization) {\n    docArgs = \"($\" + ownerField + \": String!)\";\n    opArgs = \"(\" + ownerField + \": $\" + ownerField + \")\";\n  }\n  return [transformerMutationType, opName, \"subscription operation\" + docArgs + \"{\\n\\t\\t\\t\" + opName + opArgs + \"{\\n\\t\\t\\t\\t\" + selectionSet + \"\\n\\t\\t\\t}\\n\\t\\t}\"];\n}\nexport function buildGraphQLOperation(namespace, modelDefinition, graphQLOpType) {\n  var selectionSet = generateSelectionSet(namespace, modelDefinition);\n  var typeName = modelDefinition.name,\n    pluralTypeName = modelDefinition.pluralName;\n  var operation;\n  var documentArgs = ' ';\n  var operationArgs = ' ';\n  var transformerMutationType;\n  switch (graphQLOpType) {\n    case 'LIST':\n      operation = \"sync\" + pluralTypeName;\n      documentArgs = \"($limit: Int, $nextToken: String, $lastSync: AWSTimestamp, $filter: Model\" + typeName + \"FilterInput)\";\n      operationArgs = '(limit: $limit, nextToken: $nextToken, lastSync: $lastSync, filter: $filter)';\n      selectionSet = \"items {\\n\\t\\t\\t\\t\\t\\t\\t\" + selectionSet + \"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tnextToken\\n\\t\\t\\t\\t\\t\\tstartedAt\";\n      break;\n    case 'CREATE':\n      operation = \"create\" + typeName;\n      documentArgs = \"($input: Create\" + typeName + \"Input!)\";\n      operationArgs = '(input: $input)';\n      transformerMutationType = TransformerMutationType.CREATE;\n      break;\n    case 'UPDATE':\n      operation = \"update\" + typeName;\n      documentArgs = \"($input: Update\" + typeName + \"Input!, $condition: Model\" + typeName + \"ConditionInput)\";\n      operationArgs = '(input: $input, condition: $condition)';\n      transformerMutationType = TransformerMutationType.UPDATE;\n      break;\n    case 'DELETE':\n      operation = \"delete\" + typeName;\n      documentArgs = \"($input: Delete\" + typeName + \"Input!, $condition: Model\" + typeName + \"ConditionInput)\";\n      operationArgs = '(input: $input, condition: $condition)';\n      transformerMutationType = TransformerMutationType.DELETE;\n      break;\n    case 'GET':\n      operation = \"get\" + typeName;\n      documentArgs = \"($id: ID!)\";\n      operationArgs = '(id: $id)';\n      transformerMutationType = TransformerMutationType.GET;\n      break;\n    default:\n      exhaustiveCheck(graphQLOpType);\n  }\n  return [[transformerMutationType, operation, GraphQLOperationType[graphQLOpType] + \" operation\" + documentArgs + \"{\\n\\t\\t\" + operation + operationArgs + \"{\\n\\t\\t\\t\" + selectionSet + \"\\n\\t\\t}\\n\\t}\"]];\n}\nexport function createMutationInstanceFromModelOperation(relationships, modelDefinition, opType, model, element, condition, MutationEventConstructor, modelInstanceCreator, id) {\n  var operation;\n  switch (opType) {\n    case OpType.INSERT:\n      operation = TransformerMutationType.CREATE;\n      break;\n    case OpType.UPDATE:\n      operation = TransformerMutationType.UPDATE;\n      break;\n    case OpType.DELETE:\n      operation = TransformerMutationType.DELETE;\n      break;\n    default:\n      exhaustiveCheck(opType);\n  }\n  // stringify nested objects of type AWSJSON\n  // this allows us to return parsed JSON to users (see `castInstanceType()` in datastore.ts),\n  // but still send the object correctly over the wire\n  var replacer = function replacer(k, v) {\n    var isAWSJSON = k && v !== null && typeof v === 'object' && modelDefinition.fields[k] && modelDefinition.fields[k].type === 'AWSJSON';\n    if (isAWSJSON) {\n      return JSON.stringify(v);\n    }\n    return v;\n  };\n  var mutationEvent = modelInstanceCreator(MutationEventConstructor, __assign(__assign({}, id ? {\n    id: id\n  } : {}), {\n    data: JSON.stringify(element, replacer),\n    modelId: element.id,\n    model: model.name,\n    operation: operation,\n    condition: JSON.stringify(condition)\n  }));\n  return mutationEvent;\n}\nexport function predicateToGraphQLCondition(predicate) {\n  var result = {};\n  if (!predicate || !Array.isArray(predicate.predicates)) {\n    return result;\n  }\n  predicate.predicates.forEach(function (p) {\n    var _a;\n    if (isPredicateObj(p)) {\n      var field = p.field,\n        operator = p.operator,\n        operand = p.operand;\n      if (field === 'id') {\n        return;\n      }\n      result[field] = (_a = {}, _a[operator] = operand, _a);\n    } else {\n      result[p.type] = predicateToGraphQLCondition(p);\n    }\n  });\n  return result;\n}\nexport function predicateToGraphQLFilter(predicatesGroup) {\n  var result = {};\n  if (!predicatesGroup || !Array.isArray(predicatesGroup.predicates)) {\n    return result;\n  }\n  var type = predicatesGroup.type,\n    predicates = predicatesGroup.predicates;\n  var isList = type === 'and' || type === 'or';\n  result[type] = isList ? [] : {};\n  var appendToFilter = function appendToFilter(value) {\n    return isList ? result[type].push(value) : result[type] = value;\n  };\n  predicates.forEach(function (predicate) {\n    var _a, _b;\n    if (isPredicateObj(predicate)) {\n      var field = predicate.field,\n        operator = predicate.operator,\n        operand = predicate.operand;\n      var gqlField = (_a = {}, _a[field] = (_b = {}, _b[operator] = operand, _b), _a);\n      appendToFilter(gqlField);\n      return;\n    }\n    appendToFilter(predicateToGraphQLFilter(predicate));\n  });\n  return result;\n}\nexport function getUserGroupsFromToken(token, rule) {\n  // validate token against groupClaim\n  var userGroups = token[rule.groupClaim] || [];\n  if (typeof userGroups === 'string') {\n    var parsedGroups = void 0;\n    try {\n      parsedGroups = JSON.parse(userGroups);\n    } catch (e) {\n      parsedGroups = userGroups;\n    }\n    userGroups = [].concat(parsedGroups);\n  }\n  return userGroups;\n}\nexport function getModelAuthModes(_a) {\n  var authModeStrategy = _a.authModeStrategy,\n    defaultAuthMode = _a.defaultAuthMode,\n    modelName = _a.modelName,\n    schema = _a.schema;\n  return __awaiter(this, void 0, void 0, function () {\n    var operations, modelAuthModes, error_1;\n    var _this = this;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          operations = Object.values(ModelOperation);\n          modelAuthModes = {\n            CREATE: [],\n            READ: [],\n            UPDATE: [],\n            DELETE: []\n          };\n          _b.label = 1;\n        case 1:\n          _b.trys.push([1, 3,, 4]);\n          return [4 /*yield*/, Promise.all(operations.map(function (operation) {\n            return __awaiter(_this, void 0, void 0, function () {\n              var authModes;\n              return __generator(this, function (_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4 /*yield*/, authModeStrategy({\n                      schema: schema,\n                      modelName: modelName,\n                      operation: operation\n                    })];\n                  case 1:\n                    authModes = _a.sent();\n                    if (typeof authModes === 'string') {\n                      modelAuthModes[operation] = [authModes];\n                    } else if (Array.isArray(authModes) && authModes.length) {\n                      modelAuthModes[operation] = authModes;\n                    } else {\n                      // Use default auth mode if nothing is returned from authModeStrategy\n                      modelAuthModes[operation] = [defaultAuthMode];\n                    }\n                    return [2 /*return*/];\n                }\n              });\n            });\n          }))];\n\n        case 2:\n          _b.sent();\n          return [3 /*break*/, 4];\n        case 3:\n          error_1 = _b.sent();\n          logger.debug(\"Error getting auth modes for model: \" + modelName, error_1);\n          return [3 /*break*/, 4];\n        case 4:\n          return [2 /*return*/, modelAuthModes];\n      }\n    });\n  });\n}\nexport function getForbiddenError(error) {\n  var forbiddenErrorMessages = ['Request failed with status code 401', 'Request failed with status code 403'];\n  var forbiddenError;\n  if (error && error.errors) {\n    forbiddenError = error.errors.find(function (err) {\n      return forbiddenErrorMessages.includes(err.message);\n    });\n  } else if (error && error.message) {\n    forbiddenError = error;\n  }\n  if (forbiddenError) {\n    return forbiddenError.message;\n  }\n  return null;\n}\nexport function getClientSideAuthError(error) {\n  var clientSideAuthErrors = Object.values(GraphQLAuthError);\n  var clientSideError = error && error.message && clientSideAuthErrors.find(function (clientError) {\n    return error.message.includes(clientError);\n  });\n  return clientSideError || null;\n}\nexport function getTokenForCustomAuth(authMode, amplifyConfig) {\n  if (amplifyConfig === void 0) {\n    amplifyConfig = {};\n  }\n  return __awaiter(this, void 0, void 0, function () {\n    var _a, functionAuthProvider, token, error_2;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (!(authMode === GRAPHQL_AUTH_MODE.AWS_LAMBDA)) return [3 /*break*/, 6];\n          _a = amplifyConfig.authProviders, functionAuthProvider = (_a === void 0 ? {\n            functionAuthProvider: null\n          } : _a).functionAuthProvider;\n          if (!(functionAuthProvider && typeof functionAuthProvider === 'function')) return [3 /*break*/, 5];\n          _b.label = 1;\n        case 1:\n          _b.trys.push([1, 3,, 4]);\n          return [4 /*yield*/, functionAuthProvider()];\n        case 2:\n          token = _b.sent().token;\n          return [2 /*return*/, token];\n        case 3:\n          error_2 = _b.sent();\n          throw new Error(\"Error retrieving token from `functionAuthProvider`: \" + error_2);\n        case 4:\n          return [3 /*break*/, 6];\n        case 5:\n          // TODO: add docs link once available\n          throw new Error(\"You must provide a `functionAuthProvider` function to `DataStore.configure` when using \" + GRAPHQL_AUTH_MODE.AWS_LAMBDA);\n        case 6:\n          return [2 /*return*/];\n      }\n    });\n  });\n}","map":{"version":3,"names":["GRAPHQL_AUTH_MODE","GraphQLAuthError","Logger","isEnumFieldType","isGraphQLScalarType","isPredicateObj","isSchemaModel","isTargetNameAssociation","isNonModelFieldType","OpType","ModelOperation","exhaustiveCheck","logger","GraphQLOperationType","TransformerMutationType","dummyMetadata","_version","undefined","_lastChangedAt","_deleted","metadataFields","Object","keys","getMetadataFields","generateSelectionSet","namespace","modelDefinition","scalarFields","getScalarFields","nonModelFields","getNonModelFields","implicitOwnerField","getImplicitOwnerField","scalarAndMetadataFields","values","map","_a","name","concat","getConnectionFields","result","join","ownerFields","getOwnerFields","owner","includes","attributes","forEach","attr","properties","rules","rule","find","allow","ownerField","push","fields","filter","field","type","reduce","acc","association","length","connectionType","typeDefinition","nonModels","nonModel","nested_1","typeDefinition_1","getAuthorizationRules","authConfig","_b","resultRules","identityClaim","_c","operations","_d","provider","_e","groupClaim","_f","authStrategy","_g","groups","isReadAuthorized","isOwnerAuth","authRule","areSubscriptionsPublic","modelConfig","_h","_j","subscriptions","_k","level","unshift","buildSubscriptionGraphQLOperation","transformerMutationType","isOwnerAuthorization","selectionSet","typeName","pluralTypeName","pluralName","opName","docArgs","opArgs","buildGraphQLOperation","graphQLOpType","operation","documentArgs","operationArgs","CREATE","UPDATE","DELETE","GET","createMutationInstanceFromModelOperation","relationships","opType","model","element","condition","MutationEventConstructor","modelInstanceCreator","id","INSERT","replacer","k","v","isAWSJSON","JSON","stringify","mutationEvent","__assign","data","modelId","predicateToGraphQLCondition","predicate","Array","isArray","predicates","p","operator","operand","predicateToGraphQLFilter","predicatesGroup","isList","appendToFilter","value","gqlField","getUserGroupsFromToken","token","userGroups","parsedGroups","parse","e","getModelAuthModes","authModeStrategy","defaultAuthMode","modelName","schema","modelAuthModes","READ","Promise","all","__awaiter","_this","authModes","sent","debug","error_1","getForbiddenError","error","forbiddenErrorMessages","forbiddenError","errors","err","message","getClientSideAuthError","clientSideAuthErrors","clientSideError","clientError","getTokenForCustomAuth","authMode","amplifyConfig","AWS_LAMBDA","authProviders","functionAuthProvider","Error","error_2"],"sources":["../../src/sync/utils.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module"}