{"ast":null,"code":"import { __assign, __read, __spreadArray } from \"tslib\";\nvar HttpRequest = function () {\n  function HttpRequest(options) {\n    this.method = options.method || \"GET\";\n    this.hostname = options.hostname || \"localhost\";\n    this.port = options.port;\n    this.query = options.query || {};\n    this.headers = options.headers || {};\n    this.body = options.body;\n    this.protocol = options.protocol ? options.protocol.substr(-1) !== \":\" ? options.protocol + \":\" : options.protocol : \"https:\";\n    this.path = options.path ? options.path.charAt(0) !== \"/\" ? \"/\" + options.path : options.path : \"/\";\n  }\n  HttpRequest.isInstance = function (request) {\n    if (!request) return false;\n    var req = request;\n    return \"method\" in req && \"protocol\" in req && \"hostname\" in req && \"path\" in req && typeof req[\"query\"] === \"object\" && typeof req[\"headers\"] === \"object\";\n  };\n  HttpRequest.prototype.clone = function () {\n    var cloned = new HttpRequest(__assign(__assign({}, this), {\n      headers: __assign({}, this.headers)\n    }));\n    if (cloned.query) cloned.query = cloneQuery(cloned.query);\n    return cloned;\n  };\n  return HttpRequest;\n}();\nexport { HttpRequest };\nfunction cloneQuery(query) {\n  return Object.keys(query).reduce(function (carry, paramName) {\n    var _a;\n    var param = query[paramName];\n    return __assign(__assign({}, carry), (_a = {}, _a[paramName] = Array.isArray(param) ? __spreadArray([], __read(param)) : param, _a));\n  }, {});\n}","map":{"version":3,"names":["__assign","__read","__spreadArray","HttpRequest","options","method","hostname","port","query","headers","body","protocol","substr","path","charAt","isInstance","request","req","prototype","clone","cloned","cloneQuery","Object","keys","reduce","carry","paramName","_a","param","Array","isArray"],"sources":["/Users/Junhaeng/untitled folder/junior-design/amplifyapp/node_modules/@aws-sdk/client-location/node_modules/@aws-sdk/protocol-http/dist-es/httpRequest.js"],"sourcesContent":["import { __assign, __read, __spreadArray } from \"tslib\";\nvar HttpRequest = (function () {\n    function HttpRequest(options) {\n        this.method = options.method || \"GET\";\n        this.hostname = options.hostname || \"localhost\";\n        this.port = options.port;\n        this.query = options.query || {};\n        this.headers = options.headers || {};\n        this.body = options.body;\n        this.protocol = options.protocol\n            ? options.protocol.substr(-1) !== \":\"\n                ? options.protocol + \":\"\n                : options.protocol\n            : \"https:\";\n        this.path = options.path ? (options.path.charAt(0) !== \"/\" ? \"/\" + options.path : options.path) : \"/\";\n    }\n    HttpRequest.isInstance = function (request) {\n        if (!request)\n            return false;\n        var req = request;\n        return (\"method\" in req &&\n            \"protocol\" in req &&\n            \"hostname\" in req &&\n            \"path\" in req &&\n            typeof req[\"query\"] === \"object\" &&\n            typeof req[\"headers\"] === \"object\");\n    };\n    HttpRequest.prototype.clone = function () {\n        var cloned = new HttpRequest(__assign(__assign({}, this), { headers: __assign({}, this.headers) }));\n        if (cloned.query)\n            cloned.query = cloneQuery(cloned.query);\n        return cloned;\n    };\n    return HttpRequest;\n}());\nexport { HttpRequest };\nfunction cloneQuery(query) {\n    return Object.keys(query).reduce(function (carry, paramName) {\n        var _a;\n        var param = query[paramName];\n        return __assign(__assign({}, carry), (_a = {}, _a[paramName] = Array.isArray(param) ? __spreadArray([], __read(param)) : param, _a));\n    }, {});\n}\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,aAAa,QAAQ,OAAO;AACvD,IAAIC,WAAW,GAAI,YAAY;EAC3B,SAASA,WAAWA,CAACC,OAAO,EAAE;IAC1B,IAAI,CAACC,MAAM,GAAGD,OAAO,CAACC,MAAM,IAAI,KAAK;IACrC,IAAI,CAACC,QAAQ,GAAGF,OAAO,CAACE,QAAQ,IAAI,WAAW;IAC/C,IAAI,CAACC,IAAI,GAAGH,OAAO,CAACG,IAAI;IACxB,IAAI,CAACC,KAAK,GAAGJ,OAAO,CAACI,KAAK,IAAI,CAAC,CAAC;IAChC,IAAI,CAACC,OAAO,GAAGL,OAAO,CAACK,OAAO,IAAI,CAAC,CAAC;IACpC,IAAI,CAACC,IAAI,GAAGN,OAAO,CAACM,IAAI;IACxB,IAAI,CAACC,QAAQ,GAAGP,OAAO,CAACO,QAAQ,GAC1BP,OAAO,CAACO,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,GAC/BR,OAAO,CAACO,QAAQ,GAAG,GAAG,GACtBP,OAAO,CAACO,QAAQ,GACpB,QAAQ;IACd,IAAI,CAACE,IAAI,GAAGT,OAAO,CAACS,IAAI,GAAIT,OAAO,CAACS,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,GAAG,GAAGV,OAAO,CAACS,IAAI,GAAGT,OAAO,CAACS,IAAI,GAAI,GAAG;EACzG;EACAV,WAAW,CAACY,UAAU,GAAG,UAAUC,OAAO,EAAE;IACxC,IAAI,CAACA,OAAO,EACR,OAAO,KAAK;IAChB,IAAIC,GAAG,GAAGD,OAAO;IACjB,OAAQ,QAAQ,IAAIC,GAAG,IACnB,UAAU,IAAIA,GAAG,IACjB,UAAU,IAAIA,GAAG,IACjB,MAAM,IAAIA,GAAG,IACb,OAAOA,GAAG,CAAC,OAAO,CAAC,KAAK,QAAQ,IAChC,OAAOA,GAAG,CAAC,SAAS,CAAC,KAAK,QAAQ;EAC1C,CAAC;EACDd,WAAW,CAACe,SAAS,CAACC,KAAK,GAAG,YAAY;IACtC,IAAIC,MAAM,GAAG,IAAIjB,WAAW,CAACH,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE;MAAES,OAAO,EAAET,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,CAACS,OAAO;IAAE,CAAC,CAAC,CAAC;IACnG,IAAIW,MAAM,CAACZ,KAAK,EACZY,MAAM,CAACZ,KAAK,GAAGa,UAAU,CAACD,MAAM,CAACZ,KAAK,CAAC;IAC3C,OAAOY,MAAM;EACjB,CAAC;EACD,OAAOjB,WAAW;AACtB,CAAC,EAAG;AACJ,SAASA,WAAW;AACpB,SAASkB,UAAUA,CAACb,KAAK,EAAE;EACvB,OAAOc,MAAM,CAACC,IAAI,CAACf,KAAK,CAAC,CAACgB,MAAM,CAAC,UAAUC,KAAK,EAAEC,SAAS,EAAE;IACzD,IAAIC,EAAE;IACN,IAAIC,KAAK,GAAGpB,KAAK,CAACkB,SAAS,CAAC;IAC5B,OAAO1B,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEyB,KAAK,CAAC,GAAGE,EAAE,GAAG,CAAC,CAAC,EAAEA,EAAE,CAACD,SAAS,CAAC,GAAGG,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,GAAG1B,aAAa,CAAC,EAAE,EAAED,MAAM,CAAC2B,KAAK,CAAC,CAAC,GAAGA,KAAK,EAAED,EAAE,EAAE;EACxI,CAAC,EAAE,CAAC,CAAC,CAAC;AACV"},"metadata":{},"sourceType":"module"}