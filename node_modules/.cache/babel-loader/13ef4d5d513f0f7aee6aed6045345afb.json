{"ast":null,"code":"import _slicedToArray from \"/Users/Junhaeng/untitled folder/junior-design/amplifyapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"/Users/Junhaeng/untitled folder/junior-design/amplifyapp/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"/Users/Junhaeng/untitled folder/junior-design/amplifyapp/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/Junhaeng/untitled folder/junior-design/amplifyapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _jsxFileName = \"/Users/Junhaeng/untitled folder/junior-design/amplifyapp/src/components/pages/File_Browser/s3Browser.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport AWS from \"aws-sdk\";\nimport { ChonkyActions, FileBrowser, FileList, FileNavbar, FileToolbar, setChonkyDefaults } from \"chonky\";\nimport { ChonkyIconFA } from \"chonky-icon-fontawesome\";\nimport path from \"path\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n// import awsconfig from 'components/../aws-exports'\n\nimport { Storage } from \"aws-amplify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import { useStoryLinks } from './util';\n// Amplify.configure(awsconfig)\nsetChonkyDefaults({\n  iconComponent: ChonkyIconFA\n});\n\n// The AWS credentials below only have read-only access to the Chonky demo bucket.\n// You will need to create custom credentials for your bucket.\nvar BUCKET_NAME = \"los-pollos-hermanos-bucket\";\nvar BUCKET_REGION = \"us-east-1\";\nvar defaultProps = {\n  bucket: \"los-pollos-hermanos\",\n  region: \"us-east-1\"\n};\n\n// const getCred = async () => await Storage.get(\"labelerCred.json\")\n//     .then(async resp => {\n//         const url = `${JSON.stringify(resp)}`.slice(1,-1);\n//         await fetch(url)\n//             .then(res => res.json())\n//             .then(data => {\n//                 // console.log(data.ACCESS_KEY_ID);\n//                 // console.log(data.SECRET_ACCESS_KEY);\n\n//                 AWS.config.update({\n//                     region: BUCKET_REGION,\n//                     accessKeyId: data.ACCESS_KEY_ID,\n//                     secretAccessKey: data.SECRET_ACCESS_KEY,\n//                 });\n//                 console.log('files loaded');\n//             })\n//         .catch(err => console.error(err));\n//     });\n// getCred();\n\nvar fetchS3BucketContents = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(bucket, prefix, region) {\n    var s3;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return Storage.get(\"labelerCred.json\").then( /*#__PURE__*/function () {\n            var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(resp) {\n              var url;\n              return _regeneratorRuntime().wrap(function _callee$(_context) {\n                while (1) switch (_context.prev = _context.next) {\n                  case 0:\n                    url = \"\".concat(JSON.stringify(resp)).slice(1, -1);\n                    _context.next = 3;\n                    return fetch(url).then(function (res) {\n                      return res.json();\n                    }).then(function (data) {\n                      AWS.config.update({\n                        region: BUCKET_REGION,\n                        accessKeyId: data.ACCESS_KEY_ID,\n                        secretAccessKey: data.SECRET_ACCESS_KEY\n                      });\n                      console.log(\"files loaded\");\n                    }).catch(function (err) {\n                      return console.error(err);\n                    });\n                  case 3:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }, _callee);\n            }));\n            return function (_x4) {\n              return _ref2.apply(this, arguments);\n            };\n          }());\n        case 2:\n          s3 = new AWS.S3();\n          return _context2.abrupt(\"return\", s3.listObjectsV2({\n            Bucket: bucket,\n            Delimiter: \"/\",\n            // Prefix: 'audio/00/',\n            Prefix: prefix !== \"/\" ? prefix : \"\"\n          }).promise().then(function (response) {\n            var chonkyFiles = [];\n            // const s3Objects = response.Contents;\n            var s3Objects = response.Contents ? response.Contents.filter(function (item) {\n              var _item$Key;\n              return (_item$Key = item.Key) === null || _item$Key === void 0 ? void 0 : _item$Key.endsWith(\".flac\");\n            }) : [];\n            console.log(response.Contents);\n            var s3Prefixes = response.CommonPrefixes;\n            console.log(response.CommonPrefixes);\n            // const s3Prefixes = response.CommonPrefixes ? response.CommonPrefixes?.filter(item => s3Objects?.forEach(e => e.Key?.includes(item.Prefix ? item.Prefix : ''))) : response.CommonPrefixes;\n            // const s3Prefixes = response.CommonPrefixes ? response.CommonPrefixes.filter(item => item.Key.endsWith('.flac')) : response.CommonPrefixes;\n\n            // let dir = [...s3Objects?.map(item => item?.Key)];\n            // dir = dir.map(item => item?.split('/').slice(0, -1).join('/'));\n            // let dir2 = [];\n            // dir.forEach(el => {\n            //     el?.split('/').slice(0, -1).join('/');\n            // });\n\n            if (s3Objects) {\n              // console.log(s3Objects.length);\n              // console.log(s3Objects[0].Key);\n              // console.log(dir[0]);\n              chonkyFiles.push.apply(chonkyFiles, _toConsumableArray(s3Objects.map(function (object) {\n                return {\n                  id: object.Key,\n                  name: path.basename(object.Key),\n                  modDate: object.LastModified,\n                  size: object.Size\n                };\n              })));\n              // chonkyFiles.push(\n              //     ...dir.map(\n              //         (object): FileData => ({\n              //             id: object!,\n              //             name: path.basename(object!),\n              //             isDir: true,\n              //         })\n              //     )\n              // );\n            }\n\n            if (s3Prefixes) {\n              // console.log(s3Prefixes.length);\n              chonkyFiles.push.apply(chonkyFiles, _toConsumableArray(s3Prefixes.map(function (prefix) {\n                return {\n                  id: prefix.Prefix,\n                  name: path.basename(prefix.Prefix),\n                  isDir: true\n                };\n              })));\n            }\n            return chonkyFiles;\n          }));\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function fetchS3BucketContents(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar storyName = \"AWS S3 Browser\";\nvar S3Browser = function S3Browser(_ref3) {\n  _s();\n  var bucket = _ref3.bucket,\n    region = _ref3.region;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    error = _useState2[0],\n    setError = _useState2[1];\n  var _useState3 = useState(\"/\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    folderPrefix = _useState4[0],\n    setKeyPrefix = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    files = _useState6[0],\n    setFiles = _useState6[1];\n  var BUCKET_NAME = bucket;\n  var BUCKET_REGION = region;\n  useEffect(function () {\n    console.log(\"REGION:\" + BUCKET_REGION);\n    fetchS3BucketContents(BUCKET_NAME, folderPrefix, BUCKET_REGION).then(setFiles).catch(function (error) {\n      return setError(error.message);\n    });\n  }, [folderPrefix, setFiles]);\n  var folderChain = React.useMemo(function () {\n    var folderChain;\n    if (folderPrefix === \"/\") {\n      folderChain = [];\n    } else {\n      var currentPrefix = \"\";\n      folderChain = folderPrefix.replace(/\\/*$/, \"\").split(\"/\").map(function (prefixPart) {\n        currentPrefix = currentPrefix ? path.join(currentPrefix, prefixPart) : prefixPart;\n        return {\n          id: currentPrefix,\n          name: prefixPart,\n          isDir: true\n        };\n      });\n    }\n    folderChain.unshift({\n      id: \"/\",\n      name: BUCKET_NAME,\n      isDir: true\n    });\n    return folderChain;\n  }, [folderPrefix]);\n  var history = useHistory();\n  var handleFileAction = useCallback(function (data) {\n    if (data.id === ChonkyActions.OpenFiles.id) {\n      // if ( data.payload.clickType === \"double\" && data.payload.file.id.slice(id.length - 5) === '.flac') {\n\n      // }\n      if (data.payload.files && data.payload.files.length !== 1) return;\n      if (!data.payload.targetFile || !data.payload.targetFile.isDir) return;\n      var newPrefix = \"\".concat(data.payload.targetFile.id.replace(/\\/*$/, \"\"), \"/\");\n      console.log(\"Key prefix: \".concat(newPrefix));\n      setKeyPrefix(newPrefix);\n    }\n    if (data.id === ChonkyActions.MouseClickFile.id) {\n      if (data.payload.clickType === \"double\" && data.payload.file.name.slice(data.payload.file.name.length - 5) === \".flac\") {\n        var myS3 = new AWS.S3({\n          region: BUCKET_REGION\n        });\n        var url = myS3.getSignedUrl(\"getObject\", {\n          Bucket: BUCKET_NAME,\n          Key: data.payload.file.id,\n          Expires: 600\n        });\n        var filename = data.payload.file.id;\n        var props_to_pass = {\n          link: url,\n          file: filename\n        };\n        history.push(\"/spectrogram\", props_to_pass);\n      }\n    }\n  }, [setKeyPrefix]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"story-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"story-description\",\n      children: error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"story-error\",\n        children: [\"An error has occurred while loading bucket: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 57\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"fileBrowser\",\n      children: /*#__PURE__*/_jsxDEV(FileBrowser, {\n        instanceId: storyName,\n        files: files,\n        folderChain: folderChain,\n        onFileAction: handleFileAction,\n        defaultFileViewActionId: ChonkyActions.EnableListView.id,\n        children: [/*#__PURE__*/_jsxDEV(FileNavbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(FileToolbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(FileList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, _this);\n};\n_s(S3Browser, \"MQ1MWHwU93KPeQ3aS8MRZP8KJxE=\", false, function () {\n  return [useHistory];\n});\n_c = S3Browser;\nS3Browser.storyName = storyName;\nS3Browser.defaultProps = defaultProps;\nexport default S3Browser;\nvar _c;\n$RefreshReg$(_c, \"S3Browser\");","map":{"version":3,"names":["AWS","ChonkyActions","FileBrowser","FileList","FileNavbar","FileToolbar","setChonkyDefaults","ChonkyIconFA","path","React","useCallback","useEffect","useState","useHistory","Storage","jsxDEV","_jsxDEV","iconComponent","BUCKET_NAME","BUCKET_REGION","defaultProps","bucket","region","fetchS3BucketContents","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","prefix","s3","wrap","_callee2$","_context2","prev","next","get","then","_ref2","_callee","resp","url","_callee$","_context","concat","JSON","stringify","slice","fetch","res","json","data","config","update","accessKeyId","ACCESS_KEY_ID","secretAccessKey","SECRET_ACCESS_KEY","console","log","catch","err","error","stop","_x4","apply","arguments","S3","abrupt","listObjectsV2","Bucket","Delimiter","Prefix","promise","response","chonkyFiles","s3Objects","Contents","filter","item","_item$Key","Key","endsWith","s3Prefixes","CommonPrefixes","push","_toConsumableArray","map","object","id","name","basename","modDate","LastModified","size","Size","isDir","_x","_x2","_x3","storyName","S3Browser","_ref3","_s","_useState","_useState2","_slicedToArray","setError","_useState3","_useState4","folderPrefix","setKeyPrefix","_useState5","_useState6","files","setFiles","message","folderChain","useMemo","currentPrefix","replace","split","prefixPart","join","unshift","history","handleFileAction","OpenFiles","payload","length","targetFile","newPrefix","MouseClickFile","clickType","file","myS3","getSignedUrl","Expires","filename","props_to_pass","link","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","instanceId","onFileAction","defaultFileViewActionId","EnableListView","_c","$RefreshReg$"],"sources":["/Users/Junhaeng/untitled folder/junior-design/amplifyapp/src/components/pages/File_Browser/s3Browser.tsx"],"sourcesContent":["import AWS from \"aws-sdk\";\nimport {\n  ChonkyActions,\n  ChonkyFileActionData,\n  FileArray,\n  FileBrowser,\n  FileData,\n  FileList,\n  FileNavbar,\n  FileToolbar,\n  setChonkyDefaults,\n} from \"chonky\";\nimport { ChonkyIconFA } from \"chonky-icon-fontawesome\";\nimport path from \"path\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useHistory, withRouter, Route } from \"react-router-dom\";\n// import awsconfig from 'components/../aws-exports'\nimport Amplify from \"aws-amplify\";\nimport { Storage } from \"aws-amplify\";\nimport Spectrogramview from \"components/Spectrogramview\";\n// import { useStoryLinks } from './util';\n\n// Amplify.configure(awsconfig)\n\nsetChonkyDefaults({ iconComponent: ChonkyIconFA });\n\n// The AWS credentials below only have read-only access to the Chonky demo bucket.\n// You will need to create custom credentials for your bucket.\nconst BUCKET_NAME = \"los-pollos-hermanos-bucket\";\nconst BUCKET_REGION = \"us-east-1\";\n\ntype BrowserProps = {\n  bucket: string;\n  region: string;\n};\n\nconst defaultProps = {\n  bucket: \"los-pollos-hermanos\",\n  region: \"us-east-1\",\n};\n\n// const getCred = async () => await Storage.get(\"labelerCred.json\")\n//     .then(async resp => {\n//         const url = `${JSON.stringify(resp)}`.slice(1,-1);\n//         await fetch(url)\n//             .then(res => res.json())\n//             .then(data => {\n//                 // console.log(data.ACCESS_KEY_ID);\n//                 // console.log(data.SECRET_ACCESS_KEY);\n\n//                 AWS.config.update({\n//                     region: BUCKET_REGION,\n//                     accessKeyId: data.ACCESS_KEY_ID,\n//                     secretAccessKey: data.SECRET_ACCESS_KEY,\n//                 });\n//                 console.log('files loaded');\n//             })\n//         .catch(err => console.error(err));\n//     });\n// getCred();\n\nconst fetchS3BucketContents = async (\n  bucket: string,\n  prefix: string,\n  region: string\n): Promise<FileArray> => {\n  await Storage.get(\"labelerCred.json\").then(async (resp) => {\n    const url = `${JSON.stringify(resp)}`.slice(1, -1);\n    await fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        AWS.config.update({\n          region: BUCKET_REGION,\n          accessKeyId: data.ACCESS_KEY_ID,\n          secretAccessKey: data.SECRET_ACCESS_KEY,\n        });\n        console.log(\"files loaded\");\n      })\n      .catch((err) => console.error(err));\n  });\n\n  const s3 = new AWS.S3();\n  return s3\n    .listObjectsV2({\n      Bucket: bucket,\n      Delimiter: \"/\",\n      // Prefix: 'audio/00/',\n      Prefix: prefix !== \"/\" ? prefix : \"\",\n    })\n    .promise()\n    .then((response) => {\n      const chonkyFiles: FileArray = [];\n      // const s3Objects = response.Contents;\n      const s3Objects: AWS.S3.Object[] = response.Contents\n        ? response.Contents.filter((item) => item.Key?.endsWith(\".flac\"))\n        : [];\n      console.log(response.Contents);\n      const s3Prefixes = response.CommonPrefixes;\n      console.log(response.CommonPrefixes);\n      // const s3Prefixes = response.CommonPrefixes ? response.CommonPrefixes?.filter(item => s3Objects?.forEach(e => e.Key?.includes(item.Prefix ? item.Prefix : ''))) : response.CommonPrefixes;\n      // const s3Prefixes = response.CommonPrefixes ? response.CommonPrefixes.filter(item => item.Key.endsWith('.flac')) : response.CommonPrefixes;\n\n      // let dir = [...s3Objects?.map(item => item?.Key)];\n      // dir = dir.map(item => item?.split('/').slice(0, -1).join('/'));\n      // let dir2 = [];\n      // dir.forEach(el => {\n      //     el?.split('/').slice(0, -1).join('/');\n      // });\n\n      if (s3Objects) {\n        // console.log(s3Objects.length);\n        // console.log(s3Objects[0].Key);\n        // console.log(dir[0]);\n        chonkyFiles.push(\n          ...s3Objects.map(\n            (object): FileData => ({\n              id: object.Key!,\n              name: path.basename(object.Key!),\n              modDate: object.LastModified,\n              size: object.Size,\n            })\n          )\n        );\n        // chonkyFiles.push(\n        //     ...dir.map(\n        //         (object): FileData => ({\n        //             id: object!,\n        //             name: path.basename(object!),\n        //             isDir: true,\n        //         })\n        //     )\n        // );\n      }\n\n      if (s3Prefixes) {\n        // console.log(s3Prefixes.length);\n        chonkyFiles.push(\n          ...s3Prefixes.map(\n            (prefix): FileData => ({\n              id: prefix.Prefix!,\n              name: path.basename(prefix.Prefix!),\n              isDir: true,\n            })\n          )\n        );\n      }\n\n      return chonkyFiles;\n    });\n};\n\nconst storyName = \"AWS S3 Browser\";\nconst S3Browser: React.FC<BrowserProps> = ({ bucket, region }) => {\n  const [error, setError] = useState<string | null>(null);\n  const [folderPrefix, setKeyPrefix] = useState<string>(\"/\");\n  const [files, setFiles] = useState<FileArray>([]);\n\n  const BUCKET_NAME = bucket;\n  const BUCKET_REGION = region;\n\n  useEffect(() => {\n    console.log(\"REGION:\" + BUCKET_REGION);\n    fetchS3BucketContents(BUCKET_NAME, folderPrefix, BUCKET_REGION)\n      .then(setFiles)\n      .catch((error) => setError(error.message));\n  }, [folderPrefix, setFiles]);\n\n  const folderChain = React.useMemo(() => {\n    let folderChain: FileArray;\n    if (folderPrefix === \"/\") {\n      folderChain = [];\n    } else {\n      let currentPrefix = \"\";\n      folderChain = folderPrefix\n        .replace(/\\/*$/, \"\")\n        .split(\"/\")\n        .map((prefixPart): FileData => {\n          currentPrefix = currentPrefix\n            ? path.join(currentPrefix, prefixPart)\n            : prefixPart;\n          return {\n            id: currentPrefix,\n            name: prefixPart,\n            isDir: true,\n          };\n        });\n    }\n    folderChain.unshift({\n      id: \"/\",\n      name: BUCKET_NAME,\n      isDir: true,\n    });\n    return folderChain;\n  }, [folderPrefix]);\n\n  let history = useHistory();\n\n  const handleFileAction = useCallback(\n    (data: ChonkyFileActionData) => {\n      if (data.id === ChonkyActions.OpenFiles.id) {\n        // if ( data.payload.clickType === \"double\" && data.payload.file.id.slice(id.length - 5) === '.flac') {\n\n        // }\n        if (data.payload.files && data.payload.files.length !== 1) return;\n        if (!data.payload.targetFile || !data.payload.targetFile.isDir) return;\n\n        const newPrefix = `${data.payload.targetFile.id.replace(/\\/*$/, \"\")}/`;\n        console.log(`Key prefix: ${newPrefix}`);\n        setKeyPrefix(newPrefix);\n      }\n      if (data.id === ChonkyActions.MouseClickFile.id) {\n        if (\n          data.payload.clickType === \"double\" &&\n          data.payload.file.name.slice(data.payload.file.name.length - 5) ===\n            \".flac\"\n        ) {\n          const myS3 = new AWS.S3({ region: BUCKET_REGION });\n          const url = myS3.getSignedUrl(\"getObject\", {\n            Bucket: BUCKET_NAME,\n            Key: data.payload.file.id,\n            Expires: 600,\n          });\n          var filename = data.payload.file.id;\n\n          const props_to_pass = {\n            link: url,\n            file: filename,\n          };\n\n          history.push(\"/spectrogram\", props_to_pass);\n        }\n      }\n    },\n    [setKeyPrefix]\n  );\n\n  return (\n    <div className=\"story-wrapper\">\n      <div className=\"story-description\">\n        {/* <h1 className=\"story-title\">{storyName}</h1>\n                <p>\n                    This example fetches data from a real S3 bucket. If you open the\n                    \"Network\" tab of your browser's dev tools, you will see S3 API\n                    requests being sent in real-time as you enter different folders.\n                </p>\n                <p>\n                    Note that the AWS SDK in this example is configured to have{' '}\n                    <strong>read-only</strong> access to Chonky's demo bucket, called\n                    <code>{BUCKET_NAME}</code>. To use a custom bucket, you will need to\n                    setup appropriate IAM roles and permissions. Please remember to\n                    restrict public access to your data!\n                </p>\n                <div className=\"story-links\">\n                    {useStoryLinks([\n                        { gitPath: '2.x_storybook/src/demos/S3Browser.tsx' },\n                    ])}\n                </div> */}\n        {error && (\n          <div className=\"story-error\">\n            An error has occurred while loading bucket: <strong>{error}</strong>\n          </div>\n        )}\n      </div>\n      <div id=\"fileBrowser\">\n        <FileBrowser\n          instanceId={storyName}\n          files={files}\n          folderChain={folderChain}\n          onFileAction={handleFileAction}\n          defaultFileViewActionId={ChonkyActions.EnableListView.id}\n        >\n          <FileNavbar />\n          <FileToolbar />\n          <FileList />\n        </FileBrowser>\n      </div>\n    </div>\n  );\n};\n(S3Browser as any).storyName = storyName;\nS3Browser.defaultProps = defaultProps;\n\nexport default S3Browser;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}