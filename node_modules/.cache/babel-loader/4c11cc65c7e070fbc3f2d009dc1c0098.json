{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2]) _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar Logger_1 = require(\"./Logger\");\nvar StorageHelper_1 = require(\"./StorageHelper\");\nvar JS_1 = require(\"./JS\");\nvar OAuthHelper_1 = require(\"./OAuthHelper\");\nvar Util_1 = require(\"./Util\");\nvar Platform_1 = require(\"./Platform\");\nvar Amplify_1 = require(\"./Amplify\");\nvar credential_provider_cognito_identity_1 = require(\"@aws-sdk/credential-provider-cognito-identity\");\nvar client_cognito_identity_1 = require(\"@aws-sdk/client-cognito-identity\");\nvar logger = new Logger_1.ConsoleLogger('Credentials');\nvar CREDENTIALS_TTL = 50 * 60 * 1000; // 50 min, can be modified on config if required in the future\nvar COGNITO_IDENTITY_KEY_PREFIX = 'CognitoIdentityId-';\nvar CredentialsClass = /** @class */function () {\n  function CredentialsClass(config) {\n    this._gettingCredPromise = null;\n    this._refreshHandlers = {};\n    // Allow `Auth` to be injected for SSR, but Auth isn't a required dependency for Credentials\n    this.Auth = undefined;\n    this.configure(config);\n    this._refreshHandlers['google'] = OAuthHelper_1.GoogleOAuth.refreshGoogleToken;\n    this._refreshHandlers['facebook'] = OAuthHelper_1.FacebookOAuth.refreshFacebookToken;\n  }\n  CredentialsClass.prototype.getModuleName = function () {\n    return 'Credentials';\n  };\n  CredentialsClass.prototype.getCredSource = function () {\n    return this._credentials_source;\n  };\n  CredentialsClass.prototype.configure = function (config) {\n    if (!config) return this._config || {};\n    this._config = Object.assign({}, this._config, config);\n    var refreshHandlers = this._config.refreshHandlers;\n    // If the developer has provided an object of refresh handlers,\n    // then we can merge the provided handlers with the current handlers.\n    if (refreshHandlers) {\n      this._refreshHandlers = __assign(__assign({}, this._refreshHandlers), refreshHandlers);\n    }\n    this._storage = this._config.storage;\n    if (!this._storage) {\n      this._storage = new StorageHelper_1.StorageHelper().getStorage();\n    }\n    this._storageSync = Promise.resolve();\n    if (typeof this._storage['sync'] === 'function') {\n      this._storageSync = this._storage['sync']();\n    }\n    return this._config;\n  };\n  CredentialsClass.prototype.get = function () {\n    logger.debug('getting credentials');\n    return this._pickupCredentials();\n  };\n  // currently we only store the guest identity in local storage\n  CredentialsClass.prototype._getCognitoIdentityIdStorageKey = function (identityPoolId) {\n    return \"\" + COGNITO_IDENTITY_KEY_PREFIX + identityPoolId;\n  };\n  CredentialsClass.prototype._pickupCredentials = function () {\n    logger.debug('picking up credentials');\n    if (!this._gettingCredPromise || !this._gettingCredPromise.isPending()) {\n      logger.debug('getting new cred promise');\n      this._gettingCredPromise = JS_1.makeQuerablePromise(this._keepAlive());\n    } else {\n      logger.debug('getting old cred promise');\n    }\n    return this._gettingCredPromise;\n  };\n  CredentialsClass.prototype._keepAlive = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var cred, _a, Auth, user_1, session, refreshToken_1, refreshRequest, err_1;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            logger.debug('checking if credentials exists and not expired');\n            cred = this._credentials;\n            if (cred && !this._isExpired(cred) && !this._isPastTTL()) {\n              logger.debug('credentials not changed and not expired, directly return');\n              return [2 /*return*/, Promise.resolve(cred)];\n            }\n            logger.debug('need to get a new credential or refresh the existing one');\n            _a = this.Auth, Auth = _a === void 0 ? Amplify_1.Amplify.Auth : _a;\n            if (!Auth || typeof Auth.currentUserCredentials !== 'function') {\n              return [2 /*return*/, Promise.reject('No Auth module registered in Amplify')];\n            }\n            if (!(!this._isExpired(cred) && this._isPastTTL())) return [3 /*break*/, 6];\n            logger.debug('ttl has passed but token is not yet expired');\n            _b.label = 1;\n          case 1:\n            _b.trys.push([1, 5,, 6]);\n            return [4 /*yield*/, Auth.currentUserPoolUser()];\n          case 2:\n            user_1 = _b.sent();\n            return [4 /*yield*/, Auth.currentSession()];\n          case 3:\n            session = _b.sent();\n            refreshToken_1 = session.refreshToken;\n            refreshRequest = new Promise(function (res, rej) {\n              user_1.refreshSession(refreshToken_1, function (err, data) {\n                return err ? rej(err) : res(data);\n              });\n            });\n            return [4 /*yield*/, refreshRequest];\n          case 4:\n            _b.sent(); // note that rejections will be caught and handled in the catch block.\n            return [3 /*break*/, 6];\n          case 5:\n            err_1 = _b.sent();\n            // should not throw because user might just be on guest access or is authenticated through federation\n            logger.debug('Error attempting to refreshing the session', err_1);\n            return [3 /*break*/, 6];\n          case 6:\n            return [2 /*return*/, Auth.currentUserCredentials()];\n        }\n      });\n    });\n  };\n  CredentialsClass.prototype.refreshFederatedToken = function (federatedInfo) {\n    logger.debug('Getting federated credentials');\n    var provider = federatedInfo.provider,\n      user = federatedInfo.user,\n      token = federatedInfo.token,\n      identity_id = federatedInfo.identity_id;\n    var expires_at = federatedInfo.expires_at;\n    // Make sure expires_at is in millis\n    expires_at = new Date(expires_at).getFullYear() === 1970 ? expires_at * 1000 : expires_at;\n    var that = this;\n    logger.debug('checking if federated jwt token expired');\n    if (expires_at > new Date().getTime()) {\n      // if not expired\n      logger.debug('token not expired');\n      return this._setCredentialsFromFederation({\n        provider: provider,\n        token: token,\n        user: user,\n        identity_id: identity_id,\n        expires_at: expires_at\n      });\n    } else {\n      // if refresh handler exists\n      if (that._refreshHandlers[provider] && typeof that._refreshHandlers[provider] === 'function') {\n        logger.debug('getting refreshed jwt token from federation provider');\n        return this._providerRefreshWithRetry({\n          refreshHandler: that._refreshHandlers[provider],\n          provider: provider,\n          user: user\n        });\n      } else {\n        logger.debug('no refresh handler for provider:', provider);\n        this.clear();\n        return Promise.reject('no refresh handler for provider');\n      }\n    }\n  };\n  CredentialsClass.prototype._providerRefreshWithRetry = function (_a) {\n    var _this = this;\n    var refreshHandler = _a.refreshHandler,\n      provider = _a.provider,\n      user = _a.user;\n    var MAX_DELAY_MS = 10 * 1000;\n    // refreshHandler will retry network errors, otherwise it will\n    // return NonRetryableError to break out of jitteredExponentialRetry\n    return Util_1.jitteredExponentialRetry(refreshHandler, [], MAX_DELAY_MS).then(function (data) {\n      logger.debug('refresh federated token sucessfully', data);\n      return _this._setCredentialsFromFederation({\n        provider: provider,\n        token: data.token,\n        user: user,\n        identity_id: data.identity_id,\n        expires_at: data.expires_at\n      });\n    }).catch(function (e) {\n      var isNetworkError = typeof e === 'string' && e.toLowerCase().lastIndexOf('network error', e.length) === 0;\n      if (!isNetworkError) {\n        _this.clear();\n      }\n      logger.debug('refresh federated token failed', e);\n      return Promise.reject('refreshing federation token failed: ' + e);\n    });\n  };\n  CredentialsClass.prototype._isExpired = function (credentials) {\n    if (!credentials) {\n      logger.debug('no credentials for expiration check');\n      return true;\n    }\n    logger.debug('are these credentials expired?', credentials);\n    var ts = Date.now();\n    /* returns date object.\n        https://github.com/aws/aws-sdk-js-v3/blob/v1.0.0-beta.1/packages/types/src/credentials.ts#L26\n    */\n    var expiration = credentials.expiration;\n    return expiration.getTime() <= ts;\n  };\n  CredentialsClass.prototype._isPastTTL = function () {\n    return this._nextCredentialsRefresh <= Date.now();\n  };\n  CredentialsClass.prototype._setCredentialsForGuest = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, identityPoolId, region, mandatorySignIn, identityId, _b, cognitoClient, credentials, cognitoIdentityParams, credentialsProvider;\n      var _this = this;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            logger.debug('setting credentials for guest');\n            _a = this._config, identityPoolId = _a.identityPoolId, region = _a.region, mandatorySignIn = _a.mandatorySignIn;\n            if (mandatorySignIn) {\n              return [2 /*return*/, Promise.reject('cannot get guest credentials when mandatory signin enabled')];\n            }\n            if (!identityPoolId) {\n              logger.debug('No Cognito Identity pool provided for unauthenticated access');\n              return [2 /*return*/, Promise.reject('No Cognito Identity pool provided for unauthenticated access')];\n            }\n            if (!region) {\n              logger.debug('region is not configured for getting the credentials');\n              return [2 /*return*/, Promise.reject('region is not configured for getting the credentials')];\n            }\n            _b = this;\n            return [4 /*yield*/, this._getGuestIdentityId()];\n          case 1:\n            identityId = _b._identityId = _c.sent();\n            cognitoClient = new client_cognito_identity_1.CognitoIdentityClient({\n              region: region,\n              customUserAgent: Platform_1.getAmplifyUserAgent()\n            });\n            credentials = undefined;\n            if (identityId) {\n              cognitoIdentityParams = {\n                identityId: identityId,\n                client: cognitoClient\n              };\n              credentials = credential_provider_cognito_identity_1.fromCognitoIdentity(cognitoIdentityParams)();\n            } else {\n              credentialsProvider = function credentialsProvider() {\n                return __awaiter(_this, void 0, void 0, function () {\n                  var IdentityId, cognitoIdentityParams, credentialsFromCognitoIdentity;\n                  return __generator(this, function (_a) {\n                    switch (_a.label) {\n                      case 0:\n                        return [4 /*yield*/, cognitoClient.send(new client_cognito_identity_1.GetIdCommand({\n                          IdentityPoolId: identityPoolId\n                        }))];\n                      case 1:\n                        IdentityId = _a.sent().IdentityId;\n                        this._identityId = IdentityId;\n                        cognitoIdentityParams = {\n                          client: cognitoClient,\n                          identityId: IdentityId\n                        };\n                        credentialsFromCognitoIdentity = credential_provider_cognito_identity_1.fromCognitoIdentity(cognitoIdentityParams);\n                        return [2 /*return*/, credentialsFromCognitoIdentity()];\n                    }\n                  });\n                });\n              };\n              credentials = credentialsProvider().catch(function (err) {\n                return __awaiter(_this, void 0, void 0, function () {\n                  return __generator(this, function (_a) {\n                    throw err;\n                  });\n                });\n              });\n            }\n            return [2 /*return*/, this._loadCredentials(credentials, 'guest', false, null).then(function (res) {\n              return res;\n            }).catch(function (e) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var credentialsProvider;\n                var _this = this;\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      if (!(e.name === 'ResourceNotFoundException' && e.message === \"Identity '\" + identityId + \"' not found.\")) return [3 /*break*/, 2];\n                      logger.debug('Failed to load guest credentials');\n                      return [4 /*yield*/, this._removeGuestIdentityId()];\n                    case 1:\n                      _a.sent();\n                      credentialsProvider = function credentialsProvider() {\n                        return __awaiter(_this, void 0, void 0, function () {\n                          var IdentityId, cognitoIdentityParams, credentialsFromCognitoIdentity;\n                          return __generator(this, function (_a) {\n                            switch (_a.label) {\n                              case 0:\n                                return [4 /*yield*/, cognitoClient.send(new client_cognito_identity_1.GetIdCommand({\n                                  IdentityPoolId: identityPoolId\n                                }))];\n                              case 1:\n                                IdentityId = _a.sent().IdentityId;\n                                this._identityId = IdentityId;\n                                cognitoIdentityParams = {\n                                  client: cognitoClient,\n                                  identityId: IdentityId\n                                };\n                                credentialsFromCognitoIdentity = credential_provider_cognito_identity_1.fromCognitoIdentity(cognitoIdentityParams);\n                                return [2 /*return*/, credentialsFromCognitoIdentity()];\n                            }\n                          });\n                        });\n                      };\n                      credentials = credentialsProvider().catch(function (err) {\n                        return __awaiter(_this, void 0, void 0, function () {\n                          return __generator(this, function (_a) {\n                            throw err;\n                          });\n                        });\n                      });\n                      return [2 /*return*/, this._loadCredentials(credentials, 'guest', false, null)];\n                    case 2:\n                      return [2 /*return*/, e];\n                  }\n                });\n              });\n            })];\n        }\n      });\n    });\n  };\n  CredentialsClass.prototype._setCredentialsFromFederation = function (params) {\n    var provider = params.provider,\n      token = params.token,\n      identity_id = params.identity_id;\n    var domains = {\n      google: 'accounts.google.com',\n      facebook: 'graph.facebook.com',\n      amazon: 'www.amazon.com',\n      developer: 'cognito-identity.amazonaws.com'\n    };\n    // Use custom provider url instead of the predefined ones\n    var domain = domains[provider] || provider;\n    if (!domain) {\n      return Promise.reject('You must specify a federated provider');\n    }\n    var logins = {};\n    logins[domain] = token;\n    var _a = this._config,\n      identityPoolId = _a.identityPoolId,\n      region = _a.region;\n    if (!identityPoolId) {\n      logger.debug('No Cognito Federated Identity pool provided');\n      return Promise.reject('No Cognito Federated Identity pool provided');\n    }\n    if (!region) {\n      logger.debug('region is not configured for getting the credentials');\n      return Promise.reject('region is not configured for getting the credentials');\n    }\n    var cognitoClient = new client_cognito_identity_1.CognitoIdentityClient({\n      region: region,\n      customUserAgent: Platform_1.getAmplifyUserAgent()\n    });\n    var credentials = undefined;\n    if (identity_id) {\n      var cognitoIdentityParams = {\n        identityId: identity_id,\n        logins: logins,\n        client: cognitoClient\n      };\n      credentials = credential_provider_cognito_identity_1.fromCognitoIdentity(cognitoIdentityParams)();\n    } else {\n      var cognitoIdentityParams = {\n        logins: logins,\n        identityPoolId: identityPoolId,\n        client: cognitoClient\n      };\n      credentials = credential_provider_cognito_identity_1.fromCognitoIdentityPool(cognitoIdentityParams)();\n    }\n    return this._loadCredentials(credentials, 'federated', true, params);\n  };\n  CredentialsClass.prototype._setCredentialsFromSession = function (session) {\n    var _this = this;\n    logger.debug('set credentials from session');\n    var idToken = session.getIdToken().getJwtToken();\n    var _a = this._config,\n      region = _a.region,\n      userPoolId = _a.userPoolId,\n      identityPoolId = _a.identityPoolId;\n    if (!identityPoolId) {\n      logger.debug('No Cognito Federated Identity pool provided');\n      return Promise.reject('No Cognito Federated Identity pool provided');\n    }\n    if (!region) {\n      logger.debug('region is not configured for getting the credentials');\n      return Promise.reject('region is not configured for getting the credentials');\n    }\n    var key = 'cognito-idp.' + region + '.amazonaws.com/' + userPoolId;\n    var logins = {};\n    logins[key] = idToken;\n    var cognitoClient = new client_cognito_identity_1.CognitoIdentityClient({\n      region: region,\n      customUserAgent: Platform_1.getAmplifyUserAgent()\n    });\n    /*\n        Retreiving identityId with GetIdCommand to mimic the behavior in the following code in aws-sdk-v3:\n        https://git.io/JeDxU\n         Note: Retreive identityId from CredentialsProvider once aws-sdk-js v3 supports this.\n    */\n    var credentialsProvider = function credentialsProvider() {\n      return __awaiter(_this, void 0, void 0, function () {\n        var guestIdentityId, generatedOrRetrievedIdentityId, IdentityId, _a, _b, AccessKeyId, Expiration, SecretKey, SessionToken, primaryIdentityId;\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              return [4 /*yield*/, this._getGuestIdentityId()];\n            case 1:\n              guestIdentityId = _c.sent();\n              if (!!guestIdentityId) return [3 /*break*/, 3];\n              return [4 /*yield*/, cognitoClient.send(new client_cognito_identity_1.GetIdCommand({\n                IdentityPoolId: identityPoolId,\n                Logins: logins\n              }))];\n            case 2:\n              IdentityId = _c.sent().IdentityId;\n              generatedOrRetrievedIdentityId = IdentityId;\n              _c.label = 3;\n            case 3:\n              return [4 /*yield*/, cognitoClient.send(new client_cognito_identity_1.GetCredentialsForIdentityCommand({\n                IdentityId: guestIdentityId || generatedOrRetrievedIdentityId,\n                Logins: logins\n              }))];\n            case 4:\n              _a = _c.sent(), _b = _a.Credentials, AccessKeyId = _b.AccessKeyId, Expiration = _b.Expiration, SecretKey = _b.SecretKey, SessionToken = _b.SessionToken, primaryIdentityId = _a.IdentityId;\n              this._identityId = primaryIdentityId;\n              if (!guestIdentityId) return [3 /*break*/, 6];\n              // if guestIdentity is found and used by GetCredentialsForIdentity\n              // it will be linked to the logins provided, and disqualified as an unauth identity\n              logger.debug(\"The guest identity \" + guestIdentityId + \" has been successfully linked to the logins\");\n              if (guestIdentityId === primaryIdentityId) {\n                logger.debug(\"The guest identity \" + guestIdentityId + \" has become the primary identity\");\n              }\n              // remove it from local storage to avoid being used as a guest Identity by _setCredentialsForGuest\n              return [4 /*yield*/, this._removeGuestIdentityId()];\n            case 5:\n              // remove it from local storage to avoid being used as a guest Identity by _setCredentialsForGuest\n              _c.sent();\n              _c.label = 6;\n            case 6:\n              // https://github.com/aws/aws-sdk-js-v3/blob/main/packages/credential-provider-cognito-identity/src/fromCognitoIdentity.ts#L40\n              return [2 /*return*/, {\n                accessKeyId: AccessKeyId,\n                secretAccessKey: SecretKey,\n                sessionToken: SessionToken,\n                expiration: Expiration,\n                identityId: primaryIdentityId\n              }];\n          }\n        });\n      });\n    };\n    var credentials = credentialsProvider().catch(function (err) {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          throw err;\n        });\n      });\n    });\n    return this._loadCredentials(credentials, 'userPool', true, null);\n  };\n  CredentialsClass.prototype._loadCredentials = function (credentials, source, authenticated, info) {\n    var _this = this;\n    var that = this;\n    return new Promise(function (res, rej) {\n      credentials.then(function (credentials) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var user, provider, token, expires_at, identity_id;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                logger.debug('Load credentials successfully', credentials);\n                if (this._identityId && !credentials.identityId) {\n                  credentials['identityId'] = this._identityId;\n                }\n                that._credentials = credentials;\n                that._credentials.authenticated = authenticated;\n                that._credentials_source = source;\n                that._nextCredentialsRefresh = new Date().getTime() + CREDENTIALS_TTL;\n                if (source === 'federated') {\n                  user = Object.assign({\n                    id: this._credentials.identityId\n                  }, info.user);\n                  provider = info.provider, token = info.token, expires_at = info.expires_at, identity_id = info.identity_id;\n                  try {\n                    this._storage.setItem('aws-amplify-federatedInfo', JSON.stringify({\n                      provider: provider,\n                      token: token,\n                      user: user,\n                      expires_at: expires_at,\n                      identity_id: identity_id\n                    }));\n                  } catch (e) {\n                    logger.debug('Failed to put federated info into auth storage', e);\n                  }\n                }\n                if (!(source === 'guest')) return [3 /*break*/, 2];\n                return [4 /*yield*/, this._setGuestIdentityId(credentials.identityId)];\n              case 1:\n                _a.sent();\n                _a.label = 2;\n              case 2:\n                res(that._credentials);\n                return [2 /*return*/];\n            }\n          });\n        });\n      }).catch(function (err) {\n        if (err) {\n          logger.debug('Failed to load credentials', credentials);\n          logger.debug('Error loading credentials', err);\n          rej(err);\n          return;\n        }\n      });\n    });\n  };\n  CredentialsClass.prototype.set = function (params, source) {\n    if (source === 'session') {\n      return this._setCredentialsFromSession(params);\n    } else if (source === 'federation') {\n      return this._setCredentialsFromFederation(params);\n    } else if (source === 'guest') {\n      return this._setCredentialsForGuest();\n    } else {\n      logger.debug('no source specified for setting credentials');\n      return Promise.reject('invalid source');\n    }\n  };\n  CredentialsClass.prototype.clear = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        this._credentials = null;\n        this._credentials_source = null;\n        logger.debug('removing aws-amplify-federatedInfo from storage');\n        this._storage.removeItem('aws-amplify-federatedInfo');\n        return [2 /*return*/];\n      });\n    });\n  };\n  /* operations on local stored guest identity */\n  CredentialsClass.prototype._getGuestIdentityId = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var identityPoolId, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            identityPoolId = this._config.identityPoolId;\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, this._storageSync];\n          case 2:\n            _a.sent();\n            return [2 /*return*/, this._storage.getItem(this._getCognitoIdentityIdStorageKey(identityPoolId))];\n          case 3:\n            e_1 = _a.sent();\n            logger.debug('Failed to get the cached guest identityId', e_1);\n            return [3 /*break*/, 4];\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  CredentialsClass.prototype._setGuestIdentityId = function (identityId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identityPoolId, e_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            identityPoolId = this._config.identityPoolId;\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, this._storageSync];\n          case 2:\n            _a.sent();\n            this._storage.setItem(this._getCognitoIdentityIdStorageKey(identityPoolId), identityId);\n            return [3 /*break*/, 4];\n          case 3:\n            e_2 = _a.sent();\n            logger.debug('Failed to cache guest identityId', e_2);\n            return [3 /*break*/, 4];\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  CredentialsClass.prototype._removeGuestIdentityId = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var identityPoolId;\n      return __generator(this, function (_a) {\n        identityPoolId = this._config.identityPoolId;\n        logger.debug(\"removing \" + this._getCognitoIdentityIdStorageKey(identityPoolId) + \" from storage\");\n        this._storage.removeItem(this._getCognitoIdentityIdStorageKey(identityPoolId));\n        return [2 /*return*/];\n      });\n    });\n  };\n  /**\n   * Compact version of credentials\n   * @param {Object} credentials\n   * @return {Object} - Credentials\n   */\n  CredentialsClass.prototype.shear = function (credentials) {\n    return {\n      accessKeyId: credentials.accessKeyId,\n      sessionToken: credentials.sessionToken,\n      secretAccessKey: credentials.secretAccessKey,\n      identityId: credentials.identityId,\n      authenticated: credentials.authenticated\n    };\n  };\n  return CredentialsClass;\n}();\nexports.CredentialsClass = CredentialsClass;\nexports.Credentials = new CredentialsClass(null);\nAmplify_1.Amplify.register(exports.Credentials);\n/**\n * @deprecated use named import\n */\nexports.default = exports.Credentials;","map":{"version":3,"names":["Logger_1","require","StorageHelper_1","JS_1","OAuthHelper_1","Util_1","Platform_1","Amplify_1","credential_provider_cognito_identity_1","client_cognito_identity_1","logger","ConsoleLogger","CREDENTIALS_TTL","COGNITO_IDENTITY_KEY_PREFIX","CredentialsClass","config","_gettingCredPromise","_refreshHandlers","Auth","undefined","configure","GoogleOAuth","refreshGoogleToken","FacebookOAuth","refreshFacebookToken","prototype","getModuleName","getCredSource","_credentials_source","_config","Object","assign","refreshHandlers","__assign","_storage","storage","StorageHelper","getStorage","_storageSync","Promise","resolve","get","debug","_pickupCredentials","_getCognitoIdentityIdStorageKey","identityPoolId","isPending","makeQuerablePromise","_keepAlive","cred","_credentials","_isExpired","_isPastTTL","_a","Amplify","currentUserCredentials","reject","currentUserPoolUser","user_1","_b","sent","currentSession","session","refreshToken_1","refreshToken","refreshRequest","res","rej","refreshSession","err","data","err_1","refreshFederatedToken","federatedInfo","provider","user","token","identity_id","expires_at","Date","getFullYear","that","getTime","_setCredentialsFromFederation","_providerRefreshWithRetry","refreshHandler","clear","_this","MAX_DELAY_MS","jitteredExponentialRetry","then","catch","e","isNetworkError","toLowerCase","lastIndexOf","length","credentials","ts","now","expiration","_nextCredentialsRefresh","_setCredentialsForGuest","region","mandatorySignIn","_getGuestIdentityId","identityId","_identityId","_c","cognitoClient","CognitoIdentityClient","customUserAgent","getAmplifyUserAgent","cognitoIdentityParams","client","fromCognitoIdentity","credentialsProvider","__awaiter","send","GetIdCommand","IdentityPoolId","IdentityId","credentialsFromCognitoIdentity","_loadCredentials","name","message","_removeGuestIdentityId","params","domains","google","facebook","amazon","developer","domain","logins","fromCognitoIdentityPool","_setCredentialsFromSession","idToken","getIdToken","getJwtToken","userPoolId","key","guestIdentityId","Logins","generatedOrRetrievedIdentityId","GetCredentialsForIdentityCommand","Credentials","AccessKeyId","Expiration","SecretKey","SessionToken","primaryIdentityId","accessKeyId","secretAccessKey","sessionToken","source","authenticated","info","id","setItem","JSON","stringify","_setGuestIdentityId","set","removeItem","getItem","e_1","e_2","shear","exports","register","default"],"sources":["../src/Credentials.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script"}