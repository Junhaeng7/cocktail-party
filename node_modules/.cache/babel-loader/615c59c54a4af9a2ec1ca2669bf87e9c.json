{"ast":null,"code":"import _slicedToArray from \"/Users/Junhaeng/untitled folder/junior-design/amplifyapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/Users/Junhaeng/untitled folder/junior-design/amplifyapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/Junhaeng/untitled folder/junior-design/amplifyapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Junhaeng/untitled folder/junior-design/amplifyapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/Junhaeng/untitled folder/junior-design/amplifyapp/src/components/pages/File_Browser/s3Browser.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport AWS from 'aws-sdk';\nimport { ChonkyActions, FileBrowser, FileList, FileNavbar, FileToolbar, setChonkyDefaults } from 'chonky';\nimport { ChonkyIconFA } from 'chonky-icon-fontawesome';\nimport path from 'path';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport awsconfig from 'components/../aws-exports';\nimport Amplify from 'aws-amplify';\nimport { Storage } from 'aws-amplify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import { useStoryLinks } from './util';\n\nAmplify.configure(awsconfig);\nsetChonkyDefaults({\n  iconComponent: ChonkyIconFA\n});\n\n// The AWS credentials below only have read-only access to the Chonky demo bucket.\n// You will need to create custom credentials for your bucket.\nvar BUCKET_NAME = 'los-pollos-hermanos-bucket';\nvar BUCKET_REGION = 'us-east-1';\nvar defaultProps = {\n  bucket: \"los-pollos-hermanos\",\n  region: \"us-east-1\"\n};\n\n// const getCred = async () => await Storage.get(\"labelerCred.json\")\n//     .then(async resp => {\n//         const url = `${JSON.stringify(resp)}`.slice(1,-1);\n//         await fetch(url)\n//             .then(res => res.json())\n//             .then(data => {\n//                 // console.log(data.ACCESS_KEY_ID);\n//                 // console.log(data.SECRET_ACCESS_KEY);\n\n//                 AWS.config.update({\n//                     region: BUCKET_REGION,\n//                     accessKeyId: data.ACCESS_KEY_ID,\n//                     secretAccessKey: data.SECRET_ACCESS_KEY,\n//                 });\n//                 console.log('files loaded');\n//             })\n//         .catch(err => console.error(err));\n//     });\n// getCred();\n\nvar fetchS3BucketContents = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(bucket, prefix, region) {\n    var s3;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return Storage.get(\"labelerCred.json\").then( /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(resp) {\n                var url;\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        url = \"\".concat(JSON.stringify(resp)).slice(1, -1);\n                        _context.next = 3;\n                        return fetch(url).then(function (res) {\n                          return res.json();\n                        }).then(function (data) {\n                          AWS.config.update({\n                            region: BUCKET_REGION,\n                            accessKeyId: data.ACCESS_KEY_ID,\n                            secretAccessKey: data.SECRET_ACCESS_KEY\n                          });\n                          console.log('files loaded');\n                        }).catch(function (err) {\n                          return console.error(err);\n                        });\n                      case 3:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n              return function (_x4) {\n                return _ref2.apply(this, arguments);\n              };\n            }());\n          case 2:\n            s3 = new AWS.S3();\n            return _context2.abrupt(\"return\", s3.listObjectsV2({\n              Bucket: bucket,\n              Delimiter: '/',\n              // Prefix: 'audio/00/',\n              Prefix: prefix !== '/' ? prefix : ''\n            }).promise().then(function (response) {\n              var chonkyFiles = [];\n              // const s3Objects = response.Contents;\n              var s3Objects = response.Contents ? response.Contents.filter(function (item) {\n                var _item$Key;\n                return (_item$Key = item.Key) === null || _item$Key === void 0 ? void 0 : _item$Key.endsWith('.flac');\n              }) : [];\n              console.log(response.Contents);\n              var s3Prefixes = response.CommonPrefixes;\n              console.log(response.CommonPrefixes);\n              // const s3Prefixes = response.CommonPrefixes ? response.CommonPrefixes?.filter(item => s3Objects?.forEach(e => e.Key?.includes(item.Prefix ? item.Prefix : ''))) : response.CommonPrefixes;\n              // const s3Prefixes = response.CommonPrefixes ? response.CommonPrefixes.filter(item => item.Key.endsWith('.flac')) : response.CommonPrefixes;\n\n              // let dir = [...s3Objects?.map(item => item?.Key)];\n              // dir = dir.map(item => item?.split('/').slice(0, -1).join('/'));\n              // let dir2 = [];\n              // dir.forEach(el => {\n              //     el?.split('/').slice(0, -1).join('/');\n              // });\n\n              if (s3Objects) {\n                // console.log(s3Objects.length);\n                // console.log(s3Objects[0].Key);\n                // console.log(dir[0]);\n                chonkyFiles.push.apply(chonkyFiles, _toConsumableArray(s3Objects.map(function (object) {\n                  return {\n                    id: object.Key,\n                    name: path.basename(object.Key),\n                    modDate: object.LastModified,\n                    size: object.Size\n                  };\n                })));\n                // chonkyFiles.push(\n                //     ...dir.map(\n                //         (object): FileData => ({\n                //             id: object!,\n                //             name: path.basename(object!),\n                //             isDir: true,\n                //         })\n                //     )\n                // );\n              }\n\n              if (s3Prefixes) {\n                // console.log(s3Prefixes.length);\n                chonkyFiles.push.apply(chonkyFiles, _toConsumableArray(s3Prefixes.map(function (prefix) {\n                  return {\n                    id: prefix.Prefix,\n                    name: path.basename(prefix.Prefix),\n                    isDir: true\n                  };\n                })));\n              }\n              return chonkyFiles;\n            }));\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return function fetchS3BucketContents(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar storyName = 'AWS S3 Browser';\nvar S3Browser = function S3Browser(_ref3) {\n  _s();\n  var bucket = _ref3.bucket,\n    region = _ref3.region;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    error = _useState2[0],\n    setError = _useState2[1];\n  var _useState3 = useState('/'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    folderPrefix = _useState4[0],\n    setKeyPrefix = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    files = _useState6[0],\n    setFiles = _useState6[1];\n  var BUCKET_NAME = bucket;\n  var BUCKET_REGION = region;\n  useEffect(function () {\n    console.log(\"REGION:\" + BUCKET_REGION);\n    fetchS3BucketContents(BUCKET_NAME, folderPrefix, BUCKET_REGION).then(setFiles).catch(function (error) {\n      return setError(error.message);\n    });\n  }, [folderPrefix, setFiles]);\n  var folderChain = React.useMemo(function () {\n    var folderChain;\n    if (folderPrefix === '/') {\n      folderChain = [];\n    } else {\n      var currentPrefix = '';\n      folderChain = folderPrefix.replace(/\\/*$/, '').split('/').map(function (prefixPart) {\n        currentPrefix = currentPrefix ? path.join(currentPrefix, prefixPart) : prefixPart;\n        return {\n          id: currentPrefix,\n          name: prefixPart,\n          isDir: true\n        };\n      });\n    }\n    folderChain.unshift({\n      id: '/',\n      name: BUCKET_NAME,\n      isDir: true\n    });\n    return folderChain;\n  }, [folderPrefix]);\n  var history = useHistory();\n  var handleFileAction = useCallback(function (data) {\n    if (data.id === ChonkyActions.OpenFiles.id) {\n      // if ( data.payload.clickType === \"double\" && data.payload.file.id.slice(id.length - 5) === '.flac') {\n\n      // }\n      if (data.payload.files && data.payload.files.length !== 1) return;\n      if (!data.payload.targetFile || !data.payload.targetFile.isDir) return;\n      var newPrefix = \"\".concat(data.payload.targetFile.id.replace(/\\/*$/, ''), \"/\");\n      console.log(\"Key prefix: \".concat(newPrefix));\n      setKeyPrefix(newPrefix);\n    }\n    if (data.id === ChonkyActions.MouseClickFile.id) {\n      if (data.payload.clickType === \"double\" && data.payload.file.name.slice(data.payload.file.name.length - 5) === '.flac') {\n        var myS3 = new AWS.S3({\n          region: BUCKET_REGION\n        });\n        var url = myS3.getSignedUrl('getObject', {\n          Bucket: BUCKET_NAME,\n          Key: data.payload.file.id,\n          Expires: 600\n        });\n        var filename = data.payload.file.id;\n        var props_to_pass = {\n          link: url,\n          file: filename\n        };\n        history.push('/spectrogram', props_to_pass);\n      }\n    }\n  }, [setKeyPrefix]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"story-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"story-description\",\n      children: error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"story-error\",\n        children: [\"An error has occurred while loading bucket:\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"fileBrowser\",\n      children: /*#__PURE__*/_jsxDEV(FileBrowser, {\n        instanceId: storyName,\n        files: files,\n        folderChain: folderChain,\n        onFileAction: handleFileAction,\n        defaultFileViewActionId: ChonkyActions.EnableListView.id,\n        children: [/*#__PURE__*/_jsxDEV(FileNavbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(FileToolbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(FileList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 9\n  }, _this);\n};\n_s(S3Browser, \"cPkWeq1NUA7aZ0neRNWZudan9XI=\", false, function () {\n  return [useHistory];\n});\n_c = S3Browser;\nS3Browser.storyName = storyName;\nS3Browser.defaultProps = defaultProps;\nexport default S3Browser;\nvar _c;\n$RefreshReg$(_c, \"S3Browser\");","map":{"version":3,"names":["AWS","ChonkyActions","FileBrowser","FileList","FileNavbar","FileToolbar","setChonkyDefaults","ChonkyIconFA","path","React","useCallback","useEffect","useState","useHistory","awsconfig","Amplify","Storage","jsxDEV","_jsxDEV","configure","iconComponent","BUCKET_NAME","BUCKET_REGION","defaultProps","bucket","region","fetchS3BucketContents","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","prefix","s3","wrap","_callee2$","_context2","prev","next","get","then","_ref2","_callee","resp","url","_callee$","_context","concat","JSON","stringify","slice","fetch","res","json","data","config","update","accessKeyId","ACCESS_KEY_ID","secretAccessKey","SECRET_ACCESS_KEY","console","log","catch","err","error","stop","_x4","apply","arguments","S3","abrupt","listObjectsV2","Bucket","Delimiter","Prefix","promise","response","chonkyFiles","s3Objects","Contents","filter","item","_item$Key","Key","endsWith","s3Prefixes","CommonPrefixes","push","_toConsumableArray","map","object","id","name","basename","modDate","LastModified","size","Size","isDir","_x","_x2","_x3","storyName","S3Browser","_ref3","_s","_useState","_useState2","_slicedToArray","setError","_useState3","_useState4","folderPrefix","setKeyPrefix","_useState5","_useState6","files","setFiles","message","folderChain","useMemo","currentPrefix","replace","split","prefixPart","join","unshift","history","handleFileAction","OpenFiles","payload","length","targetFile","newPrefix","MouseClickFile","clickType","file","myS3","getSignedUrl","Expires","filename","props_to_pass","link","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","instanceId","onFileAction","defaultFileViewActionId","EnableListView","_c","$RefreshReg$"],"sources":["/Users/Junhaeng/untitled folder/junior-design/amplifyapp/src/components/pages/File_Browser/s3Browser.tsx"],"sourcesContent":["import AWS from 'aws-sdk';\nimport {\n    ChonkyActions,\n    ChonkyFileActionData,\n    FileArray,\n    FileBrowser,\n    FileData,\n    FileList,\n    FileNavbar,\n    FileToolbar,\n    setChonkyDefaults,\n} from 'chonky';\nimport { ChonkyIconFA } from 'chonky-icon-fontawesome';\nimport path from 'path';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory, withRouter, Route } from \"react-router-dom\";\nimport awsconfig from 'components/../aws-exports'\nimport Amplify from 'aws-amplify'\nimport { Storage } from 'aws-amplify';\nimport Spectrogramview from 'components/Spectrogramview';\n// import { useStoryLinks } from './util';\n\nAmplify.configure(awsconfig)\n\nsetChonkyDefaults({ iconComponent: ChonkyIconFA });\n\n// The AWS credentials below only have read-only access to the Chonky demo bucket.\n// You will need to create custom credentials for your bucket.\nconst BUCKET_NAME = 'los-pollos-hermanos-bucket';\nconst BUCKET_REGION = 'us-east-1';\n\ntype BrowserProps = {\n    bucket : string;\n    region : string;\n}\n\nconst defaultProps = {\n    bucket: \"los-pollos-hermanos\",\n    region : \"us-east-1\"\n}\n\n// const getCred = async () => await Storage.get(\"labelerCred.json\")\n//     .then(async resp => {\n//         const url = `${JSON.stringify(resp)}`.slice(1,-1);\n//         await fetch(url)\n//             .then(res => res.json())\n//             .then(data => {\n//                 // console.log(data.ACCESS_KEY_ID);\n//                 // console.log(data.SECRET_ACCESS_KEY);\n\n//                 AWS.config.update({\n//                     region: BUCKET_REGION,\n//                     accessKeyId: data.ACCESS_KEY_ID,\n//                     secretAccessKey: data.SECRET_ACCESS_KEY,\n//                 });\n//                 console.log('files loaded');\n//             })\n//         .catch(err => console.error(err));\n//     });\n// getCred();\n\n\nconst fetchS3BucketContents = async (bucket: string, prefix: string, region: string): Promise<FileArray> => {\n\n    await Storage.get(\"labelerCred.json\")\n        .then(async resp => {\n            const url = `${JSON.stringify(resp)}`.slice(1,-1);\n            await fetch(url)\n                .then(res => res.json())\n                .then(data => {\n                    AWS.config.update({\n                        region: BUCKET_REGION,\n                        accessKeyId: data.ACCESS_KEY_ID,\n                        secretAccessKey: data.SECRET_ACCESS_KEY,\n                    });\n                    console.log('files loaded');\n                })\n            .catch(err => console.error(err));\n        }\n    );\n\n    const s3 = new AWS.S3();\n    return s3\n        .listObjectsV2({\n            Bucket: bucket,\n            Delimiter: '/',\n            // Prefix: 'audio/00/',\n            Prefix: prefix !== '/' ? prefix : '',\n        })\n        .promise()\n        .then((response) => {\n            const chonkyFiles: FileArray = [];\n            // const s3Objects = response.Contents;\n            const s3Objects : AWS.S3.Object[] = response.Contents ? response.Contents.filter(item => item.Key?.endsWith('.flac')) : [];\n            console.log(response.Contents);\n            const s3Prefixes = response.CommonPrefixes;\n            console.log(response.CommonPrefixes);\n            // const s3Prefixes = response.CommonPrefixes ? response.CommonPrefixes?.filter(item => s3Objects?.forEach(e => e.Key?.includes(item.Prefix ? item.Prefix : ''))) : response.CommonPrefixes;\n            // const s3Prefixes = response.CommonPrefixes ? response.CommonPrefixes.filter(item => item.Key.endsWith('.flac')) : response.CommonPrefixes;\n\n\n            // let dir = [...s3Objects?.map(item => item?.Key)];\n            // dir = dir.map(item => item?.split('/').slice(0, -1).join('/'));\n            // let dir2 = [];\n            // dir.forEach(el => {\n            //     el?.split('/').slice(0, -1).join('/');\n            // });\n\n            if (s3Objects) {\n                // console.log(s3Objects.length);\n                // console.log(s3Objects[0].Key);\n                // console.log(dir[0]);\n                chonkyFiles.push(\n                    ...s3Objects.map(\n                        (object): FileData => ({\n                            id: object.Key!,\n                            name: path.basename(object.Key!),\n                            modDate: object.LastModified,\n                            size: object.Size,\n                        })\n                    )\n                );\n                // chonkyFiles.push(\n                //     ...dir.map(\n                //         (object): FileData => ({\n                //             id: object!,\n                //             name: path.basename(object!),\n                //             isDir: true,\n                //         })\n                //     )\n                // );\n            }\n\n            if (s3Prefixes) {\n                // console.log(s3Prefixes.length);\n                chonkyFiles.push(\n                    ...s3Prefixes.map(\n                        (prefix): FileData => ({\n                            id: prefix.Prefix!,\n                            name: path.basename(prefix.Prefix!),\n                            isDir: true,\n                        })\n                    )\n                );\n            }\n\n            return chonkyFiles;\n        });\n};\n\nconst storyName = 'AWS S3 Browser';\nconst S3Browser : React.FC<BrowserProps> = ({bucket, region}) => {\n\n    const [error, setError] = useState<string | null>(null);\n    const [folderPrefix, setKeyPrefix] = useState<string>('/');\n    const [files, setFiles] = useState<FileArray>([]);\n\n    const BUCKET_NAME = bucket;\n    const BUCKET_REGION = region;\n\n    useEffect(() => {\n        console.log(\"REGION:\" + BUCKET_REGION);\n        fetchS3BucketContents(BUCKET_NAME, folderPrefix, BUCKET_REGION)\n            .then(setFiles)\n            .catch((error) => setError(error.message));\n    }, [folderPrefix, setFiles]);\n\n    const folderChain = React.useMemo(() => {\n        let folderChain: FileArray;\n        if (folderPrefix === '/') {\n            folderChain = [];\n        } else {\n            let currentPrefix = '';\n            folderChain = folderPrefix\n                .replace(/\\/*$/, '')\n                .split('/')\n                .map(\n                    (prefixPart): FileData => {\n                        currentPrefix = currentPrefix\n                            ? path.join(currentPrefix, prefixPart)\n                            : prefixPart;\n                        return {\n                            id: currentPrefix,\n                            name: prefixPart,\n                            isDir: true,\n                        };\n                    }\n                );\n        }\n        folderChain.unshift({\n            id: '/',\n            name: BUCKET_NAME,\n            isDir: true,\n        });\n        return folderChain;\n    }, [folderPrefix]);\n\n    let history = useHistory();\n\n    const handleFileAction = useCallback(\n        (data: ChonkyFileActionData) => {\n            if (data.id === ChonkyActions.OpenFiles.id) {\n                // if ( data.payload.clickType === \"double\" && data.payload.file.id.slice(id.length - 5) === '.flac') {\n\n                // }\n                if (data.payload.files && data.payload.files.length !== 1) return;\n                if (!data.payload.targetFile || !data.payload.targetFile.isDir) return;\n\n                const newPrefix = `${data.payload.targetFile.id.replace(/\\/*$/, '')}/`;\n                console.log(`Key prefix: ${newPrefix}`);\n                setKeyPrefix(newPrefix);\n            }\n            if (data.id === ChonkyActions.MouseClickFile.id) {\n                if (data.payload.clickType === \"double\" && data.payload.file.name.slice(data.payload.file.name.length - 5) === '.flac') {\n                    const myS3 = new AWS.S3({region: BUCKET_REGION});\n                    const url = myS3.getSignedUrl('getObject',{\n                        Bucket: BUCKET_NAME,\n                        Key: data.payload.file.id,\n                        Expires: 600\n                    });\n                    var filename = data.payload.file.id;\n                    \n                    const props_to_pass = {\n                        link : url,\n                        file : filename\n                    }\n\n                    history.push('/spectrogram', props_to_pass);\n                }\n            }\n        },\n        [setKeyPrefix]\n    );\n\n    return (\n        <div className=\"story-wrapper\">\n            <div className=\"story-description\">\n                {/* <h1 className=\"story-title\">{storyName}</h1>\n                <p>\n                    This example fetches data from a real S3 bucket. If you open the\n                    \"Network\" tab of your browser's dev tools, you will see S3 API\n                    requests being sent in real-time as you enter different folders.\n                </p>\n                <p>\n                    Note that the AWS SDK in this example is configured to have{' '}\n                    <strong>read-only</strong> access to Chonky's demo bucket, called\n                    <code>{BUCKET_NAME}</code>. To use a custom bucket, you will need to\n                    setup appropriate IAM roles and permissions. Please remember to\n                    restrict public access to your data!\n                </p>\n                <div className=\"story-links\">\n                    {useStoryLinks([\n                        { gitPath: '2.x_storybook/src/demos/S3Browser.tsx' },\n                    ])}\n                </div> */}\n                {error && (\n                    <div className=\"story-error\">\n                        An error has occurred while loading bucket:{' '}\n                        <strong>{error}</strong>\n                    </div>\n                )}\n            </div>\n            <div id =\"fileBrowser\" >\n                <FileBrowser\n                    instanceId={storyName}\n                    files={files}\n                    folderChain={folderChain}\n                    onFileAction={handleFileAction}\n                    defaultFileViewActionId={ChonkyActions.EnableListView.id}\n                >\n                    <FileNavbar />\n                    <FileToolbar />\n                    <FileList />\n                </FileBrowser>\n            </div>\n        </div>\n    );\n};\n(S3Browser as any).storyName = storyName;\nS3Browser.defaultProps = defaultProps;\n\nexport default S3Browser;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}