{"ast":null,"code":"import _classCallCheck from \"/Users/Junhaeng/Desktop/cocktail/amplifyapp/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/Junhaeng/Desktop/cocktail/amplifyapp/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/Junhaeng/Desktop/cocktail/amplifyapp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/Junhaeng/Desktop/cocktail/amplifyapp/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/Junhaeng/Desktop/cocktail/amplifyapp/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _get from \"/Users/Junhaeng/Desktop/cocktail/amplifyapp/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/Junhaeng/Desktop/cocktail/amplifyapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport { MixedType } from './MixedType';\nexport var DateType = /*#__PURE__*/function (_MixedType) {\n  _inherits(DateType, _MixedType);\n  var _super = _createSuper(DateType);\n  function DateType(errorMessage) {\n    var _thisSuper, _this;\n    _classCallCheck(this, DateType);\n    _this = _super.call(this, 'date');\n    _get((_thisSuper = _assertThisInitialized(_this), _getPrototypeOf(DateType.prototype)), \"pushRule\", _thisSuper).call(_thisSuper, {\n      onValid: function onValid(value) {\n        return !/Invalid|NaN/.test(new Date(value).toString());\n      },\n      errorMessage: errorMessage || _this.locale.type\n    });\n    return _this;\n  }\n  _createClass(DateType, [{\n    key: \"range\",\n    value: function range(min, max) {\n      var errorMessage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.locale.range;\n      _get(_getPrototypeOf(DateType.prototype), \"pushRule\", this).call(this, {\n        onValid: function onValid(value) {\n          return new Date(value) >= new Date(min) && new Date(value) <= new Date(max);\n        },\n        errorMessage: errorMessage,\n        params: {\n          min: min,\n          max: max\n        }\n      });\n      return this;\n    }\n  }, {\n    key: \"min\",\n    value: function min(_min) {\n      var errorMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.locale.min;\n      _get(_getPrototypeOf(DateType.prototype), \"pushRule\", this).call(this, {\n        onValid: function onValid(value) {\n          return new Date(value) >= new Date(_min);\n        },\n        errorMessage: errorMessage,\n        params: {\n          min: _min\n        }\n      });\n      return this;\n    }\n  }, {\n    key: \"max\",\n    value: function max(_max) {\n      var errorMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.locale.max;\n      _get(_getPrototypeOf(DateType.prototype), \"pushRule\", this).call(this, {\n        onValid: function onValid(value) {\n          return new Date(value) <= new Date(_max);\n        },\n        errorMessage: errorMessage,\n        params: {\n          max: _max\n        }\n      });\n      return this;\n    }\n  }]);\n  return DateType;\n}(MixedType);\nexport default function getDateType(errorMessage) {\n  return new DateType(errorMessage);\n}","map":{"version":3,"sources":["../src/DateType.ts"],"names":[],"mappings":";;;;;;;AAAA,SAAS,SAAS,QAAQ,aAAa;AAIvC,WAAa,QAA+C,0BAAA,UAAA;EAAA,SAAA,CAAA,QAAA,EAAA,UAAA;EAAA,IAAA,MAAA,GAAA,YAAA,CAAA,QAAA;EAM1D,SAAA,SAAY,YAAyB,EAAA;IAAA,IAAA,UAAA,EAAA,KAAA;IAAA,eAAA,OAAA,QAAA;IACnC,KAAA,GAAA,MAAA,CAAA,IAAA,OAAM,MAAM;IACZ,IAAA,EAAA,UAAA,GAAA,sBAAA,CAAA,KAAA,GAAA,eAAA,CAAA,QAAA,CAAA,SAAA,gBAAA,UAAA,EAAA,IAAA,CAAA,UAAA,EAAe;MACb,OAAO,EAAE,SAAA,QAAA,KAAK;QAAA,OAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;MAAA;MACjE,YAAY,EAAE,YAAY,IAAI,KAAA,CAAK,MAAM,CAAC;KAC3C;IAAE,OAAA,KAAA;EACL;EAAC,YAAA,CAAA,QAAA;IAAA,GAAA;IAAA,KAAA,EAED,SAAA,MAAM,GAAkB,EAAE,GAAkB,EAA8C;MAAA,IAA5C,YAAA,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAA2B,IAAI,CAAC,MAAM,CAAC,KAAK;MACxF,IAAA,CAAA,eAAA,CAAA,QAAA,CAAA,SAAA,qBAAA,IAAA,OAAe;QACb,OAAO,EAAE,SAAA,QAAA,KAAK;UAAA,OAAI,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC;QAAA;QACtF,YAAY,EAAZ,YAAY;QACZ,MAAM,EAAE;UAAE,GAAG,EAAH,GAAG;UAAE,GAAG,EAAH;QAAG;OACnB;MACD,OAAO,IAAI;IACb;EAAC;IAAA,GAAA;IAAA,KAAA,EAED,SAAA,IAAI,IAAkB,EAA4C;MAAA,IAA1C,YAAA,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAA2B,IAAI,CAAC,MAAM,CAAC,GAAG;MAChE,IAAA,CAAA,eAAA,CAAA,QAAA,CAAA,SAAA,qBAAA,IAAA,OAAe;QACb,OAAO,EAAE,SAAA,QAAA,KAAK;UAAA,OAAI,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,IAAG,CAAC;QAAA;QAClD,YAAY,EAAZ,YAAY;QACZ,MAAM,EAAE;UAAE,GAAG,EAAH;QAAG;OACd;MACD,OAAO,IAAI;IACb;EAAC;IAAA,GAAA;IAAA,KAAA,EAED,SAAA,IAAI,IAAkB,EAA4C;MAAA,IAA1C,YAAA,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAA2B,IAAI,CAAC,MAAM,CAAC,GAAG;MAChE,IAAA,CAAA,eAAA,CAAA,QAAA,CAAA,SAAA,qBAAA,IAAA,OAAe;QACb,OAAO,EAAE,SAAA,QAAA,KAAK;UAAA,OAAI,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,IAAG,CAAC;QAAA;QAClD,YAAY,EAAZ,YAAY;QACZ,MAAM,EAAE;UAAE,GAAG,EAAH;QAAG;OACd;MACD,OAAO,IAAI;IACb;EAAC;EAAA,OAAA,QAAA;AAAA,EAvCiE,SAKnE;AAqCD,eAAc,SAAU,WAAW,CAA6B,YAAgB,EAAA;EAC9E,OAAO,IAAI,QAAQ,CAAc,YAAY,CAAC;AAChD","sourceRoot":"","sourcesContent":["import { MixedType } from './MixedType';\nexport class DateType extends MixedType {\n    constructor(errorMessage) {\n        super('date');\n        super.pushRule({\n            onValid: value => !/Invalid|NaN/.test(new Date(value).toString()),\n            errorMessage: errorMessage || this.locale.type\n        });\n    }\n    range(min, max, errorMessage = this.locale.range) {\n        super.pushRule({\n            onValid: value => new Date(value) >= new Date(min) && new Date(value) <= new Date(max),\n            errorMessage,\n            params: { min, max }\n        });\n        return this;\n    }\n    min(min, errorMessage = this.locale.min) {\n        super.pushRule({\n            onValid: value => new Date(value) >= new Date(min),\n            errorMessage,\n            params: { min }\n        });\n        return this;\n    }\n    max(max, errorMessage = this.locale.max) {\n        super.pushRule({\n            onValid: value => new Date(value) <= new Date(max),\n            errorMessage,\n            params: { max }\n        });\n        return this;\n    }\n}\nexport default function getDateType(errorMessage) {\n    return new DateType(errorMessage);\n}\n//# sourceMappingURL=DateType.js.map"]},"metadata":{},"sourceType":"module"}