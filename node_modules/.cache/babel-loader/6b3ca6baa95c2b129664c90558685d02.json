{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2]) _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) {\n    ar = ar.concat(__read(arguments[i]));\n  }\n  return ar;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar client_cloudwatch_logs_1 = require(\"@aws-sdk/client-cloudwatch-logs\");\nvar __1 = require(\"../..\");\nvar Logger_1 = require(\"../Logger\");\nvar Platform_1 = require(\"../Platform\");\nvar Parser_1 = require(\"../Parser\");\nvar Constants_1 = require(\"../Util/Constants\");\nvar logger = new Logger_1.ConsoleLogger('AWSCloudWatch');\nvar AWSCloudWatchProvider = /** @class */function () {\n  function AWSCloudWatchProvider(config) {\n    this.configure(config);\n    this._dataTracker = {\n      eventUploadInProgress: false,\n      logEvents: []\n    };\n    this._currentLogBatch = [];\n    this._initiateLogPushInterval();\n  }\n  AWSCloudWatchProvider.prototype.getProviderName = function () {\n    return AWSCloudWatchProvider.PROVIDER_NAME;\n  };\n  AWSCloudWatchProvider.prototype.getCategoryName = function () {\n    return AWSCloudWatchProvider.CATEGORY;\n  };\n  AWSCloudWatchProvider.prototype.getLogQueue = function () {\n    return this._dataTracker.logEvents;\n  };\n  AWSCloudWatchProvider.prototype.configure = function (config) {\n    if (!config) return this._config || {};\n    var conf = Object.assign({}, this._config, Parser_1.parseMobileHubConfig(config).Logging, config);\n    this._config = conf;\n    return this._config;\n  };\n  AWSCloudWatchProvider.prototype.createLogGroup = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var cmd, credentialsOK, client, output, error_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            logger.debug('creating new log group in CloudWatch - ', params.logGroupName);\n            cmd = new client_cloudwatch_logs_1.CreateLogGroupCommand(params);\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 4,, 5]);\n            return [4 /*yield*/, this._ensureCredentials()];\n          case 2:\n            credentialsOK = _a.sent();\n            if (!credentialsOK) {\n              throw new Error(Constants_1.NO_CREDS_ERROR_STRING);\n            }\n            client = this._initCloudWatchLogs();\n            return [4 /*yield*/, client.send(cmd)];\n          case 3:\n            output = _a.sent();\n            return [2 /*return*/, output];\n          case 4:\n            error_1 = _a.sent();\n            logger.error(\"error creating log group - \" + error_1);\n            throw error_1;\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype.getLogGroups = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var cmd, credentialsOK, client, output, error_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            logger.debug('getting list of log groups');\n            cmd = new client_cloudwatch_logs_1.DescribeLogGroupsCommand(params);\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 4,, 5]);\n            return [4 /*yield*/, this._ensureCredentials()];\n          case 2:\n            credentialsOK = _a.sent();\n            if (!credentialsOK) {\n              throw new Error(Constants_1.NO_CREDS_ERROR_STRING);\n            }\n            client = this._initCloudWatchLogs();\n            return [4 /*yield*/, client.send(cmd)];\n          case 3:\n            output = _a.sent();\n            return [2 /*return*/, output];\n          case 4:\n            error_2 = _a.sent();\n            logger.error(\"error getting log group - \" + error_2);\n            throw error_2;\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype.createLogStream = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var cmd, credentialsOK, client, output, error_3;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            logger.debug('creating new log stream in CloudWatch - ', params.logStreamName);\n            cmd = new client_cloudwatch_logs_1.CreateLogStreamCommand(params);\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 4,, 5]);\n            return [4 /*yield*/, this._ensureCredentials()];\n          case 2:\n            credentialsOK = _a.sent();\n            if (!credentialsOK) {\n              throw new Error(Constants_1.NO_CREDS_ERROR_STRING);\n            }\n            client = this._initCloudWatchLogs();\n            return [4 /*yield*/, client.send(cmd)];\n          case 3:\n            output = _a.sent();\n            return [2 /*return*/, output];\n          case 4:\n            error_3 = _a.sent();\n            logger.error(\"error creating log stream - \" + error_3);\n            throw error_3;\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype.getLogStreams = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var cmd, credentialsOK, client, output, error_4;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            logger.debug('getting list of log streams');\n            cmd = new client_cloudwatch_logs_1.DescribeLogStreamsCommand(params);\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 4,, 5]);\n            return [4 /*yield*/, this._ensureCredentials()];\n          case 2:\n            credentialsOK = _a.sent();\n            if (!credentialsOK) {\n              throw new Error(Constants_1.NO_CREDS_ERROR_STRING);\n            }\n            client = this._initCloudWatchLogs();\n            return [4 /*yield*/, client.send(cmd)];\n          case 3:\n            output = _a.sent();\n            return [2 /*return*/, output];\n          case 4:\n            error_4 = _a.sent();\n            logger.error(\"error getting log stream - \" + error_4);\n            throw error_4;\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype.getLogEvents = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var cmd, credentialsOK, client, output, error_5;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            logger.debug('getting log events from stream - ', params.logStreamName);\n            cmd = new client_cloudwatch_logs_1.GetLogEventsCommand(params);\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 4,, 5]);\n            return [4 /*yield*/, this._ensureCredentials()];\n          case 2:\n            credentialsOK = _a.sent();\n            if (!credentialsOK) {\n              throw new Error(Constants_1.NO_CREDS_ERROR_STRING);\n            }\n            client = this._initCloudWatchLogs();\n            return [4 /*yield*/, client.send(cmd)];\n          case 3:\n            output = _a.sent();\n            return [2 /*return*/, output];\n          case 4:\n            error_5 = _a.sent();\n            logger.error(\"error getting log events - \" + error_5);\n            throw error_5;\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype.pushLogs = function (logs) {\n    logger.debug('pushing log events to Cloudwatch...');\n    this._dataTracker.logEvents = __spread(this._dataTracker.logEvents, logs);\n  };\n  AWSCloudWatchProvider.prototype._validateLogGroupExistsAndCreate = function (logGroupName) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, currGroups, foundGroups, err_1, errString;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (this._dataTracker.verifiedLogGroup) {\n              return [2 /*return*/, this._dataTracker.verifiedLogGroup];\n            }\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 5,, 6]);\n            return [4 /*yield*/, this._ensureCredentials()];\n          case 2:\n            credentialsOK = _a.sent();\n            if (!credentialsOK) {\n              throw new Error(Constants_1.NO_CREDS_ERROR_STRING);\n            }\n            return [4 /*yield*/, this.getLogGroups({\n              logGroupNamePrefix: logGroupName\n            })];\n          case 3:\n            currGroups = _a.sent();\n            if (!(typeof currGroups === 'string') && currGroups.logGroups) {\n              foundGroups = currGroups.logGroups.filter(function (group) {\n                return group.logGroupName === logGroupName;\n              });\n              if (foundGroups.length > 0) {\n                this._dataTracker.verifiedLogGroup = foundGroups[0];\n                return [2 /*return*/, foundGroups[0]];\n              }\n            }\n            /**\n             * If we get to this point, it means that the specified log group does not exist\n             * and we should create it.\n             */\n            return [4 /*yield*/, this.createLogGroup({\n              logGroupName: logGroupName\n            })];\n          case 4:\n            /**\n             * If we get to this point, it means that the specified log group does not exist\n             * and we should create it.\n             */\n            _a.sent();\n            return [2 /*return*/, null];\n          case 5:\n            err_1 = _a.sent();\n            errString = \"failure during log group search: \" + err_1;\n            logger.error(errString);\n            throw err_1;\n          case 6:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype._validateLogStreamExists = function (logGroupName, logStreamName) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, currStreams, foundStreams, err_2, errString;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 4,, 5]);\n            return [4 /*yield*/, this._ensureCredentials()];\n          case 1:\n            credentialsOK = _a.sent();\n            if (!credentialsOK) {\n              throw new Error(Constants_1.NO_CREDS_ERROR_STRING);\n            }\n            return [4 /*yield*/, this.getLogStreams({\n              logGroupName: logGroupName,\n              logStreamNamePrefix: logStreamName\n            })];\n          case 2:\n            currStreams = _a.sent();\n            if (currStreams.logStreams) {\n              foundStreams = currStreams.logStreams.filter(function (stream) {\n                return stream.logStreamName === logStreamName;\n              });\n              if (foundStreams.length > 0) {\n                this._nextSequenceToken = foundStreams[0].uploadSequenceToken;\n                return [2 /*return*/, foundStreams[0]];\n              }\n            }\n            /**\n             * If we get to this point, it means that the specified stream does not\n             * exist, and we should create it now.\n             */\n            return [4 /*yield*/, this.createLogStream({\n              logGroupName: logGroupName,\n              logStreamName: logStreamName\n            })];\n          case 3:\n            /**\n             * If we get to this point, it means that the specified stream does not\n             * exist, and we should create it now.\n             */\n            _a.sent();\n            return [2 /*return*/, null];\n          case 4:\n            err_2 = _a.sent();\n            errString = \"failure during log stream search: \" + err_2;\n            logger.error(errString);\n            throw err_2;\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype._sendLogEvents = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, cmd, client, output, err_3, errString;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 3,, 4]);\n            return [4 /*yield*/, this._ensureCredentials()];\n          case 1:\n            credentialsOK = _a.sent();\n            if (!credentialsOK) {\n              throw new Error(Constants_1.NO_CREDS_ERROR_STRING);\n            }\n            logger.debug('sending log events to stream - ', params.logStreamName);\n            cmd = new client_cloudwatch_logs_1.PutLogEventsCommand(params);\n            client = this._initCloudWatchLogs();\n            return [4 /*yield*/, client.send(cmd)];\n          case 2:\n            output = _a.sent();\n            return [2 /*return*/, output];\n          case 3:\n            err_3 = _a.sent();\n            errString = \"failure during log push: \" + err_3;\n            logger.error(errString);\n            return [3 /*break*/, 4];\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype._initCloudWatchLogs = function () {\n    return new client_cloudwatch_logs_1.CloudWatchLogsClient({\n      region: this._config.region,\n      credentials: this._config.credentials,\n      customUserAgent: Platform_1.getAmplifyUserAgent(),\n      endpoint: this._config.endpoint\n    });\n  };\n  AWSCloudWatchProvider.prototype._ensureCredentials = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, __1.Credentials.get().then(function (credentials) {\n              if (!credentials) return false;\n              var cred = __1.Credentials.shear(credentials);\n              logger.debug('set credentials for logging', cred);\n              _this._config.credentials = cred;\n              return true;\n            }).catch(function (error) {\n              logger.warn('ensure credentials error', error);\n              return false;\n            })];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  AWSCloudWatchProvider.prototype._getNextSequenceToken = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var logStream, err_4;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (this._nextSequenceToken && this._nextSequenceToken.length > 0) {\n              return [2 /*return*/, this._nextSequenceToken];\n            }\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 4,, 5]);\n            return [4 /*yield*/, this._validateLogGroupExistsAndCreate(this._config.logGroupName)];\n          case 2:\n            _a.sent();\n            this._nextSequenceToken = undefined;\n            return [4 /*yield*/, this._validateLogStreamExists(this._config.logGroupName, this._config.logStreamName)];\n          case 3:\n            logStream = _a.sent();\n            if (logStream) {\n              this._nextSequenceToken = logStream.uploadSequenceToken;\n            }\n            return [2 /*return*/, this._nextSequenceToken];\n          case 4:\n            err_4 = _a.sent();\n            logger.error(\"failure while getting next sequence token: \" + err_4);\n            throw err_4;\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype._safeUploadLogEvents = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var seqToken, logBatch, putLogsPayload, sendLogEventsResponse, err_5;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 3,, 4]);\n            return [4 /*yield*/, this._getNextSequenceToken()];\n          case 1:\n            seqToken = _a.sent();\n            logBatch = this._currentLogBatch.length === 0 ? this._getBufferedBatchOfLogs() : this._currentLogBatch;\n            putLogsPayload = {\n              logGroupName: this._config.logGroupName,\n              logStreamName: this._config.logStreamName,\n              logEvents: logBatch,\n              sequenceToken: seqToken\n            };\n            this._dataTracker.eventUploadInProgress = true;\n            return [4 /*yield*/, this._sendLogEvents(putLogsPayload)];\n          case 2:\n            sendLogEventsResponse = _a.sent();\n            this._nextSequenceToken = sendLogEventsResponse.nextSequenceToken;\n            this._dataTracker.eventUploadInProgress = false;\n            this._currentLogBatch = [];\n            return [2 /*return*/, sendLogEventsResponse];\n          case 3:\n            err_5 = _a.sent();\n            logger.error(\"error during _safeUploadLogEvents: \" + err_5);\n            if (Constants_1.RETRY_ERROR_CODES.includes(err_5.name)) {\n              this._getNewSequenceTokenAndSubmit({\n                logEvents: this._currentLogBatch,\n                logGroupName: this._config.logGroupName,\n                logStreamName: this._config.logStreamName\n              });\n            } else {\n              this._dataTracker.eventUploadInProgress = false;\n              throw err_5;\n            }\n            return [3 /*break*/, 4];\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype._getBufferedBatchOfLogs = function () {\n    /**\n     * CloudWatch has restrictions on the size of the log events that get sent up.\n     * We need to track both the size of each event and the total size of the batch\n     * of logs.\n     *\n     * We also need to ensure that the logs in the batch are sorted in chronological order.\n     * https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutLogEvents.html\n     */\n    var currentEventIdx = 0;\n    var totalByteSize = 0;\n    while (currentEventIdx < this._dataTracker.logEvents.length) {\n      var currentEvent = this._dataTracker.logEvents[currentEventIdx];\n      var eventSize = currentEvent ? new TextEncoder().encode(currentEvent.message).length + Constants_1.AWS_CLOUDWATCH_BASE_BUFFER_SIZE : 0;\n      if (eventSize > Constants_1.AWS_CLOUDWATCH_MAX_EVENT_SIZE) {\n        var errString = \"Log entry exceeds maximum size for CloudWatch logs. Log size: \" + eventSize + \". Truncating log message.\";\n        logger.warn(errString);\n        currentEvent.message = currentEvent.message.substring(0, eventSize);\n      }\n      if (totalByteSize + eventSize > Constants_1.AWS_CLOUDWATCH_MAX_BATCH_EVENT_SIZE) break;\n      totalByteSize += eventSize;\n      currentEventIdx++;\n    }\n    this._currentLogBatch = this._dataTracker.logEvents.splice(0, currentEventIdx);\n    return this._currentLogBatch;\n  };\n  AWSCloudWatchProvider.prototype._getNewSequenceTokenAndSubmit = function (payload) {\n    return __awaiter(this, void 0, void 0, function () {\n      var seqToken, sendLogEventsRepsonse, err_6;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 3,, 4]);\n            this._nextSequenceToken = undefined;\n            this._dataTracker.eventUploadInProgress = true;\n            return [4 /*yield*/, this._getNextSequenceToken()];\n          case 1:\n            seqToken = _a.sent();\n            payload.sequenceToken = seqToken;\n            return [4 /*yield*/, this._sendLogEvents(payload)];\n          case 2:\n            sendLogEventsRepsonse = _a.sent();\n            this._dataTracker.eventUploadInProgress = false;\n            this._currentLogBatch = [];\n            return [2 /*return*/, sendLogEventsRepsonse];\n          case 3:\n            err_6 = _a.sent();\n            logger.error(\"error when retrying log submission with new sequence token: \" + err_6);\n            this._dataTracker.eventUploadInProgress = false;\n            throw err_6;\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype._initiateLogPushInterval = function () {\n    var _this = this;\n    if (this._timer) {\n      clearInterval(this._timer);\n    }\n    this._timer = setInterval(function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var err_7;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              _a.trys.push([0, 3,, 4]);\n              if (!this._getDocUploadPermissibility()) return [3 /*break*/, 2];\n              return [4 /*yield*/, this._safeUploadLogEvents()];\n            case 1:\n              _a.sent();\n              _a.label = 2;\n            case 2:\n              return [3 /*break*/, 4];\n            case 3:\n              err_7 = _a.sent();\n              logger.error(\"error when calling _safeUploadLogEvents in the timer interval - \" + err_7);\n              return [3 /*break*/, 4];\n            case 4:\n              return [2 /*return*/];\n          }\n        });\n      });\n    }, 2000);\n  };\n  AWSCloudWatchProvider.prototype._getDocUploadPermissibility = function () {\n    return (this._dataTracker.logEvents.length !== 0 || this._currentLogBatch.length !== 0) && !this._dataTracker.eventUploadInProgress;\n  };\n  AWSCloudWatchProvider.PROVIDER_NAME = Constants_1.AWS_CLOUDWATCH_PROVIDER_NAME;\n  AWSCloudWatchProvider.CATEGORY = Constants_1.AWS_CLOUDWATCH_CATEGORY;\n  return AWSCloudWatchProvider;\n}();\nexports.AWSCloudWatchProvider = AWSCloudWatchProvider;","map":{"version":3,"names":["client_cloudwatch_logs_1","require","__1","Logger_1","Platform_1","Parser_1","Constants_1","logger","ConsoleLogger","AWSCloudWatchProvider","config","configure","_dataTracker","eventUploadInProgress","logEvents","_currentLogBatch","_initiateLogPushInterval","prototype","getProviderName","PROVIDER_NAME","getCategoryName","CATEGORY","getLogQueue","_config","conf","Object","assign","parseMobileHubConfig","Logging","createLogGroup","params","debug","logGroupName","cmd","CreateLogGroupCommand","_ensureCredentials","credentialsOK","_a","sent","Error","NO_CREDS_ERROR_STRING","client","_initCloudWatchLogs","send","output","error","error_1","getLogGroups","DescribeLogGroupsCommand","error_2","createLogStream","logStreamName","CreateLogStreamCommand","error_3","getLogStreams","DescribeLogStreamsCommand","error_4","getLogEvents","GetLogEventsCommand","error_5","pushLogs","logs","__spread","_validateLogGroupExistsAndCreate","verifiedLogGroup","logGroupNamePrefix","currGroups","logGroups","foundGroups","filter","group","length","errString","err_1","_validateLogStreamExists","logStreamNamePrefix","currStreams","logStreams","foundStreams","stream","_nextSequenceToken","uploadSequenceToken","err_2","_sendLogEvents","PutLogEventsCommand","err_3","CloudWatchLogsClient","region","credentials","customUserAgent","getAmplifyUserAgent","endpoint","Credentials","get","then","cred","shear","_this","catch","warn","_getNextSequenceToken","undefined","logStream","err_4","_safeUploadLogEvents","seqToken","logBatch","_getBufferedBatchOfLogs","putLogsPayload","sequenceToken","sendLogEventsResponse","nextSequenceToken","err_5","RETRY_ERROR_CODES","includes","name","_getNewSequenceTokenAndSubmit","currentEventIdx","totalByteSize","currentEvent","eventSize","TextEncoder","encode","message","AWS_CLOUDWATCH_BASE_BUFFER_SIZE","AWS_CLOUDWATCH_MAX_EVENT_SIZE","substring","AWS_CLOUDWATCH_MAX_BATCH_EVENT_SIZE","splice","payload","sendLogEventsRepsonse","err_6","_timer","clearInterval","setInterval","__awaiter","_getDocUploadPermissibility","err_7","AWS_CLOUDWATCH_PROVIDER_NAME","AWS_CLOUDWATCH_CATEGORY","exports"],"sources":["../../src/Providers/AWSCloudWatchProvider.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script"}