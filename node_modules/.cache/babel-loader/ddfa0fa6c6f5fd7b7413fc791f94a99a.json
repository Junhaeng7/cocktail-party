{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Junhaeng/untitled folder/junior-design/amplifyapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Junhaeng/untitled folder/junior-design/amplifyapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/Junhaeng/untitled folder/junior-design/amplifyapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Junhaeng/untitled folder/junior-design/amplifyapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport AWS from 'aws-sdk';\nimport awsconfig from 'components/../aws-exports';\nimport Amplify from 'aws-amplify';\nimport { Storage } from 'aws-amplify';\nvar DynamoAccess = /*#__PURE__*/function () {\n  function DynamoAccess(bucket, region) {\n    _classCallCheck(this, DynamoAccess);\n    Amplify.configure(awsconfig);\n    this.bucketRegion = region;\n    this.bucket = bucket;\n  }\n  _createClass(DynamoAccess, [{\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Storage.get(\"labelerCred.json\").then( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(resp) {\n                    var url;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            url = \"\".concat(JSON.stringify(resp)).slice(1, -1);\n                            _context.next = 3;\n                            return fetch(url).then(function (res) {\n                              return res.json();\n                            }).then(function (data) {\n                              AWS.config.update({\n                                region: 'us-east-1',\n                                endpoint: 'http://localhost:8000',\n                                accessKeyId: 'AKIATI44Q6EJP6MQPZLX',\n                                //data.ACCESS_KEY_ID,\n                                secretAccessKey: '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' //data.SECRET_ACCESS_KEY,\n                              });\n\n                              console.log('connected_dynamoaccess');\n                            }).catch(function (err) {\n                              return console.error(err);\n                            });\n                          case 3:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n                  return function (_x) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      function connect() {\n        return _connect.apply(this, arguments);\n      }\n      return connect;\n    }()\n  }, {\n    key: \"listTables\",\n    value: function listTables() {\n      var ddb = new AWS.DynamoDB({\n        apiVersion: '2012-08-10'\n      });\n      ddb.listTables({\n        Limit: 10\n      }, function (err, data) {\n        if (err) {\n          console.log(\"Error\", err.code);\n        } else {\n          console.log(\"Table names are \", data.TableNames);\n        }\n      });\n    }\n  }, {\n    key: \"insertEntry\",\n    value: function insertEntry() {\n      console.log('Attempting test insert...');\n    }\n  }]);\n  return DynamoAccess;\n}();\nexport { DynamoAccess as default };","map":{"version":3,"names":["AWS","awsconfig","Amplify","Storage","DynamoAccess","bucket","region","_classCallCheck","configure","bucketRegion","_createClass","key","value","_connect","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","wrap","_callee2$","_context2","prev","next","get","then","_ref","_callee","resp","url","_callee$","_context","concat","JSON","stringify","slice","fetch","res","json","data","config","update","endpoint","accessKeyId","secretAccessKey","console","log","catch","err","error","stop","_x","apply","arguments","connect","listTables","ddb","DynamoDB","apiVersion","Limit","code","TableNames","insertEntry","default"],"sources":["/Users/Junhaeng/untitled folder/junior-design/amplifyapp/src/functions/dynamoaccess.js"],"sourcesContent":["\nimport AWS from 'aws-sdk';\nimport awsconfig from 'components/../aws-exports'\nimport Amplify from 'aws-amplify'\nimport { Storage } from 'aws-amplify';\n\nexport default class DynamoAccess {\n    \n    constructor(bucket, region){\n        Amplify.configure(awsconfig)\n        this.bucketRegion = region;\n        this.bucket = bucket;\n    }\n\n    async connect() {\n        await Storage.get(\"labelerCred.json\")\n            .then(async resp => {\n                const url = `${JSON.stringify(resp)}`.slice(1,-1);\n                await fetch(url)\n                    .then(res => res.json())\n                    .then(data => {\n                        AWS.config.update({\n                            region: 'us-east-1',\n                            endpoint: 'http://localhost:8000',\n                            accessKeyId: 'AKIATI44Q6EJP6MQPZLX',//data.ACCESS_KEY_ID,\n                            secretAccessKey: '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'//data.SECRET_ACCESS_KEY,\n                        });\n                        console.log('connected_dynamoaccess');\n                    })\n                .catch(err => console.error(err));\n            }\n        );\n    }\n\n    listTables() {\n        var ddb = new AWS.DynamoDB({apiVersion: '2012-08-10'});\n        ddb.listTables({Limit: 10}, function(err, data) {\n            if (err) {\n              console.log(\"Error\", err.code);\n            } else {\n              console.log(\"Table names are \", data.TableNames);\n            }\n          });\n    }\n\n    insertEntry() {\n        console.log('Attempting test insert...');\n    }\n\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}