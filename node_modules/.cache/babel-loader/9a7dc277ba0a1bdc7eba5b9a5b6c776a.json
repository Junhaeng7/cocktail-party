{"ast":null,"code":"import { createMuiTheme, ThemeProvider as ThemeProvider$1 } from '@material-ui/core/styles';\nimport merge from 'deepmerge';\nimport React, { useRef, useState, useEffect, useCallback, createContext, useMemo, useContext, useImperativeHandle } from 'react';\nimport { DndContext, useDrop, useDrag, useDragLayer, DndProvider } from 'react-dnd';\nimport { HTML5Backend, getEmptyImage } from 'react-dnd-html5-backend';\nimport { useIntl, IntlProvider } from 'react-intl';\nimport { createUseStyles, ThemeProvider } from 'react-jss';\nimport { useSelector, useDispatch, useStore, Provider } from 'react-redux';\nimport shortid from 'shortid';\nimport { createSelector, createSlice, configureStore } from '@reduxjs/toolkit';\nimport sort from 'fast-sort';\nimport FuzzySearch from 'fuzzy-search';\nimport watch from 'redux-watch';\nimport filesize from 'filesize';\nimport ExactTrie from 'exact-trie';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport classnames from 'classnames';\nimport Box from '@material-ui/core/Box';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport hotkeys from 'hotkeys-js';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { VariableSizeGrid, FixedSizeList } from 'react-window';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (it) return (it = it.call(o)).next.bind(it);\n  if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n    if (it) o = it;\n    var i = 0;\n    return function () {\n      if (i >= o.length) return {\n        done: true\n      };\n      return {\n        done: false,\n        value: o[i++]\n      };\n    };\n  }\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nvar useDebounce = function useDebounce(value, delay) {\n  var _useState = useState(value),\n    debouncedValue = _useState[0],\n    setDebouncedValue = _useState[1];\n  useEffect(function () {\n    var handler = setTimeout(function () {\n      setDebouncedValue(value);\n    }, delay);\n    return function () {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n  return [debouncedValue, setDebouncedValue];\n};\nvar UNINITIALIZED_SENTINEL = {};\nvar useStaticValue = function useStaticValue(factory) {\n  var valueRef = useRef(UNINITIALIZED_SENTINEL);\n  if (valueRef.current === UNINITIALIZED_SENTINEL) valueRef.current = factory();\n  return valueRef.current;\n};\nvar useInstanceVariable = function useInstanceVariable(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [ref, value]);\n  return ref;\n};\nvar Logger = /*#__PURE__*/function () {\n  function Logger() {}\n  Logger.error = function error() {\n    var _console;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    // eslint-disable-next-line no-console\n    (_console = console).error.apply(_console, ['[Chonky runtime error]'].concat(args));\n  };\n  Logger.warn = function warn() {\n    var _console2;\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    // eslint-disable-next-line no-console\n    (_console2 = console).warn.apply(_console2, ['[Chonky runtime warning]'].concat(args));\n  };\n  Logger.debug = function debug() {\n    var _console3;\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    // eslint-disable-next-line no-console\n    (_console3 = console).debug.apply(_console3, ['[Chonky runtime debug]'].concat(args));\n  };\n  Logger.formatBullets = function formatBullets(bullets) {\n    return \"\\n- \" + bullets.join('\\n- ');\n  };\n  return Logger;\n}();\nvar FileHelper = /*#__PURE__*/function () {\n  function FileHelper() {}\n  FileHelper.isDirectory = function isDirectory(file) {\n    // Not a directory by default\n    return !!file && file.isDir === true;\n  };\n  FileHelper.isHidden = function isHidden(file) {\n    // Not hidden by default\n    return !!file && file.isHidden === true;\n  };\n  FileHelper.isSymlink = function isSymlink(file) {\n    // Not a symlink by default\n    return !!file && file.isSymlink === true;\n  };\n  FileHelper.isEncrypted = function isEncrypted(file) {\n    // Not encrypted by default\n    return !!file && file.isEncrypted === true;\n  };\n  FileHelper.isClickable = function isClickable(file) {\n    // Clickable by default\n    return !!file;\n  };\n  FileHelper.isOpenable = function isOpenable(file) {\n    // Openable by default\n    return !!file && file.openable !== false;\n  };\n  FileHelper.isSelectable = function isSelectable(file) {\n    // Selectable by default\n    return !!file && file.selectable !== false;\n  };\n  FileHelper.isDraggable = function isDraggable(file) {\n    // File & folders are draggable by default, `null` is not\n    return !!file && file.draggable !== false;\n  };\n  FileHelper.isDroppable = function isDroppable(file) {\n    // Folders are droppable by default, files are not\n    if (!file) return false;\n    if (file.isDir && file.droppable !== false) return true;\n    return file.droppable === true;\n  };\n  FileHelper.isDndOpenable = function isDndOpenable(file) {\n    // Folders are DnD openable by default, files are not\n    if (!FileHelper.isOpenable(file)) return false;\n    if (file.isDir && file.dndOpenable !== false) return true;\n    return file.dndOpenable === true;\n  };\n  FileHelper.getModDate = function getModDate(file) {\n    if (!file || file.modDate === null || file.modDate === undefined) return null;\n    return FileHelper.parseDate(file.modDate);\n  };\n  FileHelper.parseDate = function parseDate(maybeDate) {\n    if (typeof maybeDate === 'string' || typeof maybeDate === 'number') {\n      // We allow users to provide string and numerical representations of dates.\n      try {\n        return new Date(maybeDate);\n      } catch (error) {\n        Logger.error(\"Could not convert provided string/number into a date: \" + error.message + \" \", 'Invalid value:', maybeDate);\n      }\n    }\n    if (maybeDate instanceof Date && !isNaN(maybeDate.getTime())) {\n      // We only allow valid dates objects\n      return maybeDate;\n    } // If we have an invalid date representation, we just return null.\n\n    Logger.warn('Unsupported date representation:', maybeDate);\n    return null;\n  };\n  FileHelper.getChildrenCount = function getChildrenCount(file) {\n    if (!file || typeof file.childrenCount !== 'number') return null;\n    return file.childrenCount;\n  };\n  return FileHelper;\n}();\nvar sanitizeInputArray = function sanitizeInputArray(mode, rawArray) {\n  var sanitizedFiles = [];\n  var errorMessages = [];\n  if ((mode === 'folderChain' || mode === 'fileActions') && !rawArray) ;else if (!Array.isArray(rawArray)) {\n    errorMessages.push(\"Expected \\\"\" + mode + \"\\\" prop to be an array, got \\\"\" + typeof rawArray + \"\\\" instead.\");\n  } else {\n    var nonObjectFileCount = 0;\n    var missingFieldFileCount = 0;\n    var seenIds = new Set();\n    var duplicateIds = new Set();\n    for (var i = 0; i < rawArray.length; ++i) {\n      var item = rawArray[i];\n      if (!item) {\n        if (mode === 'fileActions') nonObjectFileCount++;else sanitizedFiles.push(null);\n      } else if (typeof item !== 'object') {\n        nonObjectFileCount++;\n      } else {\n        if (!item.id || mode !== 'fileActions' && !item.name) {\n          missingFieldFileCount++;\n        } else if (seenIds.has(item.id)) {\n          duplicateIds.add(item.id);\n        } else {\n          seenIds.add(item.id);\n          sanitizedFiles.push(item);\n        }\n      }\n    }\n    if (nonObjectFileCount) {\n      errorMessages.push(\"Detected \" + nonObjectFileCount + \" file(s) of invalid type. Remember \" + \"that \\\"files\\\" array should contain either objects or nulls.\");\n    }\n    if (missingFieldFileCount) {\n      errorMessages.push(\"Detected \" + missingFieldFileCount + \" file(s) that are missing the \" + \"required fields. Remember that file object should define an \" + \"\\\"id\\\" and a \\\"name\\\".\");\n    }\n    if (duplicateIds.size > 0) {\n      var repeatedIdsString = '\"' + Array.from(duplicateIds).join('\", \"') + '\"';\n      errorMessages.push(\"Detected \" + duplicateIds.size + \" file IDs that are used multiple \" + \"times. Remember that each file should have a unique IDs. The \" + (\"following IDs were seen multiple times: \" + repeatedIdsString));\n    }\n  }\n  if (errorMessages.length > 0) {\n    var errorMessageString = '\\n- ' + errorMessages.join('\\n- ');\n    var arrayString;\n    var itemString;\n    if (mode === 'folderChain') {\n      arrayString = 'folder chain';\n      itemString = 'files';\n    } else if (mode === 'fileActions') {\n      arrayString = 'file actions';\n      itemString = 'file actions';\n    } else {\n      // mode === 'files'\n      arrayString = 'files';\n      itemString = 'files';\n    }\n    Logger.error(\"Errors were detected when sanitizing the \" + arrayString + \" array. \" + (\"Offending \" + itemString + \" were removed from the array. Summary of \") + (\"validation errors: \" + errorMessageString));\n  }\n  return {\n    sanitizedArray: sanitizedFiles,\n    errorMessages: errorMessages\n  };\n};\n\n/**\r\n * We have option IDs in a separate file to avoid circular deps...\r\n */\nvar OptionIds = {\n  ShowHiddenFiles: 'show_hidden_files',\n  ShowFoldersFirst: 'show_folders_first',\n  DarkMode: 'dark_mode'\n};\nvar SortOrder;\n(function (SortOrder) {\n  SortOrder[\"ASC\"] = \"asc\";\n  SortOrder[\"DESC\"] = \"desc\";\n})(SortOrder || (SortOrder = {}));\nvar selectInstanceId = function selectInstanceId(state) {\n  return state.instanceId;\n};\nvar selectExternalFileActionHandler = function selectExternalFileActionHandler(state) {\n  return state.externalFileActionHandler;\n};\nvar selectFileActionMap = function selectFileActionMap(state) {\n  return state.fileActionMap;\n};\nvar selectFileActionIds = function selectFileActionIds(state) {\n  return state.fileActionIds;\n};\nvar selectFileActionData = function selectFileActionData(fileActionId) {\n  return function (state) {\n    return selectFileActionMap(state)[fileActionId];\n  };\n};\nvar selectToolbarItems = function selectToolbarItems(state) {\n  return state.toolbarItems;\n};\nvar selectContextMenuItems = function selectContextMenuItems(state) {\n  return state.contextMenuItems;\n};\nvar selectFolderChain = function selectFolderChain(state) {\n  return state.folderChain;\n};\nvar selectCurrentFolder = function selectCurrentFolder(state) {\n  var folderChain = selectFolderChain(state);\n  var currentFolder = folderChain.length > 0 ? folderChain[folderChain.length - 1] : null;\n  return currentFolder;\n};\nvar selectParentFolder = function selectParentFolder(state) {\n  var folderChain = selectFolderChain(state);\n  var parentFolder = folderChain.length > 1 ? folderChain[folderChain.length - 2] : null;\n  return parentFolder;\n};\nvar selectFileMap = function selectFileMap(state) {\n  return state.fileMap;\n};\nvar selectCleanFileIds = function selectCleanFileIds(state) {\n  return state.cleanFileIds;\n};\nvar selectFileData = function selectFileData(fileId) {\n  return function (state) {\n    return fileId ? selectFileMap(state)[fileId] : null;\n  };\n};\nvar selectHiddenFileIdMap = function selectHiddenFileIdMap(state) {\n  return state.hiddenFileIdMap;\n};\nvar selectHiddenFileCount = function selectHiddenFileCount(state) {\n  return Object.keys(selectHiddenFileIdMap(state)).length;\n};\nvar selectFocusSearchInput = function selectFocusSearchInput(state) {\n  return state.focusSearchInput;\n};\nvar selectSearchString = function selectSearchString(state) {\n  return state.searchString;\n};\nvar selectSelectionMap = function selectSelectionMap(state) {\n  return state.selectionMap;\n};\nvar selectSelectedFileIds = function selectSelectedFileIds(state) {\n  return Object.keys(selectSelectionMap(state));\n};\nvar selectSelectionSize = function selectSelectionSize(state) {\n  return selectSelectedFileIds(state).length;\n};\nvar selectIsFileSelected = function selectIsFileSelected(fileId) {\n  return function (state) {\n    return !!fileId && !!selectSelectionMap(state)[fileId];\n  };\n};\nvar selectSelectedFiles = function selectSelectedFiles(state) {\n  var fileMap = selectFileMap(state);\n  return Object.keys(selectSelectionMap(state)).map(function (id) {\n    return fileMap[id];\n  });\n};\nvar selectSelectedFilesForAction = function selectSelectedFilesForAction(fileActionId) {\n  return function (state) {\n    var fileActionMap = state.fileActionMap;\n    var action = fileActionMap[fileActionId];\n    if (!action || !action.requiresSelection) return undefined;\n    return getSelectedFiles(state, action.fileFilter);\n  };\n};\nvar selectSelectedFilesForActionCount = function selectSelectedFilesForActionCount(fileActionId) {\n  return function (state) {\n    var _getSelectedFilesForA;\n    return (_getSelectedFilesForA = getSelectedFilesForAction(state, fileActionId)) == null ? void 0 : _getSelectedFilesForA.length;\n  };\n};\nvar selectDisableSelection = function selectDisableSelection(state) {\n  return state.disableSelection;\n};\nvar selectFileViewConfig = function selectFileViewConfig(state) {\n  return state.fileViewConfig;\n};\nvar selectSortActionId = function selectSortActionId(state) {\n  return state.sortActionId;\n};\nvar selectSortOrder = function selectSortOrder(state) {\n  return state.sortOrder;\n};\nvar selectOptionMap = function selectOptionMap(state) {\n  return state.optionMap;\n};\nvar selectOptionValue = function selectOptionValue(optionId) {\n  return function (state) {\n    return selectOptionMap(state)[optionId];\n  };\n};\nvar selectThumbnailGenerator = function selectThumbnailGenerator(state) {\n  return state.thumbnailGenerator;\n};\nvar selectDoubleClickDelay = function selectDoubleClickDelay(state) {\n  return state.doubleClickDelay;\n};\nvar selectIsDnDDisabled = function selectIsDnDDisabled(state) {\n  return state.disableDragAndDrop;\n};\nvar selectClearSelectionOnOutsideClick = function selectClearSelectionOnOutsideClick(state) {\n  return state.clearSelectionOnOutsideClick;\n};\nvar selectContextMenuMounted = function selectContextMenuMounted(state) {\n  return state.contextMenuMounted;\n};\nvar selectContextMenuConfig = function selectContextMenuConfig(state) {\n  return state.contextMenuConfig;\n};\nvar selectContextMenuTriggerFile = function selectContextMenuTriggerFile(state) {\n  var _fileMap$config$trigg;\n  var config = selectContextMenuConfig(state);\n  if (!config || !config.triggerFileId) return null;\n  var fileMap = selectFileMap(state);\n  return (_fileMap$config$trigg = fileMap[config.triggerFileId]) != null ? _fileMap$config$trigg : null;\n}; // Raw selectors\n\nvar getFileActionMap = function getFileActionMap(state) {\n  return state.fileActionMap;\n};\nvar getOptionMap = function getOptionMap(state) {\n  return state.optionMap;\n};\nvar getFileMap = function getFileMap(state) {\n  return state.fileMap;\n};\nvar getFileIds = function getFileIds(state) {\n  return state.fileIds;\n};\nvar getCleanFileIds = function getCleanFileIds(state) {\n  return state.cleanFileIds;\n};\nvar getSortActionId = function getSortActionId(state) {\n  return state.sortActionId;\n};\nvar getSortOrder = function getSortOrder(state) {\n  return state.sortOrder;\n};\nvar getSearchString = function getSearchString(state) {\n  return state.searchString;\n};\nvar _getLastClick = function _getLastClick(state) {\n  return state.lastClick;\n}; // Memoized selectors\n\nvar makeGetAction = function makeGetAction(fileActionSelector) {\n  return createSelector([getFileActionMap, fileActionSelector], function (fileActionMap, fileActionId) {\n    return fileActionId && fileActionMap[fileActionId] ? fileActionMap[fileActionId] : null;\n  });\n};\nvar makeGetOptionValue = function makeGetOptionValue(optionId, defaultValue) {\n  if (defaultValue === void 0) {\n    defaultValue = undefined;\n  }\n  return createSelector([getOptionMap], function (optionMap) {\n    var value = optionMap[optionId];\n    if (value === undefined) {\n      return defaultValue;\n    }\n    return value;\n  });\n};\nvar makeGetFiles = function makeGetFiles(fileIdsSelector) {\n  return createSelector([getFileMap, fileIdsSelector], function (fileMap, fileIds) {\n    return fileIds.map(function (fileId) {\n      return fileId && fileMap[fileId] ? fileMap[fileId] : null;\n    });\n  });\n};\nvar getSortedFileIds = /*#__PURE__*/createSelector([getFileIds, getSortOrder, /*#__PURE__*/makeGetFiles(getFileIds), /*#__PURE__*/makeGetAction(getSortActionId), /*#__PURE__*/makeGetOptionValue(OptionIds.ShowFoldersFirst, false)], function (fileIds, sortOrder, files, sortAction, showFolderFirst) {\n  if (!sortAction) {\n    // We allow users to set the sort action ID to `null` if they want to use their\n    // own sorting mechanisms instead of relying on Chonky built-in sort.\n    return fileIds;\n  }\n  var prepareSortKeySelector = function prepareSortKeySelector(selector) {\n    return function (file) {\n      return selector(file);\n    };\n  };\n  var sortFunctions = [];\n  if (showFolderFirst) {\n    // If option is undefined (relevant actions is not enabled), we don't show\n    // folders first.\n    sortFunctions.push({\n      desc: prepareSortKeySelector(FileHelper.isDirectory)\n    });\n  }\n  if (sortAction.sortKeySelector) {\n    var _sortFunctions$push;\n    var configKeyName = sortOrder === SortOrder.ASC ? 'asc' : 'desc';\n    sortFunctions.push((_sortFunctions$push = {}, _sortFunctions$push[configKeyName] = prepareSortKeySelector(sortAction.sortKeySelector), _sortFunctions$push));\n  }\n  if (sortFunctions.length === 0) return fileIds; // We copy the array because `fast-sort` mutates it\n\n  var sortedFileIds = sort([].concat(files)).by(sortFunctions).map(function (file) {\n    return file ? file.id : null;\n  });\n  return sortedFileIds;\n});\nvar getSearcher = /*#__PURE__*/createSelector([/*#__PURE__*/makeGetFiles(getCleanFileIds)], function (cleanFiles) {\n  return new FuzzySearch(cleanFiles, ['name'], {\n    caseSensitive: false\n  });\n});\nvar getSearchFilteredFileIds = /*#__PURE__*/createSelector([getCleanFileIds, getSearchString, getSearcher], function (cleanFileIds, searchString, searcher) {\n  return searchString ? searcher.search(searchString).map(function (f) {\n    return f.id;\n  }) : cleanFileIds;\n});\nvar getHiddenFileIdMap = /*#__PURE__*/createSelector([getSearchFilteredFileIds, /*#__PURE__*/makeGetFiles(getCleanFileIds), /*#__PURE__*/makeGetOptionValue(OptionIds.ShowHiddenFiles)], function (searchFilteredFileIds, cleanFiles, showHiddenFiles) {\n  var searchFilteredFileIdsSet = new Set(searchFilteredFileIds);\n  var hiddenFileIdMap = {};\n  cleanFiles.forEach(function (file) {\n    if (!file) return;else if (!searchFilteredFileIdsSet.has(file.id)) {\n      // Hidden by seach\n      hiddenFileIdMap[file.id] = true;\n    } else if (!showHiddenFiles && FileHelper.isHidden(file)) {\n      // Hidden by options\n      hiddenFileIdMap[file.id] = true;\n    }\n  });\n  return hiddenFileIdMap;\n});\nvar getDisplayFileIds = /*#__PURE__*/createSelector([getSortedFileIds, getHiddenFileIdMap], /** Returns files that will actually be shown to the user. */\nfunction (sortedFileIds, hiddenFileIdMap) {\n  return sortedFileIds.filter(function (id) {\n    return !id || !hiddenFileIdMap[id];\n  });\n});\nvar getLastClickIndex = /*#__PURE__*/createSelector([_getLastClick, getSortedFileIds], /** Returns the last click index after ensuring it is actually still valid. */\nfunction (lastClick, displayFileIds) {\n  if (!lastClick || lastClick.index > displayFileIds.length - 1 || lastClick.fileId != displayFileIds[lastClick.index]) {\n    return null;\n  }\n  return lastClick.index;\n});\nvar selectors = {\n  // Raw selectors\n  getFileActionMap: getFileActionMap,\n  getOptionMap: getOptionMap,\n  getFileMap: getFileMap,\n  getFileIds: getFileIds,\n  getCleanFileIds: getCleanFileIds,\n  getSortActionId: getSortActionId,\n  getSortOrder: getSortOrder,\n  getSearchString: getSearchString,\n  _getLastClick: _getLastClick,\n  // Memoized selectors\n  getSortedFileIds: getSortedFileIds,\n  getSearcher: getSearcher,\n  getSearchFilteredFileIds: getSearchFilteredFileIds,\n  getHiddenFileIdMap: getHiddenFileIdMap,\n  getDisplayFileIds: getDisplayFileIds,\n  getLastClickIndex: getLastClickIndex,\n  // Parametrized selectors\n  makeGetAction: makeGetAction,\n  makeGetOptionValue: makeGetOptionValue,\n  makeGetFiles: makeGetFiles\n}; // Selectors meant to be used outside of Redux code\n\nvar getFileData = function getFileData(state, fileId) {\n  return fileId ? selectFileMap(state)[fileId] : null;\n};\nvar getIsFileSelected = function getIsFileSelected(state, file) {\n  // !!! We deliberately don't use `FileHelper.isSelectable` here as we want to\n  //     reflect the state of Redux store accurately.\n  return !!selectSelectionMap(state)[file.id];\n};\nvar getSelectedFiles = function getSelectedFiles(state) {\n  var fileMap = state.fileMap,\n    selectionMap = state.selectionMap;\n  var selectedFiles = Object.keys(selectionMap).map(function (id) {\n    return fileMap[id];\n  });\n  for (var _len = arguments.length, filters = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    filters[_key - 1] = arguments[_key];\n  }\n  var filteredSelectedFiles = filters.reduce(function (prevFiles, filter) {\n    return filter ? prevFiles.filter(filter) : prevFiles;\n  }, selectedFiles);\n  return filteredSelectedFiles;\n};\nvar getSelectedFilesForAction = function getSelectedFilesForAction(state, fileActionId) {\n  return selectSelectedFilesForAction(fileActionId)(state);\n};\n\n/**\r\n * Merges multiple file action arrays into one while removing duplicates\r\n */\n\nvar mergeFileActionsArrays = function mergeFileActionsArrays() {\n  var _Array;\n  var seenActionIds = new Set();\n  var addToSeen = function addToSeen(a) {\n    return !!seenActionIds.add(a.id);\n  };\n  var wasNotSeen = function wasNotSeen(a) {\n    return !seenActionIds.has(a.id);\n  };\n  for (var _len = arguments.length, fileActionArrays = new Array(_len), _key = 0; _key < _len; _key++) {\n    fileActionArrays[_key] = arguments[_key];\n  }\n  var duplicateFreeArrays = fileActionArrays.map(function (arr) {\n    var duplicateFreeArray = arr.filter(wasNotSeen);\n    duplicateFreeArray.map(addToSeen);\n    return duplicateFreeArray;\n  });\n  return (_Array = new Array()).concat.apply(_Array, duplicateFreeArrays);\n};\nvar thunkUpdateRawFileActions = function thunkUpdateRawFileActions(rawFileActions, disableDefaultFileActions) {\n  return function (dispatch) {\n    var _sanitizeInputArray = sanitizeInputArray('fileActions', rawFileActions),\n      sanitizedArray = _sanitizeInputArray.sanitizedArray,\n      errorMessages = _sanitizeInputArray.errorMessages; // Add default actions unless user disabled them\n\n    var defaultActionsToAdd;\n    if (Array.isArray(disableDefaultFileActions)) {\n      var disabledActionIds = new Set(disableDefaultFileActions);\n      defaultActionsToAdd = DefaultFileActions.filter(function (action) {\n        return !disabledActionIds.has(action.id);\n      });\n    } else if (disableDefaultFileActions) {\n      defaultActionsToAdd = [];\n    } else {\n      defaultActionsToAdd = DefaultFileActions;\n    }\n    var fileActions = mergeFileActionsArrays(sanitizedArray, EssentialFileActions, defaultActionsToAdd);\n    var optionDefaults = {};\n    fileActions.map(function (a) {\n      return a.option ? optionDefaults[a.option.id] = a.option.defaultValue : null;\n    });\n    dispatch(reduxActions.setRawFileActions(rawFileActions));\n    dispatch(reduxActions.setFileActionsErrorMessages(errorMessages));\n    dispatch(reduxActions.setFileActions(fileActions));\n    dispatch(reduxActions.setOptionDefaults(optionDefaults));\n    dispatch(thunkUpdateToolbarNContextMenuItems(fileActions));\n  };\n};\nvar thunkUpdateToolbarNContextMenuItems = function thunkUpdateToolbarNContextMenuItems(fileActions) {\n  return function (dispatch) {\n    var excludedToolbarFileActionIds = new Set([\n    // TODO: Move decision to exclude actions somewhere else, as users' custom\n    //  components might not give these actions special treatment like Chonky does.\n    ChonkyActions.OpenParentFolder.id]);\n    var toolbarItems = [];\n    var seenToolbarGroups = {};\n    var contextMenuItems = [];\n    var seenContextMenuGroups = {};\n    var getGroup = function getGroup(itemArray, seenMap, groupName) {\n      if (seenMap[groupName]) return seenMap[groupName];\n      var group = {\n        name: groupName,\n        fileActionIds: []\n      };\n      itemArray.push(group);\n      seenMap[groupName] = group;\n      return group;\n    };\n    for (var _iterator = _createForOfIteratorHelperLoose(fileActions), _step; !(_step = _iterator()).done;) {\n      var action = _step.value;\n      var button = action.button;\n      if (!button) continue;\n      if (button.toolbar && !excludedToolbarFileActionIds.has(action.id)) {\n        if (button.group) {\n          var group = getGroup(toolbarItems, seenToolbarGroups, button.group);\n          group.fileActionIds.push(action.id);\n        } else {\n          toolbarItems.push(action.id);\n        }\n      }\n      if (button.contextMenu) {\n        if (button.group) {\n          var _group = getGroup(contextMenuItems, seenContextMenuGroups, button.group);\n          _group.fileActionIds.push(action.id);\n        } else {\n          contextMenuItems.push(action.id);\n        }\n      }\n    }\n    dispatch(reduxActions.updateFileActionMenuItems([toolbarItems, contextMenuItems]));\n  };\n};\nvar thunkUpdateDefaultFileViewActionId = function thunkUpdateDefaultFileViewActionId(fileActionId) {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n      fileActionMap = _getState.fileActionMap;\n    var action = fileActionId ? fileActionMap[fileActionId] : null;\n    if (action && action.fileViewConfig) {\n      dispatch(reduxActions.setFileViewConfig(action.fileViewConfig));\n    }\n  };\n};\nvar thunkActivateSortAction = function thunkActivateSortAction(fileActionId) {\n  return function (dispatch, getState) {\n    if (!fileActionId) return;\n    var _getState2 = getState(),\n      oldActionId = _getState2.sortActionId,\n      oldOrder = _getState2.sortOrder,\n      fileActionMap = _getState2.fileActionMap;\n    var action = fileActionMap[fileActionId];\n    if (!action || !action.sortKeySelector) return;\n    var order = oldOrder === SortOrder.ASC ? SortOrder.DESC : SortOrder.ASC;\n    if (oldActionId !== fileActionId) {\n      order = SortOrder.ASC;\n    }\n    dispatch(reduxActions.setSort({\n      actionId: fileActionId,\n      order: order\n    }));\n  };\n};\nvar thunkApplySelectionTransform = function thunkApplySelectionTransform(action) {\n  return function (dispatch, getState) {\n    var selectionTransform = action.selectionTransform;\n    if (!selectionTransform) return;\n    var state = getState();\n    var prevSelection = new Set(Object.keys(selectSelectionMap(state)));\n    var hiddenFileIds = new Set(Object.keys(selectHiddenFileIdMap(state)));\n    var newSelection = selectionTransform({\n      prevSelection: prevSelection,\n      fileIds: selectCleanFileIds(state),\n      fileMap: selectFileMap(state),\n      hiddenFileIds: hiddenFileIds\n    });\n    if (!newSelection) return;\n    if (newSelection.size === 0) {\n      dispatch(reduxActions.clearSelection());\n    } else {\n      dispatch(reduxActions.selectFiles({\n        fileIds: Array.from(newSelection),\n        reset: true\n      }));\n    }\n  };\n};\n\n/**\r\n * Thunk that dispatches actions to the external (user-provided) action handler.\r\n */\n\nvar thunkDispatchFileAction = function thunkDispatchFileAction(data) {\n  return function (_dispatch, getState) {\n    Logger.debug(\"FILE ACTION DISPATCH: [\" + data.id + \"]\", 'data:', data);\n    var state = getState();\n    var action = selectFileActionMap(state)[data.id];\n    var externalFileActionHandler = selectExternalFileActionHandler(state);\n    if (action) {\n      if (externalFileActionHandler) {\n        Promise.resolve(externalFileActionHandler(data))[\"catch\"](function (error) {\n          return Logger.error(\"User-defined file action handler threw an error: \" + error.message);\n        });\n      }\n    } else {\n      Logger.warn(\"Internal components dispatched the \\\"\" + data.id + \"\\\" file action, but such \" + \"action was not registered.\");\n    }\n  };\n};\n/**\r\n * Thunk that is used by internal components (and potentially the user) to \"request\"\r\n * actions. When action is requested, Chonky \"prepares\" the action data by extracting it\r\n * from Redux state. Once action data is ready, Chonky executes some side effect and/or\r\n * dispatches the action to the external action handler.\r\n */\n\nvar thunkRequestFileAction = function thunkRequestFileAction(action, payload) {\n  return function (dispatch, getState) {\n    Logger.debug(\"FILE ACTION REQUEST: [\" + action.id + \"]\", 'action:', action, 'payload:', payload);\n    var state = getState();\n    var instanceId = selectInstanceId(state);\n    if (!selectFileActionMap(state)[action.id]) {\n      Logger.warn(\"The action \\\"\" + action.id + \"\\\" was requested, but it is not registered. The \" + \"action will still be dispatched, but this might indicate a bug in \" + \"the code. Please register your actions by passing them to \" + \"\\\"fileActions\\\" prop.\");\n    } // Determine files for the action if action requires selection\n\n    var selectedFiles = selectSelectedFiles(state);\n    var selectedFilesForAction = action.fileFilter ? selectedFiles.filter(action.fileFilter) : selectedFiles;\n    if (action.requiresSelection && selectedFilesForAction.length === 0) {\n      Logger.warn(\"Internal components requested the \\\"\" + action.id + \"\\\" file \" + \"action, but the selection for this action was empty. This \" + \"might a bug in the code of the presentational components.\");\n      return;\n    }\n    var contextMenuTriggerFile = selectContextMenuTriggerFile(state);\n    var actionState = {\n      instanceId: instanceId,\n      selectedFiles: selectedFiles,\n      selectedFilesForAction: selectedFilesForAction,\n      contextMenuTriggerFile: contextMenuTriggerFile\n    }; // === Update sort state if necessary\n\n    var sortKeySelector = action.sortKeySelector;\n    if (sortKeySelector) dispatch(thunkActivateSortAction(action.id)); // === Update file view state if necessary\n\n    var fileViewConfig = action.fileViewConfig;\n    if (fileViewConfig) dispatch(reduxActions.setFileViewConfig(fileViewConfig)); // === Update option state if necessary\n\n    var option = action.option;\n    if (option) dispatch(reduxActions.toggleOption(option.id)); // === Apply selection transform if necessary\n\n    var selectionTransform = action.selectionTransform;\n    if (selectionTransform) dispatch(thunkApplySelectionTransform(action)); // Apply the effect\n\n    var effect = action.effect;\n    var maybeEffectPromise = undefined;\n    if (effect) {\n      try {\n        maybeEffectPromise = effect({\n          action: action,\n          payload: payload,\n          state: actionState,\n          reduxDispatch: dispatch,\n          getReduxState: getState\n        });\n      } catch (error) {\n        Logger.error(\"User-defined effect function for action \" + action.id + \" threw an \" + (\"error: \" + error.message));\n      }\n    } // Dispatch the action to user code. Deliberately call it after all other\n    // operations are over.\n\n    return Promise.resolve(maybeEffectPromise).then(function (effectResult) {\n      var data = {\n        id: action.id,\n        action: action,\n        payload: payload,\n        state: actionState\n      };\n      triggerDispatchAfterEffect(dispatch, data, effectResult);\n    })[\"catch\"](function (error) {\n      Logger.error(\"User-defined effect function for action \" + action.id + \" returned a \" + (\"promise that was rejected: \" + error.message));\n      var data = {\n        id: action.id,\n        action: action,\n        payload: payload,\n        state: actionState\n      };\n      triggerDispatchAfterEffect(dispatch, data, undefined);\n    });\n  };\n};\nvar triggerDispatchAfterEffect = function triggerDispatchAfterEffect(dispatch, data, effectResult) {\n  var preventDispatch = effectResult === true;\n  if (!preventDispatch) dispatch(thunkDispatchFileAction(data));\n};\nvar FileViewMode;\n(function (FileViewMode) {\n  FileViewMode[\"List\"] = \"list\";\n  FileViewMode[\"Compact\"] = \"compact\";\n  FileViewMode[\"Grid\"] = \"grid\";\n})(FileViewMode || (FileViewMode = {}));\nvar ChonkyIconName;\n(function (ChonkyIconName) {\n  // Misc\n  ChonkyIconName[\"loading\"] = \"loading\";\n  ChonkyIconName[\"dropdown\"] = \"dropdown\";\n  ChonkyIconName[\"placeholder\"] = \"placeholder\"; // File Actions: Drag & drop\n\n  ChonkyIconName[\"dndDragging\"] = \"dndDragging\";\n  ChonkyIconName[\"dndCanDrop\"] = \"dndCanDrop\";\n  ChonkyIconName[\"dndCannotDrop\"] = \"dndCannotDrop\"; // File Actions: File operations\n\n  ChonkyIconName[\"openFiles\"] = \"openFiles\";\n  ChonkyIconName[\"openParentFolder\"] = \"openParentFolder\";\n  ChonkyIconName[\"copy\"] = \"copy\";\n  ChonkyIconName[\"paste\"] = \"paste\";\n  ChonkyIconName[\"share\"] = \"share\";\n  ChonkyIconName[\"search\"] = \"search\";\n  ChonkyIconName[\"selectAllFiles\"] = \"selectAllFiles\";\n  ChonkyIconName[\"clearSelection\"] = \"clearSelection\"; // File Actions: Sorting & options\n\n  ChonkyIconName[\"sortAsc\"] = \"sortAsc\";\n  ChonkyIconName[\"sortDesc\"] = \"sortDesc\";\n  ChonkyIconName[\"toggleOn\"] = \"toggleOn\";\n  ChonkyIconName[\"toggleOff\"] = \"toggleOff\"; // File Actions: File Views\n\n  ChonkyIconName[\"list\"] = \"list\";\n  ChonkyIconName[\"compact\"] = \"compact\";\n  ChonkyIconName[\"smallThumbnail\"] = \"smallThumbnail\";\n  ChonkyIconName[\"largeThumbnail\"] = \"largeThumbnail\"; // File Actions: Unsorted\n\n  ChonkyIconName[\"folder\"] = \"folder\";\n  ChonkyIconName[\"folderCreate\"] = \"folderCreate\";\n  ChonkyIconName[\"folderOpen\"] = \"folderOpen\";\n  ChonkyIconName[\"folderChainSeparator\"] = \"folderChainSeparator\";\n  ChonkyIconName[\"download\"] = \"download\";\n  ChonkyIconName[\"upload\"] = \"upload\";\n  ChonkyIconName[\"trash\"] = \"trash\";\n  ChonkyIconName[\"fallbackIcon\"] = \"fallbackIcon\"; // File modifiers\n\n  ChonkyIconName[\"symlink\"] = \"symlink\";\n  ChonkyIconName[\"hidden\"] = \"hidden\"; // Generic file types\n\n  ChonkyIconName[\"file\"] = \"file\";\n  ChonkyIconName[\"license\"] = \"license\";\n  ChonkyIconName[\"code\"] = \"code\";\n  ChonkyIconName[\"config\"] = \"config\";\n  ChonkyIconName[\"model\"] = \"model\";\n  ChonkyIconName[\"database\"] = \"database\";\n  ChonkyIconName[\"text\"] = \"text\";\n  ChonkyIconName[\"archive\"] = \"archive\";\n  ChonkyIconName[\"image\"] = \"image\";\n  ChonkyIconName[\"video\"] = \"video\";\n  ChonkyIconName[\"info\"] = \"info\";\n  ChonkyIconName[\"key\"] = \"key\";\n  ChonkyIconName[\"lock\"] = \"lock\";\n  ChonkyIconName[\"music\"] = \"music\";\n  ChonkyIconName[\"terminal\"] = \"terminal\";\n  ChonkyIconName[\"users\"] = \"users\"; // OS file types\n\n  ChonkyIconName[\"linux\"] = \"linux\";\n  ChonkyIconName[\"ubuntu\"] = \"ubuntu\";\n  ChonkyIconName[\"windows\"] = \"windows\"; // Programming language file types\n\n  ChonkyIconName[\"rust\"] = \"rust\";\n  ChonkyIconName[\"python\"] = \"python\";\n  ChonkyIconName[\"nodejs\"] = \"nodejs\";\n  ChonkyIconName[\"php\"] = \"php\"; // Development tools file types\n\n  ChonkyIconName[\"git\"] = \"git\"; // Brands file types\n\n  ChonkyIconName[\"adobe\"] = \"adobe\"; // Other program file types\n\n  ChonkyIconName[\"pdf\"] = \"pdf\";\n  ChonkyIconName[\"excel\"] = \"excel\";\n  ChonkyIconName[\"word\"] = \"word\";\n  ChonkyIconName[\"flash\"] = \"flash\";\n})(ChonkyIconName || (ChonkyIconName = {}));\nvar defineFileAction = function defineFileAction(action, effect) {\n  if (action.__payloadType !== undefined && (action.hotkeys || action.button)) {\n    var errorMessage = \"Invalid definition was provided for file action \\\"\" + action.id + \"\\\". Actions \" + \"that specify hotkeys or buttons cannot define a payload type. If \" + \"your application requires this functionality, define two actions \" + \"and chain them using effects.\";\n    Logger.error(errorMessage);\n    throw new Error(errorMessage);\n  }\n  action.effect = effect;\n  return action;\n};\n/**\r\n * Recursively check the current element and the parent elements, going bottom-up.\r\n * Returns the first element to match the predicate, otherwise returns null if such\r\n * element is not found.\r\n */\n\nvar findElementAmongAncestors = function findElementAmongAncestors(maybeElement, predicate) {\n  if (!maybeElement) return maybeElement;\n  if (predicate(maybeElement)) return maybeElement;\n  if (maybeElement.parentElement) {\n    return findElementAmongAncestors(maybeElement.parentElement, predicate);\n  }\n  return null;\n};\nvar elementIsInsideButton = function elementIsInsideButton(buttonCandidate) {\n  return !!findElementAmongAncestors(buttonCandidate, function (element) {\n    return element.tagName && element.tagName.toLowerCase() === 'button';\n  });\n};\nvar getValueOrFallback = function getValueOrFallback(value, fallback, desiredType) {\n  if (desiredType) {\n    return typeof value === desiredType ? value : fallback;\n  }\n  return value !== undefined ? value : fallback;\n};\nvar reduxThunks = {\n  selectRange: function selectRange(params) {\n    return function (dispatch, getState) {\n      var state = getState();\n      if (state.disableSelection) return;\n      var displayFileIds = selectors.getDisplayFileIds(state);\n      var fileIdsToSelect = displayFileIds.slice(params.rangeStart, params.rangeEnd + 1).filter(function (id) {\n        return id && FileHelper.isSelectable(state.fileMap[id]);\n      });\n      dispatch(reduxActions.selectFiles({\n        fileIds: fileIdsToSelect,\n        reset: !!params.reset\n      }));\n    };\n  }\n};\nvar EssentialActions = {\n  /**\r\n   * Action that is dispatched when the user clicks on a file entry using their mouse.\r\n   * Both single clicks and double clicks trigger this action.\r\n   */\n  MouseClickFile: /*#__PURE__*/defineFileAction({\n    id: 'mouse_click_file',\n    __payloadType: {}\n  }, function (_ref) {\n    var payload = _ref.payload,\n      reduxDispatch = _ref.reduxDispatch,\n      getReduxState = _ref.getReduxState;\n    if (payload.clickType === 'double') {\n      if (FileHelper.isOpenable(payload.file)) {\n        reduxDispatch(thunkRequestFileAction(ChonkyActions.OpenFiles, {\n          targetFile: payload.file,\n          // To simulate Windows Explorer and Nautilus behaviour,\n          // a double click on a file only opens that file even if\n          // there is a selection.\n          files: [payload.file]\n        }));\n      }\n    } else {\n      // We're dealing with a single click\n      var disableSelection = selectDisableSelection(getReduxState());\n      if (FileHelper.isSelectable(payload.file) && !disableSelection) {\n        if (payload.ctrlKey) {\n          // Multiple selection\n          reduxDispatch(reduxActions.toggleSelection({\n            fileId: payload.file.id,\n            exclusive: false\n          }));\n          reduxDispatch(reduxActions.setLastClickIndex({\n            index: payload.fileDisplayIndex,\n            fileId: payload.file.id\n          }));\n        } else if (payload.shiftKey) {\n          // Range selection\n          var lastClickIndex = selectors.getLastClickIndex(getReduxState());\n          if (typeof lastClickIndex === 'number') {\n            // We have the index of the previous click\n            var rangeStart = lastClickIndex;\n            var rangeEnd = payload.fileDisplayIndex;\n            if (rangeStart > rangeEnd) {\n              var _ref2 = [rangeEnd, rangeStart];\n              rangeStart = _ref2[0];\n              rangeEnd = _ref2[1];\n            }\n            reduxDispatch(reduxThunks.selectRange({\n              rangeStart: rangeStart,\n              rangeEnd: rangeEnd\n            }));\n          } else {\n            // Since we can't do a range selection, do a\n            // multiple selection\n            reduxDispatch(reduxActions.toggleSelection({\n              fileId: payload.file.id,\n              exclusive: false\n            }));\n            reduxDispatch(reduxActions.setLastClickIndex({\n              index: payload.fileDisplayIndex,\n              fileId: payload.file.id\n            }));\n          }\n        } else {\n          // Exclusive selection\n          reduxDispatch(reduxActions.toggleSelection({\n            fileId: payload.file.id,\n            exclusive: true\n          }));\n          reduxDispatch(reduxActions.setLastClickIndex({\n            index: payload.fileDisplayIndex,\n            fileId: payload.file.id\n          }));\n        }\n      } else {\n        if (!payload.ctrlKey && !disableSelection) {\n          reduxDispatch(reduxActions.clearSelection());\n        }\n        reduxDispatch(reduxActions.setLastClickIndex({\n          index: payload.fileDisplayIndex,\n          fileId: payload.file.id\n        }));\n      }\n    }\n  }),\n  /**\r\n   * Action that is dispatched when the user \"clicks\" on a file using their keyboard.\r\n   * Using Space and Enter keys counts as clicking.\r\n   */\n  KeyboardClickFile: /*#__PURE__*/defineFileAction({\n    id: 'keyboard_click_file',\n    __payloadType: {}\n  }, function (_ref3) {\n    var payload = _ref3.payload,\n      reduxDispatch = _ref3.reduxDispatch,\n      getReduxState = _ref3.getReduxState;\n    reduxDispatch(reduxActions.setLastClickIndex({\n      index: payload.fileDisplayIndex,\n      fileId: payload.file.id\n    }));\n    if (payload.enterKey) {\n      // We only dispatch the Open Files action here when the selection is\n      // empty. Otherwise, `Enter` key presses are handled by the\n      // hotkey manager for the Open Files action.\n      if (selectSelectionSize(getReduxState()) === 0) {\n        reduxDispatch(thunkRequestFileAction(ChonkyActions.OpenFiles, {\n          targetFile: payload.file,\n          files: [payload.file]\n        }));\n      }\n    } else if (payload.spaceKey && FileHelper.isSelectable(payload.file)) {\n      reduxDispatch(reduxActions.toggleSelection({\n        fileId: payload.file.id,\n        exclusive: payload.ctrlKey\n      }));\n    }\n  }),\n  /**\r\n   * Action that is dispatched when user starts dragging some file.\r\n   */\n  StartDragNDrop: /*#__PURE__*/defineFileAction({\n    id: 'start_drag_n_drop',\n    __payloadType: {}\n  }, function (_ref4) {\n    var payload = _ref4.payload,\n      reduxDispatch = _ref4.reduxDispatch,\n      getReduxState = _ref4.getReduxState;\n    var file = payload.draggedFile;\n    if (!getIsFileSelected(getReduxState(), file)) {\n      if (FileHelper.isSelectable(file)) {\n        reduxDispatch(reduxActions.selectFiles({\n          fileIds: [file.id],\n          reset: true\n        }));\n      }\n    }\n  }),\n  /**\r\n   * Action that is dispatched when user either cancels the drag & drop interaction,\r\n   * or drops a file somewhere.\r\n   */\n  EndDragNDrop: /*#__PURE__*/defineFileAction({\n    id: 'end_drag_n_drop',\n    __payloadType: {}\n  }, function (_ref5) {\n    var payload = _ref5.payload,\n      reduxDispatch = _ref5.reduxDispatch,\n      getReduxState = _ref5.getReduxState;\n    if (getIsFileSelected(getReduxState(), payload.destination)) {\n      // Can't drop a selection into itself\n      return;\n    }\n    var draggedFile = payload.draggedFile,\n      selectedFiles = payload.selectedFiles;\n    var droppedFiles = selectedFiles.length > 0 ? selectedFiles : [draggedFile];\n    reduxDispatch(thunkRequestFileAction(ChonkyActions.MoveFiles, _extends({}, payload, {\n      files: droppedFiles\n    })));\n  }),\n  /**\r\n   * Action that is dispatched when user moves files from one folder to another,\r\n   * usually by dragging & dropping some files into the folder.\r\n   */\n  MoveFiles: /*#__PURE__*/defineFileAction({\n    id: 'move_files',\n    __payloadType: {}\n  }),\n  /**\r\n   * Action that is dispatched when the selection changes for any reason.\r\n   */\n  ChangeSelection: /*#__PURE__*/defineFileAction({\n    id: 'change_selection',\n    __payloadType: {}\n  }),\n  /**\r\n   * Action that is dispatched when user wants to open some files. This action is\r\n   * often triggered by other actions.\r\n   */\n  OpenFiles: /*#__PURE__*/defineFileAction({\n    id: 'open_files',\n    __payloadType: {}\n  }),\n  /**\r\n   * Action that is triggered when user wants to go up a directory.\r\n   */\n  OpenParentFolder: /*#__PURE__*/defineFileAction({\n    id: 'open_parent_folder',\n    hotkeys: ['backspace'],\n    button: {\n      name: 'Go up a directory',\n      toolbar: true,\n      contextMenu: false,\n      icon: ChonkyIconName.openParentFolder,\n      iconOnly: true\n    }\n  }, function (_ref6) {\n    var reduxDispatch = _ref6.reduxDispatch,\n      getReduxState = _ref6.getReduxState;\n    var parentFolder = selectParentFolder(getReduxState());\n    if (FileHelper.isOpenable(parentFolder)) {\n      reduxDispatch(thunkRequestFileAction(ChonkyActions.OpenFiles, {\n        targetFile: parentFolder,\n        files: [parentFolder]\n      }));\n    } else {\n      Logger.warn('Open parent folder effect was triggered  even though the parent folder' + ' is not openable. This indicates a bug in presentation components.');\n    }\n  }),\n  /**\r\n   * Action that is dispatched when user opens the context menu, either by right click\r\n   * on something or using the context menu button on their keyboard.\r\n   */\n  OpenFileContextMenu: /*#__PURE__*/defineFileAction({\n    id: 'open_file_context_menu',\n    __payloadType: {}\n  }, function (_ref7) {\n    var payload = _ref7.payload,\n      reduxDispatch = _ref7.reduxDispatch,\n      getReduxState = _ref7.getReduxState;\n    // TODO: Check if the context menu component is actually enabled. There is a\n    //  chance it doesn't matter if it is enabled or not - if it is not mounted,\n    //  the action will simply have no effect. It also allows users to provide\n    //  their own components - however, users could also flip the \"context menu\n    //  component mounted\" switch...\n    var triggerFile = getFileData(getReduxState(), payload.triggerFileId);\n    if (triggerFile) {\n      var fileSelected = getIsFileSelected(getReduxState(), triggerFile);\n      if (!fileSelected) {\n        // If file is selected, we leave the selection as is. If it is not\n        // selected, it means user right clicked the file with no selection.\n        // We simulate the Windows Explorer/Nautilus behaviour of moving\n        // selection to this file.\n        if (FileHelper.isSelectable(triggerFile)) {\n          reduxDispatch(reduxActions.selectFiles({\n            fileIds: [payload.triggerFileId],\n            reset: true\n          }));\n        } else {\n          reduxDispatch(reduxActions.clearSelection());\n        }\n      }\n    }\n    reduxDispatch(reduxActions.showContextMenu({\n      triggerFileId: payload.triggerFileId,\n      mouseX: payload.clientX - 2,\n      mouseY: payload.clientY - 4\n    }));\n  })\n};\nvar DefaultActions = {\n  /**\r\n   * Action that can be used to open currently selected files.\r\n   */\n  OpenSelection: /*#__PURE__*/defineFileAction({\n    id: 'open_selection',\n    hotkeys: ['enter'],\n    requiresSelection: true,\n    fileFilter: FileHelper.isOpenable,\n    button: {\n      name: 'Open selection',\n      toolbar: true,\n      contextMenu: true,\n      group: 'Actions',\n      icon: ChonkyIconName.openFiles\n    }\n  }, function (_ref) {\n    var state = _ref.state,\n      reduxDispatch = _ref.reduxDispatch;\n    reduxDispatch(thunkRequestFileAction(EssentialActions.OpenFiles, {\n      files: state.selectedFilesForAction\n    }));\n    return undefined;\n  }),\n  /**\r\n   * Action that selects all files.\r\n   */\n  SelectAllFiles: /*#__PURE__*/defineFileAction({\n    id: 'select_all_files',\n    hotkeys: ['ctrl+a'],\n    button: {\n      name: 'Select all files',\n      toolbar: true,\n      contextMenu: true,\n      group: 'Actions',\n      icon: ChonkyIconName.selectAllFiles\n    },\n    selectionTransform: function selectionTransform(_ref2) {\n      var fileIds = _ref2.fileIds,\n        hiddenFileIds = _ref2.hiddenFileIds;\n      var newSelection = new Set();\n      fileIds.map(function (fileId) {\n        // We don't need to check if file is selectable because Chonky does\n        // it own checks internally.\n        if (!hiddenFileIds.has(fileId)) newSelection.add(fileId);\n      });\n      return newSelection;\n    }\n  }),\n  /**\r\n   * Action that clear the file selection.\r\n   */\n  ClearSelection: /*#__PURE__*/defineFileAction({\n    id: 'clear_selection',\n    hotkeys: ['escape'],\n    button: {\n      name: 'Clear selection',\n      toolbar: true,\n      contextMenu: true,\n      group: 'Actions',\n      icon: ChonkyIconName.clearSelection\n    },\n    selectionTransform: function selectionTransform(_ref3) {\n      var prevSelection = _ref3.prevSelection;\n      if (prevSelection.size === 0) return null;\n      return new Set();\n    }\n  }),\n  /**\r\n   * Action that enables List view.\r\n   */\n  EnableListView: /*#__PURE__*/defineFileAction({\n    id: 'enable_list_view',\n    fileViewConfig: {\n      mode: FileViewMode.List,\n      entryHeight: 30\n    },\n    button: {\n      name: 'Switch to List view',\n      toolbar: true,\n      icon: ChonkyIconName.list,\n      iconOnly: true\n    }\n  }),\n  /**\r\n   * Action that enables Compact view. Note that compact view is still\r\n   * experimental and should not be used in production.\r\n   */\n  EnableCompactView: /*#__PURE__*/defineFileAction({\n    // TODO: Don't enable until compact view is fully supported\n    id: 'enable_compact_view',\n    fileViewConfig: {\n      mode: FileViewMode.Compact,\n      entryHeight: 40,\n      entryWidth: 220\n    },\n    button: {\n      name: 'Switch to Compact view',\n      toolbar: true,\n      icon: ChonkyIconName.compact,\n      iconOnly: true\n    }\n  }),\n  /**\r\n   * Action that enables Grid view.\r\n   */\n  EnableGridView: /*#__PURE__*/defineFileAction({\n    id: 'enable_grid_view',\n    fileViewConfig: {\n      mode: FileViewMode.Grid,\n      entryWidth: 165,\n      entryHeight: 130\n    },\n    button: {\n      name: 'Switch to Grid view',\n      toolbar: true,\n      icon: ChonkyIconName.smallThumbnail,\n      iconOnly: true\n    }\n  }),\n  /**\r\n   * Action that sorts files by `file.name`.\r\n   */\n  SortFilesByName: /*#__PURE__*/defineFileAction({\n    id: 'sort_files_by_name',\n    sortKeySelector: function sortKeySelector(file) {\n      return file ? file.name.toLowerCase() : undefined;\n    },\n    button: {\n      name: 'Sort by name',\n      toolbar: true,\n      group: 'Options'\n    }\n  }),\n  /**\r\n   * Action that sorts files by `file.size`.\r\n   */\n  SortFilesBySize: /*#__PURE__*/defineFileAction({\n    id: 'sort_files_by_size',\n    sortKeySelector: function sortKeySelector(file) {\n      return file ? file.size : undefined;\n    },\n    button: {\n      name: 'Sort by size',\n      toolbar: true,\n      group: 'Options'\n    }\n  }),\n  /**\r\n   * Action that sorts files by `file.modDate`.\r\n   */\n  SortFilesByDate: /*#__PURE__*/defineFileAction({\n    id: 'sort_files_by_date',\n    sortKeySelector: function sortKeySelector(file) {\n      return file ? file.modDate : undefined;\n    },\n    button: {\n      name: 'Sort by date',\n      toolbar: true,\n      group: 'Options'\n    }\n  }),\n  /**\r\n   * Action that toggles whether hidden files are shown to the user or not.\r\n   */\n  ToggleHiddenFiles: /*#__PURE__*/defineFileAction({\n    id: 'toggle_hidden_files',\n    hotkeys: ['ctrl+h'],\n    option: {\n      id: OptionIds.ShowHiddenFiles,\n      defaultValue: true\n    },\n    button: {\n      name: 'Show hidden files',\n      toolbar: true,\n      group: 'Options'\n    }\n  }),\n  /**\r\n   * Action that toggles whether folders should appear before files regardless of\r\n   * current sort function.\r\n   */\n  ToggleShowFoldersFirst: /*#__PURE__*/defineFileAction({\n    id: 'toggle_show_folders_first',\n    option: {\n      id: OptionIds.ShowFoldersFirst,\n      defaultValue: true\n    },\n    button: {\n      name: 'Show folders first',\n      toolbar: true,\n      group: 'Options'\n    }\n  }),\n  /**\r\n   * Action that focuses the search input when it is dispatched.\r\n   */\n  FocusSearchInput: /*#__PURE__*/defineFileAction({\n    id: 'focus_search_input',\n    hotkeys: ['ctrl+f']\n  }, function (_ref4) {\n    var getReduxState = _ref4.getReduxState;\n    var focusSearchInput = selectFocusSearchInput(getReduxState());\n    if (focusSearchInput) focusSearchInput();\n  }),\n  /**\r\n   * Action that enables List view.\r\n   */\n  ToggleDarkMode: /*#__PURE__*/defineFileAction({\n    id: 'enable_dark_mode',\n    option: {\n      id: OptionIds.DarkMode,\n      defaultValue: false\n    },\n    button: {\n      name: 'Enable dark mode',\n      toolbar: true,\n      icon: ChonkyIconName.list,\n      iconOnly: true\n    }\n  })\n};\nvar ExtraActions = {\n  /**\r\n   * Action that adds a button and shortcut to copy files.\r\n   */\n  CopyFiles: /*#__PURE__*/defineFileAction({\n    id: 'copy_files',\n    requiresSelection: true,\n    hotkeys: ['ctrl+c'],\n    button: {\n      name: 'Copy selection',\n      toolbar: true,\n      contextMenu: true,\n      group: 'Actions',\n      icon: ChonkyIconName.copy\n    }\n  }),\n  /**\r\n   * Action that adds a button to create a new folder.\r\n   */\n  CreateFolder: /*#__PURE__*/defineFileAction({\n    id: 'create_folder',\n    button: {\n      name: 'Create folder',\n      toolbar: true,\n      tooltip: 'Create a folder',\n      icon: ChonkyIconName.folderCreate\n    }\n  }),\n  /**\r\n   * Action that adds a button to upload files.\r\n   */\n  UploadFiles: /*#__PURE__*/defineFileAction({\n    id: 'upload_files',\n    button: {\n      name: 'Upload files',\n      toolbar: true,\n      tooltip: 'Upload files',\n      icon: ChonkyIconName.upload\n    }\n  }),\n  /**\r\n   * Action that adds a button to download files.\r\n   */\n  DownloadFiles: /*#__PURE__*/defineFileAction({\n    id: 'download_files',\n    requiresSelection: true,\n    button: {\n      name: 'Download files',\n      toolbar: true,\n      contextMenu: true,\n      group: 'Actions',\n      icon: ChonkyIconName.download\n    }\n  }),\n  /**\r\n   * Action that adds a button and shortcut to delete files.\r\n   */\n  DeleteFiles: /*#__PURE__*/defineFileAction({\n    id: 'delete_files',\n    requiresSelection: true,\n    hotkeys: ['delete'],\n    button: {\n      name: 'Delete files',\n      toolbar: true,\n      contextMenu: true,\n      group: 'Actions',\n      icon: ChonkyIconName.trash\n    }\n  })\n};\nvar ChonkyActions = /*#__PURE__*/_extends({}, EssentialActions, DefaultActions, ExtraActions);\nvar EssentialFileActions = [ChonkyActions.MouseClickFile, ChonkyActions.KeyboardClickFile, ChonkyActions.StartDragNDrop, ChonkyActions.EndDragNDrop, ChonkyActions.MoveFiles, ChonkyActions.ChangeSelection, ChonkyActions.OpenFiles, ChonkyActions.OpenParentFolder, ChonkyActions.OpenFileContextMenu];\nvar DefaultFileActions = [ChonkyActions.OpenSelection, ChonkyActions.SelectAllFiles, ChonkyActions.ClearSelection, ChonkyActions.EnableListView,\n// TODO: Don't enable until compact view is fully supported\n// ChonkyActions.EnableCompactView,\nChonkyActions.EnableGridView, ChonkyActions.SortFilesByName, ChonkyActions.SortFilesBySize, ChonkyActions.SortFilesByDate, ChonkyActions.ToggleHiddenFiles, ChonkyActions.ToggleShowFoldersFirst, ChonkyActions.FocusSearchInput];\nvar initialRootState = {\n  instanceId: 'CHONKY_INVALID_ID',\n  externalFileActionHandler: null,\n  rawFileActions: [],\n  fileActionsErrorMessages: [],\n  fileActionMap: {},\n  fileActionIds: [],\n  toolbarItems: [],\n  contextMenuItems: [],\n  rawFolderChain: null,\n  folderChainErrorMessages: [],\n  folderChain: [],\n  rawFiles: [],\n  filesErrorMessages: [],\n  fileMap: {},\n  fileIds: [],\n  cleanFileIds: [],\n  sortedFileIds: [],\n  hiddenFileIdMap: {},\n  focusSearchInput: null,\n  searchString: '',\n  searchMode: 'currentFolder',\n  selectionMap: {},\n  disableSelection: false,\n  fileViewConfig: ChonkyActions.EnableGridView.fileViewConfig,\n  sortActionId: null,\n  sortOrder: SortOrder.ASC,\n  optionMap: {},\n  thumbnailGenerator: null,\n  doubleClickDelay: 300,\n  disableDragAndDrop: false,\n  clearSelectionOnOutsideClick: true,\n  lastClick: null,\n  contextMenuMounted: false,\n  contextMenuConfig: null\n};\nvar reducers = {\n  setExternalFileActionHandler: function setExternalFileActionHandler(state, action) {\n    var _action$payload;\n    state.externalFileActionHandler = (_action$payload = action.payload) != null ? _action$payload : null;\n  },\n  setRawFileActions: function setRawFileActions(state, action) {\n    state.rawFileActions = action.payload;\n  },\n  setFileActionsErrorMessages: function setFileActionsErrorMessages(state, action) {\n    state.fileActionsErrorMessages = action.payload;\n  },\n  setFileActions: function setFileActions(state, action) {\n    var fileActionMap = {};\n    action.payload.map(function (a) {\n      return fileActionMap[a.id] = a;\n    });\n    var fileIds = action.payload.map(function (a) {\n      return a.id;\n    });\n    state.fileActionMap = fileActionMap;\n    state.fileActionIds = fileIds;\n  },\n  updateFileActionMenuItems: function updateFileActionMenuItems(state, action) {\n    var _action$payload2 = action.payload;\n    state.toolbarItems = _action$payload2[0];\n    state.contextMenuItems = _action$payload2[1];\n  },\n  setRawFolderChain: function setRawFolderChain(state, action) {\n    var rawFolderChain = action.payload;\n    var _sanitizeInputArray = sanitizeInputArray('folderChain', rawFolderChain),\n      folderChain = _sanitizeInputArray.sanitizedArray,\n      errorMessages = _sanitizeInputArray.errorMessages;\n    state.rawFolderChain = rawFolderChain;\n    state.folderChain = folderChain;\n    state.folderChainErrorMessages = errorMessages;\n  },\n  setRawFiles: function setRawFiles(state, action) {\n    var rawFiles = action.payload;\n    var _sanitizeInputArray2 = sanitizeInputArray('files', rawFiles),\n      files = _sanitizeInputArray2.sanitizedArray,\n      errorMessages = _sanitizeInputArray2.errorMessages;\n    state.rawFiles = rawFiles;\n    state.filesErrorMessages = errorMessages;\n    var fileMap = {};\n    files.forEach(function (f) {\n      if (f) fileMap[f.id] = f;\n    });\n    var fileIds = files.map(function (f) {\n      return f ? f.id : null;\n    });\n    var cleanFileIds = fileIds.filter(function (f) {\n      return !!f;\n    });\n    state.fileMap = fileMap;\n    state.fileIds = fileIds;\n    state.cleanFileIds = cleanFileIds; // Cleanup selection\n\n    for (var _i = 0, _Object$keys = Object.keys(state.selectionMap); _i < _Object$keys.length; _i++) {\n      var selectedFileId = _Object$keys[_i];\n      if (!fileMap[selectedFileId]) {\n        delete state.selectionMap[selectedFileId];\n      }\n    }\n  },\n  setSortedFileIds: function setSortedFileIds(state, action) {\n    state.sortedFileIds = action.payload;\n  },\n  setHiddenFileIds: function setHiddenFileIds(state, action) {\n    state.hiddenFileIdMap = action.payload; // Cleanup selection\n\n    for (var _i2 = 0, _Object$keys2 = Object.keys(state.selectionMap); _i2 < _Object$keys2.length; _i2++) {\n      var selectedFileId = _Object$keys2[_i2];\n      if (state.hiddenFileIdMap[selectedFileId]) {\n        delete state.selectionMap[selectedFileId];\n      }\n    }\n  },\n  setFocusSearchInput: function setFocusSearchInput(state, action) {\n    state.focusSearchInput = action.payload;\n  },\n  setSearchString: function setSearchString(state, action) {\n    state.searchString = action.payload;\n  },\n  selectAllFiles: function selectAllFiles(state) {\n    state.fileIds.filter(function (id) {\n      return id && FileHelper.isSelectable(state.fileMap[id]);\n    }).map(function (id) {\n      return id ? state.selectionMap[id] = true : null;\n    });\n  },\n  selectFiles: function selectFiles(state, action) {\n    if (state.disableSelection) return;\n    if (action.payload.reset) state.selectionMap = {};\n    action.payload.fileIds.filter(function (id) {\n      return id && FileHelper.isSelectable(state.fileMap[id]);\n    }).map(function (id) {\n      return state.selectionMap[id] = true;\n    });\n  },\n  toggleSelection: function toggleSelection(state, action) {\n    if (state.disableSelection) return;\n    var oldValue = !!state.selectionMap[action.payload.fileId];\n    if (action.payload.exclusive) state.selectionMap = {};\n    if (oldValue) delete state.selectionMap[action.payload.fileId];else if (FileHelper.isSelectable(state.fileMap[action.payload.fileId])) {\n      state.selectionMap[action.payload.fileId] = true;\n    }\n  },\n  clearSelection: function clearSelection(state) {\n    if (state.disableSelection) return;\n    if (Object.keys(state.selectionMap).length !== 0) state.selectionMap = {};\n  },\n  setSelectionDisabled: function setSelectionDisabled(state, action) {\n    state.disableSelection = action.payload;\n    if (Object.keys(state.selectionMap).length !== 0) state.selectionMap = {};\n  },\n  setFileViewConfig: function setFileViewConfig(state, action) {\n    state.fileViewConfig = action.payload;\n  },\n  setSort: function setSort(state, action) {\n    state.sortActionId = action.payload.actionId;\n    state.sortOrder = action.payload.order;\n  },\n  setOptionDefaults: function setOptionDefaults(state, action) {\n    for (var _i3 = 0, _Object$keys3 = Object.keys(action.payload); _i3 < _Object$keys3.length; _i3++) {\n      var optionId = _Object$keys3[_i3];\n      if (optionId in state.optionMap) continue;\n      state.optionMap[optionId] = action.payload[optionId];\n    }\n  },\n  toggleOption: function toggleOption(state, action) {\n    state.optionMap[action.payload] = !state.optionMap[action.payload];\n  },\n  setThumbnailGenerator: function setThumbnailGenerator(state, action) {\n    state.thumbnailGenerator = action.payload;\n  },\n  setDoubleClickDelay: function setDoubleClickDelay(state, action) {\n    state.doubleClickDelay = action.payload;\n  },\n  setDisableDragAndDrop: function setDisableDragAndDrop(state, action) {\n    state.disableDragAndDrop = action.payload;\n  },\n  setClearSelectionOnOutsideClick: function setClearSelectionOnOutsideClick(state, action) {\n    state.clearSelectionOnOutsideClick = action.payload;\n  },\n  setLastClickIndex: function setLastClickIndex(state, action) {\n    state.lastClick = action.payload;\n  },\n  setContextMenuMounted: function setContextMenuMounted(state, action) {\n    state.contextMenuMounted = action.payload;\n  },\n  showContextMenu: function showContextMenu(state, action) {\n    state.contextMenuConfig = action.payload;\n  },\n  hideContextMenu: function hideContextMenu(state) {\n    if (!state.contextMenuConfig) return;\n    state.contextMenuConfig = null;\n  }\n};\nvar _createSlice = /*#__PURE__*/createSlice({\n    name: 'root',\n    initialState: initialRootState,\n    reducers: reducers\n  }),\n  reduxActions = _createSlice.actions,\n  rootReducer = _createSlice.reducer;\nvar useStoreWatchers = function useStoreWatchers(store) {\n  useEffect(function () {\n    var selectionWatcher = watch(function () {\n      return selectSelectionMap(store.getState());\n    });\n    var onSelectionChange = function onSelectionChange(newSelection, oldSelection) {\n      // We don't check for deep equality here as we expect the\n      // reducers to prevent all unnecessary updates.\n      if (newSelection === oldSelection) return; // Notify users the selection has changed.\n\n      var selectedFilesIds = selectSelectedFileIds(store.getState());\n      var selection = new Set(selectedFilesIds);\n      store.dispatch(thunkRequestFileAction(ChonkyActions.ChangeSelection, {\n        selection: selection\n      }));\n    };\n    var unsubscribeCallbacks = [store.subscribe(selectionWatcher(onSelectionChange))];\n    return function () {\n      for (var _iterator = _createForOfIteratorHelperLoose(unsubscribeCallbacks), _step; !(_step = _iterator()).done;) {\n        var unsubscribe = _step.value;\n        unsubscribe();\n      }\n    };\n  }, [store]);\n};\nvar useChonkyStore = function useChonkyStore(chonkyInstanceId) {\n  var store = useStaticValue(function () {\n    var preloadedState = _extends({}, initialRootState, {\n      instanceId: chonkyInstanceId\n    });\n    return configureStore({\n      preloadedState: preloadedState,\n      reducer: rootReducer,\n      middleware: function middleware(getDefaultMiddleware) {\n        return getDefaultMiddleware({\n          serializableCheck: false\n        });\n      },\n      devTools: {\n        name: \"chonky_\" + chonkyInstanceId\n      }\n    });\n  });\n  useStoreWatchers(store);\n  return store;\n};\n/**\r\n * Hook that can be used with parametrized selectors.\r\n */\n\nvar useParamSelector = function useParamSelector(parametrizedSelector) {\n  for (var _len = arguments.length, selectorParams = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    selectorParams[_key - 1] = arguments[_key];\n  }\n  var selector = useCallback(function (state) {\n    return parametrizedSelector.apply(void 0, selectorParams)(state);\n  },\n  // eslint-disable-next-line\n  [parametrizedSelector].concat(selectorParams));\n  return useSelector(selector);\n};\n/**\r\n * DTE - DispatchThunkEffect. This method is used to decrease code duplication in\r\n * main Chonky method.\r\n */\n\nvar useDTE = function useDTE(actionCreator) {\n  for (var _len2 = arguments.length, selectorParams = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    selectorParams[_key2 - 1] = arguments[_key2];\n  }\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(actionCreator.apply(void 0, selectorParams));\n  },\n  // eslint-disable-next-line\n  [dispatch, actionCreator].concat(selectorParams));\n};\nvar usePropReduxUpdate = function usePropReduxUpdate(actionCreator, payload) {\n  var dispatch = useDispatch();\n  useEffect(function () {\n    return dispatch(actionCreator(payload));\n  }, [dispatch, actionCreator, payload]);\n};\n\n/**\r\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\r\n * @copyright 2020\r\n * @license MIT\r\n */\nvar ChonkyIconPlaceholder = function ChonkyIconPlaceholder() {\n  // This component should not be rendered unless the user has misconfigured Chonky\n  var title = 'No icon component found. Please follow Chonky installation instructions to ' + 'provide a pre-made icon component (or a custom icon).';\n  return React.createElement(\"span\", {\n    title: title\n  }, \"\\u26A0\\uFE0F\");\n};\nvar defaultConfig = {\n  fileActions: null,\n  onFileAction: null,\n  thumbnailGenerator: null,\n  doubleClickDelay: 300,\n  disableSelection: false,\n  disableDefaultFileActions: false,\n  disableDragAndDrop: false,\n  disableDragAndDropProvider: false,\n  defaultSortActionId: ChonkyActions.SortFilesByName.id,\n  defaultFileViewActionId: ChonkyActions.EnableGridView.id,\n  clearSelectionOnOutsideClick: true,\n  iconComponent: ChonkyIconPlaceholder,\n  darkMode: false,\n  i18n: {}\n};\nvar setChonkyDefaults = function setChonkyDefaults(config) {\n  for (var _i = 0, _Object$keys = Object.keys(defaultConfig); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    if (key in config) {\n      defaultConfig[key] = config[key];\n    }\n  }\n};\nvar I18nNamespace;\n(function (I18nNamespace) {\n  I18nNamespace[\"Toolbar\"] = \"toolbar\";\n  I18nNamespace[\"FileList\"] = \"fileList\";\n  I18nNamespace[\"FileEntry\"] = \"fileEntry\";\n  I18nNamespace[\"FileContextMenu\"] = \"contextMenu\";\n  I18nNamespace[\"FileActions\"] = \"actions\";\n  I18nNamespace[\"FileActionGroups\"] = \"actionGroups\";\n})(I18nNamespace || (I18nNamespace = {}));\nvar getI18nId = function getI18nId(namespace, stringId) {\n  return \"chonky.\" + namespace + \".\" + stringId;\n};\nvar getActionI18nId = function getActionI18nId(actionId, stringId) {\n  return \"chonky.\" + I18nNamespace.FileActions + \".\" + actionId + \".\" + stringId;\n};\nvar useLocalizedFileActionGroup = function useLocalizedFileActionGroup(groupName) {\n  var intl = useIntl();\n  return useMemo(function () {\n    return intl.formatMessage({\n      id: getI18nId(I18nNamespace.FileActionGroups, groupName),\n      defaultMessage: groupName\n    });\n  }, [groupName, intl]);\n};\nvar useLocalizedFileActionStrings = function useLocalizedFileActionStrings(action) {\n  var intl = useIntl();\n  return useMemo(function () {\n    var _action$button, _action$button2;\n    if (!action) {\n      return {\n        buttonName: '',\n        buttonTooltip: undefined\n      };\n    }\n    var buttonName = intl.formatMessage({\n      id: getActionI18nId(action.id, 'button.name'),\n      defaultMessage: (_action$button = action.button) == null ? void 0 : _action$button.name\n    });\n    var buttonTooltip = undefined;\n    if ((_action$button2 = action.button) != null && _action$button2.tooltip) {\n      var _action$button3;\n\n      // We only translate the tooltip if the original action has a tooltip.\n      buttonTooltip = intl.formatMessage({\n        id: getActionI18nId(action.id, 'button.tooltip'),\n        defaultMessage: (_action$button3 = action.button) == null ? void 0 : _action$button3.tooltip\n      });\n    }\n    return {\n      buttonName: buttonName,\n      buttonTooltip: buttonTooltip\n    };\n  }, [action, intl]);\n};\nvar useLocalizedFileEntryStrings = function useLocalizedFileEntryStrings(file) {\n  var intl = useIntl();\n  var formatters = useContext(ChonkyFormattersContext);\n  return useMemo(function () {\n    return {\n      fileModDateString: formatters.formatFileModDate(intl, file),\n      fileSizeString: formatters.formatFileSize(intl, file)\n    };\n  }, [file, formatters, intl]);\n};\nvar defaultFormatters = {\n  formatFileModDate: function formatFileModDate(intl, file) {\n    var safeModDate = FileHelper.getModDate(file);\n    if (safeModDate) {\n      return intl.formatDate(safeModDate, {\n        dateStyle: 'medium',\n        timeStyle: 'short'\n      });\n    } else {\n      return null;\n    }\n  },\n  formatFileSize: function formatFileSize(_intl, file) {\n    if (!file || typeof file.size !== 'number') return null;\n    var size = file.size;\n    var sizeData = filesize(size, {\n      bits: false,\n      output: 'object'\n    });\n    if (sizeData.symbol === 'B') {\n      return Math.round(sizeData.value / 10) / 100.0 + \" KB\";\n    } else if (sizeData.symbol === 'KB') {\n      return Math.round(sizeData.value) + \" \" + sizeData.symbol;\n    }\n    return sizeData.value + \" \" + sizeData.symbol;\n  }\n};\nvar ChonkyFormattersContext = /*#__PURE__*/createContext(defaultFormatters);\n\n/**\r\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\r\n * @copyright 2019\r\n * @license MIT\r\n */\nvar ChonkyIconContext = /*#__PURE__*/createContext(ChonkyIconPlaceholder);\nvar VideoExtensions = ['3g2', '3gp', '3gpp', 'asf', 'asx', 'avi', 'dvb', 'f4v', 'fli', 'flv', 'fvt', 'h261', 'h263', 'h264', 'jpgm', 'jpgv', 'jpm', 'm1v', 'm2v', 'm4u', 'm4v', 'mj2', 'mjp2', 'mk3d', 'mks', 'mkv', 'mng', 'mov', 'movie', 'mp4', 'mp4v', 'mpe', 'mpeg', 'mpg', 'mpg4', 'mxu', 'ogv', 'pyv', 'qt', 'smv', 'ts', 'uvh', 'uvm', 'uvp', 'uvs', 'uvu', 'uvv', 'uvvh', 'uvvm', 'uvvp', 'uvvs', 'uvvu', 'uvvv', 'viv', 'vob', 'webm', 'wm', 'wmv', 'wmx', 'wvx'];\nvar ImageExtensions = ['3ds', 'apng', 'azv', 'bmp', 'bmp', 'btif', 'cgm', 'cmx', 'djv', 'djvu', 'drle', 'dwg', 'dxf', 'emf', 'exr', 'fbs', 'fh', 'fh4', 'fh5', 'fh7', 'fhc', 'fits', 'fpx', 'fst', 'g3', 'gif', 'heic', 'heics', 'heif', 'heifs', 'ico', 'ico', 'ief', 'jls', 'jng', 'jp2', 'jpe', 'jpeg', 'jpf', 'jpg', 'jpg2', 'jpm', 'jpx', 'jxr', 'ktx', 'mdi', 'mmr', 'npx', 'pbm', 'pct', 'pcx', 'pcx', 'pgm', 'pic', 'png', 'pnm', 'ppm', 'psd', 'pti', 'ras', 'rgb', 'rlc', 'sgi', 'sid', 'sub', 'svg', 'svgz', 't38', 'tap', 'tfx', 'tga', 'tif', 'tiff', 'uvg', 'uvi', 'uvvg', 'uvvi', 'vtf', 'wbmp', 'wdp', 'webp', 'wmf', 'xbm', 'xif', 'xpm', 'xwd'];\nvar AudioExtensions = ['3gpp', 'aac', 'adp', 'aif', 'aifc', 'aiff', 'au', 'caf', 'dra', 'dts', 'dtshd', 'ecelp4800', 'ecelp7470', 'ecelp9600', 'eol', 'flac', 'kar', 'lvp', 'm2a', 'm3a', 'm3u', 'm4a', 'm4a', 'mid', 'midi', 'mka', 'mp2', 'mp2a', 'mp3', 'mp3', 'mp4a', 'mpga', 'oga', 'ogg', 'pya', 'ra', 'ra', 'ram', 'rip', 'rmi', 'rmp', 's3m', 'sil', 'snd', 'spx', 'uva', 'uvva', 'wav', 'wav', 'wav', 'wax', 'weba', 'wma', 'xm'];\nvar ColorsLight = ['#bbbbbb', '#d65c5c', '#d6665c', '#d6705c', '#d67a5c', '#d6855c', '#d68f5c', '#d6995c', '#d6a35c', '#d6ad5c', '#d6b85c', '#d6c25c', '#d6cc5c', '#d6d65c', '#ccd65c', '#c2d65c', '#b8d65c', '#add65c', '#a3d65c', '#99d65c', '#8fd65c', '#85d65c', '#7ad65c', '#70d65c', '#66d65c', '#5cd65c', '#5cd666', '#5cd670', '#5cd67a', '#5cd685', '#5cd68f', '#5cd699', '#5cd6a3', '#5cd6ad', '#5cd6b8', '#5cd6c2', '#5cd6cc', '#5cd6d6', '#5cccd6', '#5cc2d6', '#5cb8d6', '#5cadd6', '#5ca3d6', '#5c99d6', '#5c8fd6', '#5c85d6', '#5c7ad6', '#5c70d6', '#5c66d6', '#5c5cd6', '#665cd6', '#705cd6', '#7a5cd6', '#855cd6', '#8f5cd6', '#995cd6', '#a35cd6', '#ad5cd6', '#b85cd6', '#c25cd6', '#cc5cd6', '#d65cd6', '#d65ccc', '#d65cc2', '#d65cb8', '#d65cad', '#d65ca3', '#d65c99', '#d65c8f', '#d65c85', '#d65c7a', '#d65c70', '#d65c66'];\nvar ColorsDark = ['#777', '#8f3d3d', '#8f443d', '#8f4b3d', '#8f523d', '#8f583d', '#8f5f3d', '#8f663d', '#8f6d3d', '#8f743d', '#8f7a3d', '#8f813d', '#8f883d', '#8f8f3d', '#888f3d', '#818f3d', '#7a8f3d', '#748f3d', '#6d8f3d', '#668f3d', '#5f8f3d', '#588f3d', '#528f3d', '#4b8f3d', '#448f3d', '#3d8f3d', '#3d8f44', '#3d8f4b', '#3d8f52', '#3d8f58', '#3d8f5f', '#3d8f66', '#3d8f6d', '#3d8f74', '#3d8f7a', '#3d8f81', '#3d8f88', '#3d8f8f', '#3d888f', '#3d818f', '#3d7a8f', '#3d748f', '#3d6d8f', '#3d668f', '#3d5f8f', '#3d588f', '#3d528f', '#3d4b8f', '#3d448f', '#3d3d8f', '#443d8f', '#4b3d8f', '#523d8f', '#583d8f', '#5f3d8f', '#663d8f', '#6d3d8f', '#743d8f', '#7a3d8f', '#813d8f', '#883d8f', '#8f3d8f', '#8f3d88', '#8f3d81', '#8f3d7a', '#8f3d74', '#8f3d6d', '#8f3d66', '#8f3d5f', '#8f3d58', '#8f3d52', '#8f3d4b', '#8f3d44'];\nvar getIconTrie = function getIconTrie() {\n  var colourIndex = 0;\n  var step = 5;\n  var IconsToExtensions = [\n  // Generic file types\n  [ChonkyIconName.license, ['license']], [ChonkyIconName.config, ['sfk', 'ini', 'yml', 'toml', 'iml']], [ChonkyIconName.model, ['3ds', 'obj', 'ply', 'fbx']], [ChonkyIconName.database, ['csv', 'json', 'sql', 'sqlite', 'sqlite3', 'npy', 'npz', 'rec', 'idx', 'hdf5']], [ChonkyIconName.text, ['txt', 'md', 'mdx']], [ChonkyIconName.archive, ['zip', 'rar', 'tar', 'tar.gz', '7z']], [ChonkyIconName.image, ImageExtensions], [ChonkyIconName.video, VideoExtensions], [ChonkyIconName.code, ['html', 'php', 'css', 'sass', 'scss', 'less', 'cpp', 'h', 'hpp', 'c', 'xml']], [ChonkyIconName.info, ['bib', 'readme', 'nfo']], [ChonkyIconName.key, ['pem', 'pub']], [ChonkyIconName.lock, ['lock', 'lock.json', 'shrinkwrap.json']], [ChonkyIconName.music, AudioExtensions], [ChonkyIconName.terminal, ['run', 'sh']], [ChonkyIconName.trash, ['.Trashes']], [ChonkyIconName.users, ['authors', 'contributors']],\n  // OS file types\n  [ChonkyIconName.linux, ['AppImage']], [ChonkyIconName.ubuntu, ['deb']], [ChonkyIconName.windows, ['exe']],\n  // Programming language file types\n  [ChonkyIconName.rust, ['rs', 'rlib']], [ChonkyIconName.python, ['py', 'ipynb']], [ChonkyIconName.nodejs, ['js', 'jsx', 'ts', 'tsx', 'd.ts']], [ChonkyIconName.php, ['php']],\n  // Development tools file types\n  [ChonkyIconName.git, ['.gitignore']],\n  // Brands file types\n  [ChonkyIconName.adobe, ['psd']],\n  // Other program file types\n  [ChonkyIconName.pdf, ['pdf']], [ChonkyIconName.excel, ['xls', 'xlsx']], [ChonkyIconName.word, ['doc', 'docx', 'odt']], [ChonkyIconName.flash, ['swf']]];\n  var exactTrie = new ExactTrie({\n    ignoreCase: true\n  });\n  for (var _i = 0, _IconsToExtensions = IconsToExtensions; _i < _IconsToExtensions.length; _i++) {\n    var pair = _IconsToExtensions[_i];\n    var icon = pair[0],\n      extensions = pair[1];\n    for (var i = 0; i < extensions.length; ++i) {\n      colourIndex += step;\n      var colorCode = colourIndex % (ColorsLight.length - 1) + 1;\n      var iconData = {\n        icon: icon,\n        colorCode: colorCode\n      };\n      exactTrie.put(extensions[i], iconData, true);\n    }\n  }\n  return exactTrie;\n};\nvar iconTrie = /*#__PURE__*/getIconTrie();\nvar useIconData = function useIconData(file) {\n  return useMemo(function () {\n    if (!file) return {\n      icon: ChonkyIconName.loading,\n      colorCode: 0\n    };\n    if (file.isDir === true) return {\n      icon: ChonkyIconName.folder,\n      colorCode: 0\n    };\n    var match = iconTrie.getWithCheckpoints(file.name, '.', true);\n    return match ? match : {\n      icon: ChonkyIconName.file,\n      colorCode: 32\n    };\n  }, [file]);\n};\nvar lightTheme = {\n  colors: {\n    debugRed: '#fabdbd',\n    debugBlue: '#bdd8fa',\n    debugGreen: '#d2fabd',\n    debugPurple: '#d2bdfa',\n    debugYellow: '#fae9bd',\n    textActive: '#09f'\n  },\n  fontSizes: {\n    rootPrimary: 15\n  },\n  margins: {\n    rootLayoutMargin: 8\n  },\n  toolbar: {\n    size: 30,\n    lineHeight: '30px',\n    fontSize: 15,\n    buttonRadius: 4\n  },\n  dnd: {\n    canDropColor: 'green',\n    cannotDropColor: 'red',\n    canDropMask: 'rgba(180, 235, 180, 0.75)',\n    cannotDropMask: 'rgba(235, 180, 180, 0.75)',\n    fileListCanDropMaskOne: 'rgba(180, 235, 180, 0.1)',\n    fileListCanDropMaskTwo: 'rgba(180, 235, 180, 0.2)',\n    fileListCannotDropMaskOne: 'rgba(235, 180, 180, 0.1)',\n    fileListCannotDropMaskTwo: 'rgba(235, 180, 180, 0.2)'\n  },\n  dragLayer: {\n    border: 'solid 2px #09f',\n    padding: '7px 10px',\n    borderRadius: 2\n  },\n  fileList: {\n    desktopGridGutter: 8,\n    mobileGridGutter: 5\n  },\n  gridFileEntry: {\n    childrenCountSize: '1.6em',\n    iconColorFocused: '#000',\n    iconSize: '2.4em',\n    iconColor: '#fff',\n    borderRadius: 5,\n    fontSize: 14,\n    fileColorTint: 'rgba(255, 255, 255, 0.4)',\n    folderBackColorTint: 'rgba(255, 255, 255, 0.1)',\n    folderFrontColorTint: 'rgba(255, 255, 255, 0.4)'\n  },\n  listFileEntry: {\n    propertyFontSize: 14,\n    iconFontSize: '1.1em',\n    iconBorderRadius: 5,\n    fontSize: 14\n  }\n};\nvar darkThemeOverride = {\n  gridFileEntry: {\n    fileColorTint: 'rgba(50, 50, 50, 0.4)',\n    folderBackColorTint: 'rgba(50, 50, 50, 0.4)',\n    folderFrontColorTint: 'rgba(50, 50, 50, 0.15)'\n  }\n};\nvar mobileThemeOverride = {\n  fontSizes: {\n    rootPrimary: 13\n  },\n  margins: {\n    rootLayoutMargin: 4\n  },\n  toolbar: {\n    size: 28,\n    lineHeight: '28px',\n    fontSize: 13\n  },\n  gridFileEntry: {\n    fontSize: 13\n  },\n  listFileEntry: {\n    propertyFontSize: 12,\n    iconFontSize: '1em',\n    fontSize: 13\n  }\n};\nvar useIsMobileBreakpoint = function useIsMobileBreakpoint() {\n  return useMediaQuery('(max-width:480px)');\n};\nvar getStripeGradient = function getStripeGradient(colorOne, colorTwo) {\n  return 'repeating-linear-gradient(' + '45deg,' + (colorOne + \",\") + (colorOne + \" 10px,\") + (colorTwo + \" 0,\") + (colorTwo + \" 20px\") + ')';\n};\nvar makeLocalChonkyStyles = function makeLocalChonkyStyles(styles // @ts-ignore\n) {\n  return createUseStyles(styles);\n};\nvar makeGlobalChonkyStyles = function makeGlobalChonkyStyles(makeStyles) {\n  var selectorMapping = {};\n  var makeGlobalStyles = function makeGlobalStyles(theme) {\n    var localStyles = makeStyles(theme);\n    var globalStyles = {};\n    var localSelectors = Object.keys(localStyles);\n    localSelectors.map(function (localSelector) {\n      var globalSelector = \"chonky-\" + localSelector;\n      var jssSelector = \"@global .\" + globalSelector; // @ts-ignore\n\n      globalStyles[jssSelector] = localStyles[localSelector]; // @ts-ignore\n\n      selectorMapping[localSelector] = globalSelector;\n    });\n    return globalStyles;\n  }; // @ts-ignore\n\n  var useStyles = createUseStyles(makeGlobalStyles);\n  return function () {\n    var styles = useStyles.apply(void 0, arguments);\n    var classes = {};\n    Object.keys(selectorMapping).map(function (localSelector) {\n      // @ts-ignore\n      classes[localSelector] = selectorMapping[localSelector];\n    });\n    return _extends({}, classes, styles);\n  };\n};\nvar important = function important(value) {\n  return [value, '!important'];\n};\nvar c = classnames;\nvar useFileBrowserHandle = function useFileBrowserHandle(ref) {\n  var store = useStore();\n  var dispatch = useDispatch();\n  useImperativeHandle(ref, function () {\n    return {\n      getFileSelection: function getFileSelection() {\n        var selectionMap = selectSelectionMap(store.getState());\n        var selectionSet = new Set(Object.keys(selectionMap));\n        return selectionSet;\n      },\n      setFileSelection: function setFileSelection(selection, reset) {\n        if (reset === void 0) {\n          reset = true;\n        }\n        var fileIds = Array.from(selection);\n        dispatch(reduxActions.selectFiles({\n          fileIds: fileIds,\n          reset: reset\n        }));\n      },\n      requestFileAction: function requestFileAction(action, payload) {\n        return Promise.resolve(dispatch(thunkRequestFileAction(action, payload))).then();\n      }\n    };\n  }, [store, dispatch]);\n};\n\n/**\r\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\r\n * @copyright 2020\r\n * @license MIT\r\n */\nvar ChonkyBusinessLogicInner = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$files;\n\n  // ==== Update Redux state\n  usePropReduxUpdate(reduxActions.setRawFiles, (_props$files = props.files) != null ? _props$files : initialRootState.rawFiles);\n  usePropReduxUpdate(reduxActions.setRawFolderChain, props.folderChain);\n  useDTE(thunkUpdateRawFileActions, getValueOrFallback(props.fileActions, defaultConfig.fileActions), getValueOrFallback(props.disableDefaultFileActions, defaultConfig.disableDefaultFileActions));\n  useDTE(reduxActions.setExternalFileActionHandler, getValueOrFallback(props.onFileAction, defaultConfig.onFileAction));\n  useDTE(reduxActions.setSelectionDisabled, getValueOrFallback(props.disableSelection, defaultConfig.disableSelection, 'boolean'));\n  useDTE(thunkActivateSortAction, getValueOrFallback(props.defaultSortActionId, defaultConfig.defaultSortActionId));\n  useDTE(thunkUpdateDefaultFileViewActionId, getValueOrFallback(props.defaultFileViewActionId, defaultConfig.defaultFileViewActionId, 'string'));\n  useDTE(reduxActions.setThumbnailGenerator, getValueOrFallback(props.thumbnailGenerator, defaultConfig.thumbnailGenerator));\n  useDTE(reduxActions.setDoubleClickDelay, getValueOrFallback(props.doubleClickDelay, defaultConfig.doubleClickDelay, 'number'));\n  useDTE(reduxActions.setDisableDragAndDrop, getValueOrFallback(props.disableDragAndDrop, defaultConfig.disableDragAndDrop, 'boolean'));\n  useDTE(reduxActions.setClearSelectionOnOutsideClick, getValueOrFallback(props.clearSelectionOnOutsideClick, defaultConfig.clearSelectionOnOutsideClick, 'boolean')); // ==== Setup the imperative handle for external use\n\n  useFileBrowserHandle(ref);\n  return null;\n}));\nChonkyBusinessLogicInner.displayName = 'ChonkyBusinessLogicInner';\nvar ChonkyBusinessLogic = /*#__PURE__*/React.memo(ChonkyBusinessLogicInner);\nChonkyBusinessLogic.displayName = 'ChonkyBusinessLogic';\nvar useDndContextAvailable = function useDndContextAvailable() {\n  var dndContext = useContext(DndContext);\n  var dragDropManager = dndContext.dragDropManager;\n  return !!dragDropManager;\n};\nvar useDragIfAvailable = function useDragIfAvailable() {\n  // This is an ugly hack to make `useDrag` not throw if a `DndContext` is not available.\n  // See: https://github.com/react-dnd/react-dnd/issues/2212\n  var dndContextAvailable = useDndContextAvailable();\n  var mockHook = useCallback(function () {\n    return [{}, function () {\n      return null;\n    }, function () {\n      return null;\n    }];\n  }, []); // @ts-ignore\n\n  var useHook = dndContextAvailable ? useDrag : mockHook;\n  return useHook.apply(void 0, arguments);\n};\nvar useDropIfAvailable = function useDropIfAvailable() {\n  var dndContextAvailable = useDndContextAvailable();\n  var mockHook = useCallback(function () {\n    return [{}, function () {\n      return null;\n    }];\n  }, []); // @ts-ignore\n\n  var useHook = dndContextAvailable ? useDrop : mockHook;\n  return useHook.apply(void 0, arguments);\n};\nvar findClosestChonkyFileId = function findClosestChonkyFileId(element) {\n  var fileEntryWrapperDiv = findElementAmongAncestors(element, function (element) {\n    return element.tagName && element.tagName.toLowerCase() === 'div' && element.dataset && element.dataset.chonkyFileId;\n  });\n  return fileEntryWrapperDiv ? fileEntryWrapperDiv.dataset.chonkyFileId : null;\n};\nvar useContextMenuTrigger = function useContextMenuTrigger() {\n  var dispatch = useDispatch();\n  var contextMenuMountedRef = useInstanceVariable(useSelector(selectContextMenuMounted));\n  return useCallback(function (event) {\n    // Use default browser context menu when Chonky context menu component\n    // is not mounted.\n    if (!contextMenuMountedRef.current) return; // Users can use Alt+Right Click to bring up browser's default\n    // context menu instead of Chonky's context menu.\n\n    if (event.altKey) return;\n    event.preventDefault();\n    var triggerFileId = findClosestChonkyFileId(event.target);\n    dispatch(thunkRequestFileAction(ChonkyActions.OpenFileContextMenu, {\n      clientX: event.clientX,\n      clientY: event.clientY,\n      triggerFileId: triggerFileId\n    }));\n  }, [contextMenuMountedRef, dispatch]);\n};\nvar useContextMenuDismisser = function useContextMenuDismisser() {\n  var dispatch = useDispatch();\n  return useCallback(function () {\n    return dispatch(reduxActions.hideContextMenu());\n  }, [dispatch]);\n};\nvar ChonkyDndFileEntryType = 'dnd-chonky-file-entry';\n\n/**\r\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\r\n * @copyright 2020\r\n * @license MIT\r\n */\nvar layerStyles = {\n  position: 'fixed',\n  pointerEvents: 'none',\n  zIndex: 100,\n  left: 0,\n  top: 0,\n  width: '100%',\n  height: '100%'\n};\nvar getItemStyles = function getItemStyles(initialCursorOffset, initialFileOffset, currentFileOffset) {\n  if (!initialCursorOffset || !initialFileOffset || !currentFileOffset) {\n    return {\n      display: 'none'\n    };\n  }\n  var x = initialCursorOffset.x + (currentFileOffset.x - initialFileOffset.x);\n  var y = initialCursorOffset.y + (currentFileOffset.y - initialFileOffset.y);\n  var transform = \"translate(\" + x + \"px, \" + y + \"px)\";\n  return {\n    transform: transform,\n    WebkitTransform: transform\n  };\n};\nvar DnDFileListDragLayer = function DnDFileListDragLayer() {\n  var classes = useStyles();\n  var _useDragLayer = useDragLayer(function (monitor) {\n      return {\n        item: monitor.getItem(),\n        itemType: monitor.getItemType(),\n        initialCursorOffset: monitor.getInitialClientOffset(),\n        initialFileOffset: monitor.getInitialSourceClientOffset(),\n        currentFileOffset: monitor.getSourceClientOffset(),\n        isDragging: monitor.isDragging()\n      };\n    }),\n    itemType = _useDragLayer.itemType,\n    item = _useDragLayer.item,\n    initialCursorOffset = _useDragLayer.initialCursorOffset,\n    initialFileOffset = _useDragLayer.initialFileOffset,\n    currentFileOffset = _useDragLayer.currentFileOffset,\n    isDragging = _useDragLayer.isDragging;\n  if (!isDragging || itemType !== ChonkyDndFileEntryType || !item.payload) {\n    return null;\n  }\n  var selectionSize = item.payload.selectedFiles.length;\n  return React.createElement(\"div\", {\n    style: layerStyles\n  }, React.createElement(\"div\", {\n    style: getItemStyles(initialCursorOffset, initialFileOffset, currentFileOffset)\n  }, React.createElement(\"div\", {\n    className: classes.fileDragPreview\n  }, React.createElement(\"b\", null, item.payload.draggedFile.name), selectionSize > 1 && React.createElement(React.Fragment, null, ' and ', React.createElement(\"strong\", null, selectionSize - 1, \" other file\", selectionSize - 1 !== 1 ? 's' : '')))));\n};\nvar useStyles = /*#__PURE__*/makeGlobalChonkyStyles(function (theme) {\n  return {\n    fileDragPreview: {\n      boxShadow: \"2px 2px 5px \" + theme.palette.divider,\n      backgroundColor: theme.palette.background[\"default\"],\n      borderRadius: theme.dragLayer.borderRadius,\n      fontSize: theme.fontSizes.rootPrimary,\n      color: theme.palette.text.primary,\n      padding: theme.dragLayer.padding,\n      border: theme.dragLayer.border,\n      display: 'inline-block'\n    }\n  };\n});\n\n/**\r\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\r\n * @copyright 2020\r\n * @license MIT\r\n */\nvar HotkeyListener = /*#__PURE__*/React.memo(function (props) {\n  var fileActionId = props.fileActionId;\n  var dispatch = useDispatch();\n  var fileAction = useParamSelector(selectFileActionData, fileActionId);\n  useEffect(function () {\n    if (!fileAction || !fileAction.hotkeys || fileAction.hotkeys.length === 0) {\n      return;\n    }\n    var hotkeysStr = fileAction.hotkeys.join(',');\n    var hotkeyCallback = function hotkeyCallback(event) {\n      event.preventDefault();\n      dispatch(thunkRequestFileAction(fileAction, undefined));\n    };\n    hotkeys(hotkeysStr, hotkeyCallback);\n    return function () {\n      return hotkeys.unbind(hotkeysStr, hotkeyCallback);\n    };\n  }, [dispatch, fileAction]);\n  return null;\n});\n\n/**\r\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\r\n * @copyright 2020\r\n * @license MIT\r\n */\nvar ChonkyPresentationLayer = function ChonkyPresentationLayer(_ref) {\n  var children = _ref.children;\n  var dispatch = useDispatch();\n  var fileActionIds = useSelector(selectFileActionIds);\n  var dndDisabled = useSelector(selectIsDnDDisabled);\n  var clearSelectionOnOutsideClick = useSelector(selectClearSelectionOnOutsideClick); // Deal with clicks outside of Chonky\n\n  var handleClickAway = useCallback(function (event) {\n    if (!clearSelectionOnOutsideClick || elementIsInsideButton(event.target)) {\n      // We only clear out the selection on outside click if the click target\n      // was not a button. We don't want to clear out the selection when a\n      // button is clicked because Chonky users might want to trigger some\n      // selection-related action on that button click.\n      return;\n    }\n    dispatch(reduxActions.clearSelection());\n  }, [dispatch, clearSelectionOnOutsideClick]); // Generate necessary components\n\n  var hotkeyListenerComponents = useMemo(function () {\n    return fileActionIds.map(function (actionId) {\n      return React.createElement(HotkeyListener, {\n        key: \"file-action-listener-\" + actionId,\n        fileActionId: actionId\n      });\n    });\n  }, [fileActionIds]);\n  var dndContextAvailable = useDndContextAvailable();\n  var showContextMenu = useContextMenuTrigger();\n  var classes = useStyles$1();\n  return React.createElement(ClickAwayListener, {\n    onClickAway: handleClickAway\n  }, React.createElement(Box, {\n    className: classes.chonkyRoot,\n    onContextMenu: showContextMenu\n  }, !dndDisabled && dndContextAvailable && React.createElement(DnDFileListDragLayer, null), hotkeyListenerComponents, children ? children : null));\n};\nvar useStyles$1 = /*#__PURE__*/makeGlobalChonkyStyles(function (theme) {\n  return {\n    chonkyRoot: {\n      backgroundColor: theme.palette.background.paper,\n      border: \"solid 1px \" + theme.palette.divider,\n      padding: theme.margins.rootLayoutMargin,\n      fontSize: theme.fontSizes.rootPrimary,\n      color: theme.palette.text.primary,\n      touchAction: 'manipulation',\n      fontFamily: 'sans-serif',\n      flexDirection: 'column',\n      boxSizing: 'border-box',\n      textAlign: 'left',\n      borderRadius: 4,\n      display: 'flex',\n      height: '100%',\n      // Disabling select\n      webkitTouchCallout: 'none',\n      webkitUserSelect: 'none',\n      mozUserSelect: 'none',\n      msUserSelect: 'none',\n      userSelect: 'none'\n    }\n  };\n});\n\n//     const whyDidYouRender = require('@welldone-software/why-did-you-render');\n//     whyDidYouRender(React, {\n//         trackAllPureComponents: true,\n//     });\n// }\n\nvar FileBrowser = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _ref;\n  var instanceId = props.instanceId,\n    iconComponent = props.iconComponent,\n    children = props.children;\n  var disableDragAndDrop = getValueOrFallback(props.disableDragAndDrop, defaultConfig.disableDragAndDrop, 'boolean');\n  var disableDragAndDropProvider = getValueOrFallback(props.disableDragAndDropProvider, defaultConfig.disableDragAndDropProvider, 'boolean');\n  var darkMode = getValueOrFallback(props.darkMode, defaultConfig.darkMode, 'boolean');\n  var i18n = getValueOrFallback(props.i18n, defaultConfig.i18n);\n  var formatters = useMemo(function () {\n    return _extends({}, defaultFormatters, i18n == null ? void 0 : i18n.formatters);\n  }, [i18n]);\n  var chonkyInstanceId = useStaticValue(function () {\n    return instanceId != null ? instanceId : shortid.generate();\n  });\n  var store = useChonkyStore(chonkyInstanceId);\n  var isMobileBreakpoint = useIsMobileBreakpoint();\n  var theme = useMemo(function () {\n    var muiTheme = createMuiTheme({\n      palette: {\n        type: darkMode ? 'dark' : 'light'\n      }\n    });\n    var combinedTheme = merge(muiTheme, merge(lightTheme, darkMode ? darkThemeOverride : {}));\n    return isMobileBreakpoint ? merge(combinedTheme, mobileThemeOverride) : combinedTheme;\n  }, [darkMode, isMobileBreakpoint]);\n  var chonkyComps = React.createElement(React.Fragment, null, React.createElement(ChonkyBusinessLogic, Object.assign({\n    ref: ref\n  }, props)), React.createElement(ChonkyPresentationLayer, null, children));\n  return React.createElement(IntlProvider, Object.assign({\n    locale: \"en\",\n    defaultLocale: \"en\"\n  }, i18n), React.createElement(ChonkyFormattersContext.Provider, {\n    value: formatters\n  }, React.createElement(Provider, {\n    store: store\n  }, React.createElement(ThemeProvider, {\n    theme: theme\n  }, React.createElement(ThemeProvider$1, {\n    theme: theme\n  }, React.createElement(ChonkyIconContext.Provider, {\n    value: (_ref = iconComponent != null ? iconComponent : defaultConfig.iconComponent) != null ? _ref : ChonkyIconPlaceholder\n  }, disableDragAndDrop || disableDragAndDropProvider ? chonkyComps : React.createElement(DndProvider, {\n    backend: HTML5Backend\n  }, chonkyComps)))))));\n});\nFileBrowser.displayName = 'FileBrowser';\nvar useFolderChainItems = function useFolderChainItems() {\n  var folderChain = useSelector(selectFolderChain);\n  var dispatch = useDispatch();\n  var folderChainItems = useMemo(function () {\n    var items = [];\n    if (!folderChain) return items;\n    var _loop = function _loop(i) {\n      var file = folderChain[i];\n      items.push({\n        file: file,\n        disabled: !file,\n        onClick: !FileHelper.isOpenable(file) || i === folderChain.length - 1 ? undefined : function () {\n          return dispatch(thunkRequestFileAction(ChonkyActions.OpenFiles, {\n            targetFile: file,\n            files: [file]\n          }));\n        }\n      });\n    };\n    for (var i = 0; i < folderChain.length; ++i) {\n      _loop(i);\n    }\n    return items;\n  }, [dispatch, folderChain]);\n  return folderChainItems;\n};\nvar useFileDrag = function useFileDrag(file) {\n  // Prepare the dnd payload\n  var store = useStore();\n  var fileRef = useInstanceVariable(file);\n  var getDndStartPayload = useCallback(function () {\n    var reduxState = store.getState();\n    return {\n      sourceInstanceId: selectInstanceId(reduxState),\n      source: selectCurrentFolder(reduxState),\n      // We force non-null type below because by convention, if drag & drop for\n      // this file was possible, it must have been non-null.\n      draggedFile: fileRef.current,\n      selectedFiles: selectSelectedFiles(reduxState)\n    };\n  }, [store, fileRef]); // For drag source\n\n  var dispatch = useDispatch();\n  var canDrag = useCallback(function () {\n    return FileHelper.isDraggable(fileRef.current);\n  }, [fileRef]);\n  var onDragStart = useCallback(function () {\n    var item = {\n      type: ChonkyDndFileEntryType,\n      payload: getDndStartPayload()\n    };\n    dispatch(thunkRequestFileAction(ChonkyActions.StartDragNDrop, item.payload));\n    return item;\n  }, [dispatch, getDndStartPayload]);\n  var onDragEnd = useCallback(function (item, monitor) {\n    var dropResult = monitor.getDropResult();\n    if (!FileHelper.isDraggable(item.payload.draggedFile) || !dropResult || !dropResult.dropTarget) {\n      return;\n    }\n    dispatch(thunkRequestFileAction(ChonkyActions.EndDragNDrop, _extends({}, item.payload, {\n      destination: dropResult.dropTarget,\n      copy: dropResult.dropEffect === 'copy'\n    })));\n  }, [dispatch]); // Create refs for react-dnd hooks\n\n  var item = useMemo(function () {\n    return {\n      type: ChonkyDndFileEntryType,\n      // Payload is actually added in `onDragStart`\n      payload: {}\n    };\n  }, []);\n  var collect = useCallback(function (monitor) {\n    return {\n      isDragging: monitor.isDragging()\n    };\n  }, []);\n  var _useDragIfAvailable = useDragIfAvailable({\n      item: item,\n      canDrag: canDrag,\n      begin: onDragStart,\n      // @ts-ignore\n      end: onDragEnd,\n      collect: collect\n    }),\n    dndIsDragging = _useDragIfAvailable[0].isDragging,\n    drag = _useDragIfAvailable[1],\n    preview = _useDragIfAvailable[2];\n  useEffect(function () {\n    // Set drag preview to an empty image because `DnDFileListDragLayer` will\n    // provide its own preview.\n    preview(getEmptyImage(), {\n      captureDraggingState: true\n    });\n  }, [preview]);\n  return {\n    dndIsDragging: dndIsDragging,\n    drag: drag\n  };\n};\nvar useFileDrop = function useFileDrop(_ref) {\n  var file = _ref.file,\n    forceDisableDrop = _ref.forceDisableDrop,\n    includeChildrenDrops = _ref.includeChildrenDrops;\n  var folderChainRef = useInstanceVariable(useSelector(selectFolderChain));\n  var onDrop = useCallback(function (_item, monitor) {\n    if (!monitor.canDrop()) return;\n    var customDropResult = {\n      dropTarget: file\n    };\n    return customDropResult;\n  }, [file]);\n  var canDrop = useCallback(function (item, monitor) {\n    if (forceDisableDrop || !FileHelper.isDroppable(file) || !monitor.isOver({\n      shallow: true\n    }) && !includeChildrenDrops) {\n      return false;\n    }\n    var _item$payload = item.payload,\n      source = _item$payload.source,\n      draggedFile = _item$payload.draggedFile,\n      selectedFiles = _item$payload.selectedFiles; // We prevent folders from being dropped into themselves. We also prevent\n    // any folder from current folder chain being moved - we can't move the\n    // folder that we are currently in.\n\n    var prohibitedFileIds = new Set();\n    prohibitedFileIds.add(file.id);\n    folderChainRef.current.map(function (folder) {\n      if (folder) prohibitedFileIds.add(folder.id);\n    });\n    var movedFiles = [draggedFile].concat(selectedFiles);\n    for (var _iterator = _createForOfIteratorHelperLoose(movedFiles), _step; !(_step = _iterator()).done;) {\n      var currFile = _step.value;\n      if (prohibitedFileIds.has(currFile.id)) return false;\n    } // Finally, prohibit files from being moved into their parent folder\n    // (which is a no-op).\n\n    return file.id !== (source == null ? void 0 : source.id);\n  }, [forceDisableDrop, file, includeChildrenDrops, folderChainRef]);\n  var collect = useCallback(function (monitor) {\n    return {\n      isOver: monitor.isOver(),\n      isOverCurrent: monitor.isOver({\n        shallow: true\n      }),\n      canDrop: monitor.canDrop()\n    };\n  }, []);\n  var _useDropIfAvailable = useDropIfAvailable({\n      accept: ChonkyDndFileEntryType,\n      drop: onDrop,\n      canDrop: canDrop,\n      collect: collect\n    }),\n    _useDropIfAvailable$ = _useDropIfAvailable[0],\n    dndIsOver = _useDropIfAvailable$.isOver,\n    dndIsOverCurrent = _useDropIfAvailable$.isOverCurrent,\n    dndCanDrop = _useDropIfAvailable$.canDrop,\n    drop = _useDropIfAvailable[1];\n  return {\n    dndIsOver: dndIsOver,\n    dndIsOverCurrent: dndIsOverCurrent,\n    dndCanDrop: dndCanDrop,\n    drop: drop\n  };\n};\nvar useFileEntryDnD = function useFileEntryDnD(file) {\n  var _useFileDrag = useFileDrag(file),\n    dndIsDragging = _useFileDrag.dndIsDragging,\n    drag = _useFileDrag.drag;\n  var _useFileDrop = useFileDrop({\n      file: file\n    }),\n    dndIsOver = _useFileDrop.dndIsOver,\n    dndCanDrop = _useFileDrop.dndCanDrop,\n    drop = _useFileDrop.drop;\n  var dndState = useMemo(function () {\n    return {\n      dndIsDragging: dndIsDragging,\n      dndIsOver: dndIsOver,\n      dndCanDrop: dndCanDrop\n    };\n  }, [dndCanDrop, dndIsDragging, dndIsOver]);\n  return {\n    drop: drop,\n    drag: drag,\n    dndState: dndState\n  };\n};\nvar useDndHoverOpen = function useDndHoverOpen(file, dndState) {\n  var dispatch = useDispatch();\n  var currentFolderRef = useInstanceVariable(useSelector(selectCurrentFolder));\n  useEffect(function () {\n    var _currentFolderRef$cur;\n    var timeout = null;\n    if (dndState.dndIsOver && FileHelper.isDndOpenable(file) && file.id !== ((_currentFolderRef$cur = currentFolderRef.current) == null ? void 0 : _currentFolderRef$cur.id)) {\n      timeout = setTimeout(function () {\n        return dispatch(thunkRequestFileAction(EssentialActions.OpenFiles, {\n          targetFile: file,\n          files: [file]\n        }));\n      },\n      // TODO: Make this timeout configurable\n      1500);\n    }\n    return function () {\n      if (timeout) clearTimeout(timeout);\n    };\n  }, [dispatch, file, dndState.dndIsOver, currentFolderRef]);\n};\n\n/**\r\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\r\n * @copyright 2020\r\n * @license MIT\r\n */\n\nvar getRandomInt = function getRandomInt(min, max) {\n  return min + Math.floor(Math.random() * Math.floor(max - min));\n};\nvar TextPlaceholder = /*#__PURE__*/React.memo(function (props) {\n  var minLength = props.minLength,\n    maxLength = props.maxLength;\n  var placeholderLength = getRandomInt(minLength, maxLength);\n  var whitespace = '&nbsp;'.repeat(placeholderLength);\n  var classes = useStyles$2();\n  return React.createElement(\"span\", {\n    className: classes.textPlaceholder,\n    dangerouslySetInnerHTML: {\n      __html: whitespace\n    }\n  });\n});\nvar useStyles$2 = /*#__PURE__*/makeLocalChonkyStyles(function () {\n  return {\n    '@keyframes loading-placeholder': {\n      '0%': {\n        opacity: 0.2\n      },\n      '50%': {\n        opacity: 0.4\n      },\n      '100%': {\n        opacity: 0.2\n      }\n    },\n    textPlaceholder: {\n      animationName: '$loading-placeholder',\n      animationIterationCount: 'infinite',\n      animationTimingFunction: 'linear',\n      animationDuration: '1.5s',\n      backgroundColor: '#ccc',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      borderRadius: 4,\n      maxWidth: '40%',\n      minWidth: 20\n    }\n  };\n});\nvar useFileEntryHtmlProps = function useFileEntryHtmlProps(file) {\n  return useMemo(function () {\n    var dataProps = {\n      'data-test-id': 'file-entry',\n      'data-chonky-file-id': file ? file.id : undefined\n    };\n    return _extends({\n      role: 'listitem'\n    }, dataProps);\n  }, [file]);\n};\nvar useFileEntryState = function useFileEntryState(file, selected, focused) {\n  var iconData = useIconData(file);\n  var _useThumbnailUrl = useThumbnailUrl(file),\n    thumbnailUrl = _useThumbnailUrl.thumbnailUrl,\n    thumbnailLoading = _useThumbnailUrl.thumbnailLoading;\n  return useMemo(function () {\n    var fileColor = thumbnailUrl ? ColorsDark[iconData.colorCode] : ColorsLight[iconData.colorCode];\n    var iconSpin = thumbnailLoading || !file;\n    var icon = thumbnailLoading ? ChonkyIconName.loading : iconData.icon;\n    return {\n      childrenCount: FileHelper.getChildrenCount(file),\n      icon: file && file.icon !== undefined ? file.icon : icon,\n      iconSpin: iconSpin,\n      thumbnailUrl: thumbnailUrl,\n      color: file && file.color !== undefined ? file.color : fileColor,\n      selected: selected,\n      focused: !!focused\n    };\n  }, [file, focused, iconData, selected, thumbnailLoading, thumbnailUrl]);\n};\nvar useDndIcon = function useDndIcon(dndState) {\n  var dndIconName = null;\n  if (dndState.dndIsOver) {\n    var showDropIcon = dndState.dndCanDrop;\n    dndIconName = showDropIcon ? ChonkyIconName.dndCanDrop : ChonkyIconName.dndCannotDrop;\n  } else if (dndState.dndIsDragging) {\n    dndIconName = ChonkyIconName.dndDragging;\n  }\n  return dndIconName;\n};\nvar useModifierIconComponents = function useModifierIconComponents(file) {\n  var modifierIcons = useMemo(function () {\n    var modifierIcons = [];\n    if (FileHelper.isHidden(file)) modifierIcons.push(ChonkyIconName.hidden);\n    if (FileHelper.isSymlink(file)) modifierIcons.push(ChonkyIconName.symlink);\n    if (FileHelper.isEncrypted(file)) modifierIcons.push(ChonkyIconName.lock);\n    return modifierIcons;\n  }, [file]);\n  var ChonkyIcon = useContext(ChonkyIconContext);\n  var modifierIconComponents = useMemo(function () {\n    return modifierIcons.map(function (icon, index) {\n      return React.createElement(ChonkyIcon, {\n        key: \"file-modifier-\" + index,\n        icon: icon\n      });\n    });\n  },\n  // For some reason ESLint marks `ChonkyIcon` as an unnecessary dependency,\n  // but we expect it can change at runtime so we disable the check.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [ChonkyIcon, modifierIcons]);\n  return modifierIconComponents;\n};\nvar _extname = function _extname(fileName) {\n  var parts = fileName.split('.');\n  if (parts.length) {\n    return \".\" + parts[parts.length - 1];\n  }\n  return '';\n};\nvar useFileNameComponent = function useFileNameComponent(file) {\n  return useMemo(function () {\n    if (!file) return React.createElement(TextPlaceholder, {\n      minLength: 15,\n      maxLength: 20\n    });\n    var name;\n    var extension = null;\n    var isDir = FileHelper.isDirectory(file);\n    if (isDir) {\n      name = file.name;\n    } else {\n      var _file$ext;\n      extension = (_file$ext = file.ext) != null ? _file$ext : _extname(file.name);\n      name = file.name.substr(0, file.name.length - extension.length);\n    }\n    return React.createElement(React.Fragment, null, name, extension && React.createElement(\"span\", {\n      className: \"chonky-file-entry-description-title-extension\"\n    }, extension));\n  }, [file]);\n};\nvar useThumbnailUrl = function useThumbnailUrl(file) {\n  var thumbnailGenerator = useSelector(selectThumbnailGenerator);\n  var _useState = useState(null),\n    thumbnailUrl = _useState[0],\n    setThumbnailUrl = _useState[1];\n  var _useState2 = useState(false),\n    thumbnailLoading = _useState2[0],\n    setThumbnailLoading = _useState2[1];\n  var loadingAttempts = useRef(0);\n  useEffect(function () {\n    var loadingCancelled = false;\n    if (file) {\n      if (thumbnailGenerator) {\n        if (loadingAttempts.current === 0) {\n          setThumbnailLoading(true);\n        }\n        loadingAttempts.current++;\n        Promise.resolve().then(function () {\n          return thumbnailGenerator(file);\n        }).then(function (thumbnailUrl) {\n          if (loadingCancelled) return;\n          setThumbnailLoading(false);\n          if (thumbnailUrl && typeof thumbnailUrl === 'string') {\n            setThumbnailUrl(thumbnailUrl);\n          }\n        })[\"catch\"](function (error) {\n          if (!loadingCancelled) setThumbnailLoading(false);\n          Logger.error(\"User-defined \\\"thumbnailGenerator\\\" handler threw an error: \" + error.message);\n        });\n      } else if (file.thumbnailUrl) {\n        setThumbnailUrl(file.thumbnailUrl);\n      }\n    }\n    return function () {\n      loadingCancelled = true;\n    };\n  }, [file, setThumbnailUrl, setThumbnailLoading, thumbnailGenerator]);\n  return {\n    thumbnailUrl: thumbnailUrl,\n    thumbnailLoading: thumbnailLoading\n  };\n};\nvar useFileClickHandlers = function useFileClickHandlers(file, displayIndex) {\n  var dispatch = useDispatch(); // Prepare base handlers\n\n  var onMouseClick = useCallback(function (event, clickType) {\n    if (!file) return;\n    dispatch(thunkRequestFileAction(ChonkyActions.MouseClickFile, {\n      clickType: clickType,\n      file: file,\n      fileDisplayIndex: displayIndex,\n      altKey: event.altKey,\n      ctrlKey: event.ctrlKey,\n      shiftKey: event.shiftKey\n    }));\n  }, [dispatch, file, displayIndex]);\n  var onKeyboardClick = useCallback(function (event) {\n    if (!file) return;\n    dispatch(thunkRequestFileAction(ChonkyActions.KeyboardClickFile, {\n      file: file,\n      fileDisplayIndex: displayIndex,\n      enterKey: event.enterKey,\n      spaceKey: event.spaceKey,\n      altKey: event.altKey,\n      ctrlKey: event.ctrlKey,\n      shiftKey: event.shiftKey\n    }));\n  }, [dispatch, file, displayIndex]); // Prepare single/double click handlers\n\n  var onSingleClick = useCallback(function (event) {\n    return onMouseClick(event, 'single');\n  }, [onMouseClick]);\n  var onDoubleClick = useCallback(function (event) {\n    return onMouseClick(event, 'double');\n  }, [onMouseClick]);\n  return {\n    onSingleClick: onSingleClick,\n    onDoubleClick: onDoubleClick,\n    onKeyboardClick: onKeyboardClick\n  };\n};\nvar CustomVisibilityState;\n(function (CustomVisibilityState) {\n  CustomVisibilityState[CustomVisibilityState[\"Hidden\"] = 0] = \"Hidden\";\n  CustomVisibilityState[CustomVisibilityState[\"Disabled\"] = 1] = \"Disabled\";\n  CustomVisibilityState[CustomVisibilityState[\"Default\"] = 2] = \"Default\";\n  CustomVisibilityState[CustomVisibilityState[\"Active\"] = 3] = \"Active\";\n})(CustomVisibilityState || (CustomVisibilityState = {}));\nvar useFileActionTrigger = function useFileActionTrigger(fileActionId) {\n  var dispatch = useDispatch();\n  var fileAction = useParamSelector(selectFileActionData, fileActionId);\n  return useCallback(function () {\n    return dispatch(thunkRequestFileAction(fileAction, undefined));\n  }, [dispatch, fileAction]);\n};\nvar useFileActionProps = function useFileActionProps(fileActionId) {\n  var _action$option;\n  var parentFolder = useSelector(selectParentFolder);\n  var fileViewConfig = useSelector(selectFileViewConfig);\n  var sortActionId = useSelector(selectSortActionId);\n  var sortOrder = useSelector(selectSortOrder);\n  var action = useParamSelector(selectFileActionData, fileActionId); // @ts-ignore\n\n  var optionValue = useParamSelector(selectOptionValue, action == null ? void 0 : (_action$option = action.option) == null ? void 0 : _action$option.id);\n  var actionSelectionSize = useParamSelector(selectSelectedFilesForActionCount, fileActionId);\n  var actionSelectionEmpty = actionSelectionSize === 0;\n  return useMemo(function () {\n    var _action$button$icon, _action$button;\n    if (!action) return {\n      icon: null,\n      active: false,\n      disabled: true\n    };\n    var icon = (_action$button$icon = (_action$button = action.button) == null ? void 0 : _action$button.icon) != null ? _action$button$icon : null;\n    if (action.sortKeySelector) {\n      if (sortActionId === action.id) {\n        if (sortOrder === SortOrder.ASC) {\n          icon = ChonkyIconName.sortAsc;\n        } else {\n          icon = ChonkyIconName.sortDesc;\n        }\n      } else {\n        icon = ChonkyIconName.placeholder;\n      }\n    } else if (action.option) {\n      if (optionValue) {\n        icon = ChonkyIconName.toggleOn;\n      } else {\n        icon = ChonkyIconName.toggleOff;\n      }\n    }\n    var isSortButtonAndCurrentSort = action.id === sortActionId;\n    var isFileViewButtonAndCurrentView = action.fileViewConfig === fileViewConfig;\n    var isOptionAndEnabled = action.option ? !!optionValue : false;\n    var customDisabled = false;\n    var customActive = false;\n    if (action.customVisibility !== undefined) {\n      customDisabled = action.customVisibility() === CustomVisibilityState.Disabled;\n      customActive = action.customVisibility() === CustomVisibilityState.Active;\n    }\n    var active = isSortButtonAndCurrentSort || isFileViewButtonAndCurrentView || isOptionAndEnabled || customActive;\n    var disabled = !!action.requiresSelection && actionSelectionEmpty || customDisabled;\n    if (action.id === ChonkyActions.OpenParentFolder.id) {\n      // We treat `open_parent_folder` file action as a special case as it\n      // requires the parent folder to be present to work...\n      disabled = disabled || !FileHelper.isOpenable(parentFolder);\n    }\n    return {\n      icon: icon,\n      active: active,\n      disabled: disabled\n    };\n  }, [parentFolder, fileViewConfig, sortActionId, sortOrder, action, optionValue, actionSelectionEmpty]);\n};\n\n/**\r\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\r\n * @copyright 2020\r\n * @license MIT\r\n */\nvar ToolbarButton = /*#__PURE__*/React.memo(function (props) {\n  var _c;\n  var externalClassName = props.className,\n    text = props.text,\n    tooltip = props.tooltip,\n    active = props.active,\n    icon = props.icon,\n    iconOnly = props.iconOnly,\n    onClick = props.onClick,\n    disabled = props.disabled,\n    dropdown = props.dropdown;\n  var classes = useStyles$3();\n  var ChonkyIcon = useContext(ChonkyIconContext);\n  var iconComponent = icon || iconOnly ? React.createElement(\"div\", {\n    className: iconOnly ? '' : classes.iconWithText\n  }, React.createElement(ChonkyIcon, {\n    icon: icon ? icon : ChonkyIconName.fallbackIcon,\n    fixedWidth: true\n  })) : null;\n  var className = c((_c = {}, _c[externalClassName != null ? externalClassName : ''] = true, _c[classes.baseButton] = true, _c[classes.iconOnlyButton] = iconOnly, _c[classes.activeButton] = !!active, _c));\n  return React.createElement(Button, {\n    className: className,\n    onClick: onClick,\n    title: tooltip ? tooltip : text,\n    disabled: disabled || !onClick\n  }, iconComponent, text && !iconOnly && React.createElement(\"span\", null, text), dropdown && React.createElement(\"div\", {\n    className: classes.iconDropdown\n  }, React.createElement(ChonkyIcon, {\n    icon: icon ? icon : ChonkyIconName.dropdown,\n    fixedWidth: true\n  })));\n});\nvar useStyles$3 = /*#__PURE__*/makeGlobalChonkyStyles(function (theme) {\n  return {\n    baseButton: {\n      fontSize: important(theme.toolbar.fontSize),\n      textTransform: important('none'),\n      letterSpacing: important(0),\n      minWidth: important('auto'),\n      lineHeight: theme.toolbar.lineHeight,\n      height: theme.toolbar.size,\n      paddingBottom: important(0),\n      paddingTop: important(0)\n    },\n    iconWithText: {\n      marginRight: 8\n    },\n    iconOnlyButton: {\n      width: theme.toolbar.size,\n      textAlign: 'center'\n    },\n    iconDropdown: {\n      fontSize: '0.7em',\n      marginLeft: 2,\n      marginTop: 1\n    },\n    activeButton: {\n      color: important(theme.colors.textActive)\n    }\n  };\n});\nvar SmartToolbarButton = /*#__PURE__*/React.memo(function (props) {\n  var fileActionId = props.fileActionId;\n  var action = useParamSelector(selectFileActionData, fileActionId);\n  var triggerAction = useFileActionTrigger(fileActionId);\n  var _useFileActionProps = useFileActionProps(fileActionId),\n    icon = _useFileActionProps.icon,\n    active = _useFileActionProps.active,\n    disabled = _useFileActionProps.disabled;\n  var _useLocalizedFileActi = useLocalizedFileActionStrings(action),\n    buttonName = _useLocalizedFileActi.buttonName,\n    buttonTooltip = _useLocalizedFileActi.buttonTooltip;\n  if (!action) return null;\n  var button = action.button;\n  if (!button) return null;\n  if (action.customVisibility !== undefined && action.customVisibility() === CustomVisibilityState.Hidden) return null;\n  return React.createElement(ToolbarButton, {\n    text: buttonName,\n    tooltip: buttonTooltip,\n    icon: icon,\n    iconOnly: button.iconOnly,\n    active: active,\n    onClick: triggerAction,\n    disabled: disabled\n  });\n});\n\n/**\r\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\r\n * @copyright 2020\r\n * @license MIT\r\n */\nvar FolderChainButton = /*#__PURE__*/React.memo(function (_ref) {\n  var _c;\n  var first = _ref.first,\n    current = _ref.current,\n    item = _ref.item;\n  var file = item.file,\n    disabled = item.disabled,\n    onClick = item.onClick;\n  var _useFileDrop = useFileDrop({\n      file: file,\n      forceDisableDrop: !file || current\n    }),\n    dndIsOver = _useFileDrop.dndIsOver,\n    dndCanDrop = _useFileDrop.dndCanDrop,\n    drop = _useFileDrop.drop;\n  var dndState = useMemo(function () {\n    return {\n      dndIsOver: dndIsOver,\n      dndCanDrop: dndCanDrop,\n      dndIsDragging: false\n    };\n  }, [dndCanDrop, dndIsOver]);\n  useDndHoverOpen(file, dndState);\n  var dndIconName = useDndIcon(dndState);\n  var ChonkyIcon = useContext(ChonkyIconContext);\n  var classes = useStyles$4(dndState);\n  var className = c((_c = {}, _c[classes.baseBreadcrumb] = true, _c[classes.disabledBreadcrumb] = disabled, _c[classes.currentBreadcrumb] = current, _c));\n  var text = file ? file.name : 'Loading...';\n  var icon = first && (file == null ? void 0 : file.folderChainIcon) === undefined ? ChonkyIconName.folder : file == null ? void 0 : file.folderChainIcon;\n  return React.createElement(\"div\", {\n    className: classes.buttonContainer,\n    ref: file ? drop : null\n  }, file && dndIconName && React.createElement(\"div\", {\n    className: classes.dndIndicator\n  }, React.createElement(ChonkyIcon, {\n    icon: dndIconName,\n    fixedWidth: true\n  })), React.createElement(ToolbarButton, {\n    icon: icon,\n    className: className,\n    text: text,\n    disabled: disabled,\n    onClick: onClick\n  }));\n});\nvar useStyles$4 = /*#__PURE__*/makeLocalChonkyStyles(function (theme) {\n  return {\n    buttonContainer: {\n      position: 'relative'\n    },\n    baseBreadcrumb: {\n      color: function color(dndState) {\n        var color = theme.palette.text.primary;\n        if (dndState.dndIsOver) {\n          color = dndState.dndCanDrop ? theme.dnd.canDropColor : theme.dnd.cannotDropColor;\n        }\n        return important(color);\n      }\n    },\n    disabledBreadcrumb: {\n      // Constant function here is on purpose. Without the function, the color here\n      // does not override the `baseBreadcrumb` color from above.\n      color: function color() {\n        return important(theme.palette.text.disabled);\n      }\n    },\n    currentBreadcrumb: {\n      textDecoration: important('underline')\n    },\n    dndIndicator: {\n      color: function color(dndState) {\n        return dndState.dndCanDrop ? theme.dnd.canDropColor : theme.dnd.cannotDropColor;\n      },\n      backgroundColor: function backgroundColor(dndState) {\n        return dndState.dndCanDrop ? theme.dnd.canDropMask : theme.dnd.cannotDropMask;\n      },\n      lineHeight: \"calc(\" + theme.toolbar.lineHeight + \" - 6px)\",\n      transform: 'translateX(-50%) translateY(-50%)',\n      borderRadius: theme.toolbar.buttonRadius,\n      height: theme.toolbar.size - 6,\n      width: theme.toolbar.size - 6,\n      boxSizing: 'border-box',\n      position: 'absolute',\n      textAlign: 'center',\n      left: '50%',\n      top: '50%',\n      zIndex: 5\n    }\n  };\n});\n\n/**\r\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\r\n * @copyright 2020\r\n * @license MIT\r\n */\nvar FileNavbar = /*#__PURE__*/React.memo(function () {\n  var classes = useStyles$5();\n  var folderChainItems = useFolderChainItems();\n  var folderChainComponents = useMemo(function () {\n    var components = [];\n    for (var i = 0; i < folderChainItems.length; ++i) {\n      var key = \"folder-chain-\" + i;\n      var component = React.createElement(FolderChainButton, {\n        key: key,\n        first: i === 0,\n        current: i === folderChainItems.length - 1,\n        item: folderChainItems[i]\n      });\n      components.push(component);\n    }\n    return components;\n  }, [folderChainItems]);\n  return React.createElement(Box, {\n    className: classes.navbarWrapper\n  }, React.createElement(Box, {\n    className: classes.navbarContainer\n  }, React.createElement(SmartToolbarButton, {\n    fileActionId: ChonkyActions.OpenParentFolder.id\n  }), React.createElement(Breadcrumbs, {\n    className: classes.navbarBreadcrumbs,\n    classes: {\n      separator: classes.separator\n    }\n  }, folderChainComponents)));\n});\nvar useStyles$5 = /*#__PURE__*/makeGlobalChonkyStyles(function (theme) {\n  return {\n    navbarWrapper: {\n      paddingBottom: theme.margins.rootLayoutMargin\n    },\n    navbarContainer: {\n      display: 'flex'\n    },\n    upDirectoryButton: {\n      fontSize: important(theme.toolbar.fontSize),\n      height: theme.toolbar.size,\n      width: theme.toolbar.size,\n      padding: '0px !important'\n    },\n    navbarBreadcrumbs: {\n      fontSize: important(theme.toolbar.fontSize),\n      flexGrow: 100\n    },\n    separator: {\n      marginRight: important(4),\n      marginLeft: important(4)\n    }\n  };\n});\n\n/**\r\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\r\n * @copyright 2020\r\n * @license MIT\r\n */\nvar ToolbarDropdownButton = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _c;\n  var text = props.text,\n    active = props.active,\n    icon = props.icon,\n    onClick = props.onClick,\n    disabled = props.disabled;\n  var classes = useStyles$6();\n  var ChonkyIcon = useContext(ChonkyIconContext);\n  var className = c((_c = {}, _c[classes.baseButton] = true, _c[classes.activeButton] = active, _c));\n  return React.createElement(MenuItem, {\n    ref: ref,\n    className: className,\n    onClick: onClick,\n    disabled: disabled\n  }, icon && React.createElement(ListItemIcon, {\n    className: classes.icon\n  }, React.createElement(ChonkyIcon, {\n    icon: icon,\n    fixedWidth: true\n  })), React.createElement(ListItemText, {\n    primaryTypographyProps: {\n      className: classes.text\n    }\n  }, text));\n});\nvar useStyles$6 = /*#__PURE__*/makeGlobalChonkyStyles(function (theme) {\n  return {\n    baseButton: {\n      lineHeight: important(theme.toolbar.lineHeight),\n      height: important(theme.toolbar.size),\n      minHeight: important('auto'),\n      minWidth: important('auto'),\n      padding: important(20)\n    },\n    icon: {\n      fontSize: important(theme.toolbar.fontSize),\n      minWidth: important('auto'),\n      color: important('inherit'),\n      marginRight: 8\n    },\n    text: {\n      fontSize: important(theme.toolbar.fontSize)\n    },\n    activeButton: {\n      color: important(theme.colors.textActive)\n    }\n  };\n});\nvar SmartToolbarDropdownButton = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var fileActionId = props.fileActionId,\n    onClickFollowUp = props.onClickFollowUp;\n  var action = useParamSelector(selectFileActionData, fileActionId);\n  var triggerAction = useFileActionTrigger(fileActionId);\n  var _useFileActionProps = useFileActionProps(fileActionId),\n    icon = _useFileActionProps.icon,\n    active = _useFileActionProps.active,\n    disabled = _useFileActionProps.disabled;\n  var _useLocalizedFileActi = useLocalizedFileActionStrings(action),\n    buttonName = _useLocalizedFileActi.buttonName; // Combine external click handler with internal one\n\n  var handleClick = useCallback(function () {\n    triggerAction();\n    if (onClickFollowUp) onClickFollowUp();\n  }, [onClickFollowUp, triggerAction]);\n  if (!action) return null;\n  var button = action.button;\n  if (!button) return null;\n  if (action.customVisibility !== undefined && action.customVisibility() === CustomVisibilityState.Hidden) return null;\n  return React.createElement(ToolbarDropdownButton, {\n    ref: ref,\n    text: buttonName,\n    icon: icon,\n    onClick: handleClick,\n    active: active,\n    disabled: disabled\n  });\n});\n\n/**\r\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\r\n * @copyright 2020\r\n * @license MIT\r\n */\nvar ToolbarDropdown = /*#__PURE__*/React.memo(function (props) {\n  var name = props.name,\n    fileActionIds = props.fileActionIds;\n  var _React$useState = React.useState(null),\n    anchor = _React$useState[0],\n    setAnchor = _React$useState[1];\n  var handleClick = useCallback(function (event) {\n    return setAnchor(event.currentTarget);\n  }, [setAnchor]);\n  var handleClose = useCallback(function () {\n    return setAnchor(null);\n  }, [setAnchor]);\n  var menuItemComponents = useMemo(function () {\n    return fileActionIds.map(function (id) {\n      return React.createElement(SmartToolbarDropdownButton, {\n        key: \"menu-item-\" + id,\n        fileActionId: id,\n        onClickFollowUp: handleClose\n      });\n    });\n  }, [fileActionIds, handleClose]);\n  var localizedName = useLocalizedFileActionGroup(name);\n  var classes = useStyles$7();\n  return React.createElement(React.Fragment, null, React.createElement(ToolbarButton, {\n    text: localizedName,\n    onClick: handleClick,\n    dropdown: true\n  }), React.createElement(Menu, {\n    autoFocus: true,\n    keepMounted: true,\n    elevation: 2,\n    anchorEl: anchor,\n    onClose: handleClose,\n    open: Boolean(anchor),\n    transitionDuration: 150,\n    classes: {\n      list: classes.dropdownList\n    }\n  }, menuItemComponents));\n});\nvar useStyles$7 = /*#__PURE__*/makeGlobalChonkyStyles(function () {\n  return {\n    dropdownList: {\n      paddingBottom: important(0),\n      paddingTop: important(0)\n    }\n  };\n});\n\n/**\r\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\r\n * @copyright 2020\r\n * @license MIT\r\n */\nvar ToolbarInfo = /*#__PURE__*/React.memo(function () {\n  var classes = useStyles$8();\n  var displayFileIds = useSelector(selectors.getDisplayFileIds);\n  var selectionSize = useSelector(selectSelectionSize);\n  var hiddenCount = useSelector(selectHiddenFileCount);\n  var intl = useIntl();\n  var fileCountString = intl.formatMessage({\n    id: getI18nId(I18nNamespace.Toolbar, 'visibleFileCount'),\n    defaultMessage: \"{fileCount, plural,\\n                =0 {# items}\\n                one {# item}\\n                other {# items}\\n            }\"\n  }, {\n    fileCount: displayFileIds.length\n  });\n  var selectedString = intl.formatMessage({\n    id: getI18nId(I18nNamespace.Toolbar, 'selectedFileCount'),\n    defaultMessage: \"{fileCount, plural,\\n                =0 {}\\n                other {# selected}\\n            }\"\n  }, {\n    fileCount: selectionSize\n  });\n  var hiddenString = intl.formatMessage({\n    id: getI18nId(I18nNamespace.Toolbar, 'hiddenFileCount'),\n    defaultMessage: \"{fileCount, plural,\\n                =0 {}\\n                other {# hidden}\\n            }\"\n  }, {\n    fileCount: hiddenCount\n  });\n  return React.createElement(\"div\", {\n    className: classes.infoContainer\n  }, React.createElement(Typography, {\n    className: classes.infoText,\n    variant: \"body1\"\n  }, fileCountString, (selectedString || hiddenString) && React.createElement(\"span\", {\n    className: classes.extraInfoSpan\n  }, \"(\", React.createElement(\"span\", {\n    className: classes.selectionSizeText\n  }, selectedString), selectedString && hiddenString && ', ', React.createElement(\"span\", {\n    className: classes.hiddenCountText\n  }, hiddenString), \")\")));\n});\nvar useStyles$8 = /*#__PURE__*/makeGlobalChonkyStyles(function (theme) {\n  return {\n    infoContainer: {\n      height: theme.toolbar.size,\n      display: 'flex'\n    },\n    infoText: {\n      lineHeight: important(theme.toolbar.lineHeight),\n      fontSize: important(theme.toolbar.fontSize),\n      marginLeft: important(12),\n      height: theme.toolbar.size\n    },\n    extraInfoSpan: {\n      marginRight: important(8),\n      marginLeft: important(8),\n      opacity: 0.8\n    },\n    selectionSizeText: {\n      color: theme.colors.textActive\n    },\n    hiddenCountText: {}\n  };\n});\n\n/**\r\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\r\n * @copyright 2020\r\n * @license MIT\r\n */\nvar ToolbarSearch = /*#__PURE__*/React.memo(function () {\n  var intl = useIntl();\n  var searchPlaceholderString = intl.formatMessage({\n    id: getI18nId(I18nNamespace.Toolbar, 'searchPlaceholder'),\n    defaultMessage: 'Search'\n  });\n  var classes = useStyles$9();\n  var ChonkyIcon = useContext(ChonkyIconContext);\n  var searchInputRef = useRef();\n  var dispatch = useDispatch();\n  var reduxSearchString = useSelector(selectSearchString);\n  var _useState = useState(reduxSearchString),\n    localSearchString = _useState[0],\n    setLocalSearchString = _useState[1];\n  var _useDebounce = useDebounce(localSearchString, 300),\n    debouncedLocalSearchString = _useDebounce[0];\n  var _useState2 = useState(false),\n    showLoadingIndicator = _useState2[0],\n    setShowLoadingIndicator = _useState2[1];\n  useEffect(function () {\n    dispatch(reduxActions.setFocusSearchInput(function () {\n      if (searchInputRef.current) searchInputRef.current.focus();\n    }));\n    return function () {\n      dispatch(reduxActions.setFocusSearchInput(null));\n    };\n  }, [dispatch]);\n  useEffect(function () {\n    setShowLoadingIndicator(false);\n    dispatch(reduxActions.setSearchString(debouncedLocalSearchString));\n  }, [debouncedLocalSearchString, dispatch]);\n  var handleChange = useCallback(function (event) {\n    setShowLoadingIndicator(true);\n    setLocalSearchString(event.currentTarget.value);\n  }, []);\n  var handleKeyUp = useCallback(function (event) {\n    // Remove focus from the search input field when user presses escape.\n    // Note: We use KeyUp instead of KeyPress because some browser plugins can\n    //       intercept KeyPress events with Escape key.\n    //       @see https://stackoverflow.com/a/37461974\n    if (event.key === 'Escape') {\n      setLocalSearchString('');\n      dispatch(reduxActions.setSearchString(''));\n      if (searchInputRef.current) searchInputRef.current.blur();\n    }\n  }, [dispatch]);\n  return React.createElement(TextField, {\n    className: classes.searchFieldContainer,\n    size: \"small\",\n    variant: \"outlined\",\n    value: localSearchString,\n    placeholder: searchPlaceholderString,\n    onChange: handleChange,\n    inputRef: searchInputRef,\n    InputProps: {\n      onKeyUp: handleKeyUp,\n      startAdornment: React.createElement(InputAdornment, {\n        className: classes.searchIcon,\n        position: \"start\"\n      }, React.createElement(ChonkyIcon, {\n        icon: showLoadingIndicator ? ChonkyIconName.loading : ChonkyIconName.search,\n        spin: showLoadingIndicator\n      })),\n      className: classes.searchFieldInput\n    },\n    inputProps: {\n      className: classes.searchFieldInputInner\n    }\n  });\n});\nvar useStyles$9 = /*#__PURE__*/makeGlobalChonkyStyles(function (theme) {\n  return {\n    searchFieldContainer: {\n      height: theme.toolbar.size,\n      width: 150\n    },\n    searchIcon: {\n      fontSize: '0.9em',\n      opacity: 0.75\n    },\n    searchFieldInput: {\n      lineHeight: important(0),\n      padding: important(0),\n      margin: important(0),\n      fontSize: important(theme.toolbar.fontSize),\n      borderRadius: theme.toolbar.buttonRadius,\n      height: theme.toolbar.size - 4,\n      paddingLeft: important(8),\n      marginTop: 2\n    },\n    searchFieldInputInner: {\n      lineHeight: important(theme.toolbar.size - 4 + \"px\"),\n      fontSize: important(theme.toolbar.fontSize),\n      height: important(theme.toolbar.size - 4),\n      padding: important([0, 8, 0, 0]),\n      margin: important(0),\n      '-webkit-appearance': 'none'\n    }\n  };\n});\nvar FileToolbar = /*#__PURE__*/React.memo(function () {\n  var classes = useStyles$a();\n  var toolbarItems = useSelector(selectToolbarItems);\n  var toolbarItemComponents = useMemo(function () {\n    var components = [];\n    for (var i = 0; i < toolbarItems.length; ++i) {\n      var item = toolbarItems[i];\n      var key = \"toolbar-item-\" + (typeof item === 'string' ? item : item.name);\n      var component = typeof item === 'string' ? React.createElement(SmartToolbarButton, {\n        key: key,\n        fileActionId: item\n      }) : React.createElement(ToolbarDropdown, {\n        key: key,\n        name: item.name,\n        fileActionIds: item.fileActionIds\n      });\n      components.push(component);\n    }\n    return components;\n  }, [toolbarItems]);\n  return React.createElement(\"div\", {\n    className: classes.toolbarWrapper\n  }, React.createElement(\"div\", {\n    className: classes.toolbarContainer\n  }, React.createElement(\"div\", {\n    className: classes.toolbarLeft\n  }, React.createElement(ToolbarSearch, null), React.createElement(ToolbarInfo, null)), React.createElement(\"div\", {\n    className: classes.toolbarRight\n  }, toolbarItemComponents)));\n});\nvar useStyles$a = /*#__PURE__*/makeGlobalChonkyStyles(function (theme) {\n  return {\n    toolbarWrapper: {},\n    toolbarContainer: {\n      flexWrap: 'wrap-reverse',\n      display: 'flex'\n    },\n    toolbarLeft: {\n      paddingBottom: theme.margins.rootLayoutMargin,\n      flexWrap: 'nowrap',\n      flexGrow: 10000,\n      display: 'flex'\n    },\n    toolbarLeftFiller: {\n      flexGrow: 10000\n    },\n    toolbarRight: {\n      paddingBottom: theme.margins.rootLayoutMargin,\n      flexWrap: 'nowrap',\n      display: 'flex'\n    }\n  };\n});\n\n/**\r\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\r\n * @copyright 2020\r\n * @license MIT\r\n */\nvar FileListEmpty = function FileListEmpty(props) {\n  var width = props.width,\n    height = props.height;\n  var classes = useStyles$b();\n  var ChonkyIcon = useContext(ChonkyIconContext);\n  var style = {\n    width: width,\n    height: height\n  };\n  var intl = useIntl();\n  var emptyString = intl.formatMessage({\n    id: getI18nId(I18nNamespace.FileList, 'nothingToShow'),\n    defaultMessage: 'Nothing to show'\n  });\n  return React.createElement(\"div\", {\n    className: classes.fileListEmpty,\n    style: style\n  }, React.createElement(\"div\", {\n    className: classes.fileListEmptyContent\n  }, React.createElement(ChonkyIcon, {\n    icon: ChonkyIconName.folderOpen\n  }), \"\\xA0 \", emptyString));\n};\nvar useStyles$b = /*#__PURE__*/makeGlobalChonkyStyles(function (theme) {\n  return {\n    fileListEmpty: {\n      color: theme.palette.text.disabled,\n      position: 'relative',\n      textAlign: 'center',\n      fontSize: '1.2em'\n    },\n    fileListEmptyContent: {\n      transform: 'translateX(-50%) translateY(-50%)',\n      position: 'absolute',\n      left: '50%',\n      top: '50%'\n    }\n  };\n});\n\n/**\r\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\r\n * @copyright 2020\r\n * @license MIT\r\n */\nvar useClickHandler = function useClickHandler(onSingleClick, onDoubleClick) {\n  var doubleClickDelay = useSelector(selectDoubleClickDelay);\n  var counter = useRef({\n    clickCount: 0,\n    clickTimeout: null\n  });\n  return useCallback(function (event) {\n    var mouseClickEvent = {\n      altKey: event.altKey,\n      ctrlKey: event.ctrlKey || event.metaKey,\n      shiftKey: event.shiftKey\n    };\n    counter.current.clickCount++;\n    if (counter.current.clickCount === 1) {\n      if (onSingleClick) {\n        event.preventDefault();\n        onSingleClick(mouseClickEvent);\n      }\n      counter.current.clickCount = 1; // @ts-ignore\n\n      counter.current.clickTimeout = setTimeout(function () {\n        return counter.current.clickCount = 0;\n      }, doubleClickDelay);\n    } else if (counter.current.clickCount === 2) {\n      if (onDoubleClick) {\n        event.preventDefault();\n        onDoubleClick(mouseClickEvent);\n      }\n      if (typeof counter.current.clickTimeout === 'number') {\n        clearTimeout(counter.current.clickTimeout);\n        counter.current.clickTimeout = null;\n        counter.current.clickCount = 0;\n      }\n    }\n  }, [doubleClickDelay, onSingleClick, onDoubleClick, counter]);\n};\nvar useKeyDownHandler = function useKeyDownHandler(onKeyboardClick) {\n  return useCallback(function (event) {\n    if (!onKeyboardClick) return;\n    var keyboardClickEvent = {\n      enterKey: event.nativeEvent.code === 'Enter',\n      spaceKey: event.nativeEvent.code === 'Space',\n      altKey: event.altKey,\n      ctrlKey: event.ctrlKey,\n      shiftKey: event.shiftKey\n    };\n    if (keyboardClickEvent.spaceKey || keyboardClickEvent.enterKey) {\n      event.preventDefault();\n      event.stopPropagation();\n      onKeyboardClick(keyboardClickEvent);\n    }\n  }, [onKeyboardClick]);\n};\nvar ClickableWrapper = function ClickableWrapper(props) {\n  var children = props.children,\n    WrapperTag = props.wrapperTag,\n    passthroughProps = props.passthroughProps,\n    onSingleClick = props.onSingleClick,\n    onDoubleClick = props.onDoubleClick,\n    onKeyboardClick = props.onKeyboardClick,\n    setFocused = props.setFocused;\n  var handleClick = useClickHandler(onSingleClick, onDoubleClick);\n  var handleKeyDown = useKeyDownHandler(onKeyboardClick);\n  var compProps = {\n    onFocus: useCallback(function () {\n      return setFocused && setFocused(true);\n    }, [setFocused]),\n    onBlur: useCallback(function () {\n      return setFocused && setFocused(false);\n    }, [setFocused])\n  };\n  if (onSingleClick || onDoubleClick || onKeyboardClick) {\n    compProps.onClick = handleClick;\n    compProps.onKeyDown = handleKeyDown;\n    compProps.tabIndex = 0;\n  }\n  var mergedProps = _extends({}, compProps, passthroughProps);\n  return React.createElement(WrapperTag, Object.assign({}, mergedProps), children);\n};\n\n/**\r\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\r\n * @copyright 2020\r\n * @license MIT\r\n */\nvar FileEntryName = /*#__PURE__*/React.memo(function (_ref) {\n  var file = _ref.file,\n    className = _ref.className;\n  var modifierIconComponents = useModifierIconComponents(file);\n  var fileNameComponent = useFileNameComponent(file);\n  var classes = useStyles$c();\n  return React.createElement(\"span\", {\n    className: className,\n    title: file ? file.name : undefined\n  }, modifierIconComponents.length > 0 && React.createElement(\"span\", {\n    className: classes.modifierIcons\n  }, modifierIconComponents), fileNameComponent);\n});\nFileEntryName.displayName = 'FileEntryName';\nvar useStyles$c = /*#__PURE__*/makeLocalChonkyStyles(function (theme) {\n  return {\n    modifierIcons: {\n      color: theme.palette.text.hint,\n      position: 'relative',\n      fontSize: '0.775em',\n      paddingRight: 5\n    }\n  };\n});\nvar CompactEntry = /*#__PURE__*/React.memo(\n// @ts-ignore\nfunction (_ref) {\n  var file = _ref.file,\n    selected = _ref.selected,\n    focused = _ref.focused;\n  var entryState = useFileEntryState(file, selected, focused);\n  var _useLocalizedFileEntr = useLocalizedFileEntryStrings(file),\n    fileModDateString = _useLocalizedFileEntr.fileModDateString,\n    fileSizeString = _useLocalizedFileEntr.fileSizeString;\n  var classes = useStyles$d(entryState);\n  var ChonkyIcon = useContext(ChonkyIconContext);\n  var fileEntryHtmlProps = useFileEntryHtmlProps(file);\n  return React.createElement(\"div\", Object.assign({\n    className: classes.listFileEntry\n  }, fileEntryHtmlProps), React.createElement(\"div\", {\n    className: classes.listFileEntryIcon\n  }, React.createElement(ChonkyIcon, {\n    icon: entryState.icon,\n    spin: entryState.iconSpin,\n    fixedWidth: true\n  })), React.createElement(\"div\", {\n    className: classes.listFileEntryDescription\n  }, React.createElement(\"div\", {\n    className: classes.listFileEntryName,\n    title: file ? file.name : undefined\n  }, React.createElement(FileEntryName, {\n    file: file\n  })), React.createElement(\"div\", {\n    className: classes.listFileEntryProperties\n  }, React.createElement(\"div\", {\n    className: classes.listFileEntryProperty\n  }, file ? fileModDateString != null ? fileModDateString : React.createElement(\"span\", null, \"\\u2014\") : React.createElement(TextPlaceholder, {\n    minLength: 5,\n    maxLength: 15\n  })), React.createElement(\"div\", {\n    className: classes.listFileEntryProperty\n  }, file ? fileSizeString != null ? fileSizeString : React.createElement(\"span\", null, \"\\u2014\") : React.createElement(TextPlaceholder, {\n    minLength: 10,\n    maxLength: 20\n  })))), React.createElement(\"div\", {\n    className: \"chonky-file-entry-outline\"\n  }), React.createElement(\"div\", {\n    className: \"chonky-file-entry-selection\"\n  }));\n});\nvar useStyles$d = /*#__PURE__*/makeLocalChonkyStyles(function (theme) {\n  return {\n    listFileEntry: {\n      fontSize: theme.listFileEntry.fontSize,\n      alignItems: 'center',\n      position: 'relative',\n      display: 'flex',\n      height: '100%'\n    },\n    listFileEntryIcon: {\n      backgroundColor: function backgroundColor(state) {\n        return state.color;\n      },\n      boxShadow: 'inset rgba(255, 255, 255, 0.5) 0 0 0 999px',\n      borderRadius: theme.listFileEntry.iconBorderRadius,\n      fontSize: theme.listFileEntry.iconFontSize,\n      color: '#fff',\n      padding: 8\n    },\n    listFileEntryDescription: {\n      flexDirection: 'column',\n      display: 'flex',\n      flexGrow: 1\n    },\n    listFileEntryName: {\n      padding: [0, 8, 4, 8]\n    },\n    listFileEntryProperties: {\n      fontSize: theme.listFileEntry.propertyFontSize,\n      flexDirection: 'row',\n      display: 'flex'\n    },\n    listFileEntryProperty: {\n      padding: [0, 8],\n      opacity: 0.4\n    }\n  };\n});\nvar DnDFileEntry = /*#__PURE__*/React.memo(function (_ref) {\n  var file = _ref.file,\n    children = _ref.children;\n  var _useFileEntryDnD = useFileEntryDnD(file),\n    drop = _useFileEntryDnD.drop,\n    drag = _useFileEntryDnD.drag,\n    dndState = _useFileEntryDnD.dndState;\n  useDndHoverOpen(file, dndState);\n  var classes = useStyles$e();\n  return React.createElement(\"div\", {\n    ref: drop,\n    className: classes.fillParent\n  }, React.createElement(\"div\", {\n    ref: FileHelper.isDraggable(file) ? drag : null,\n    className: classes.fillParent\n  }, children(dndState)));\n});\nvar useStyles$e = /*#__PURE__*/makeLocalChonkyStyles(function () {\n  return {\n    fillParent: {\n      height: '100%'\n    }\n  };\n});\n\n/**\r\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\r\n * @copyright 2020\r\n * @license MIT\r\n */\nvar FileThumbnail = /*#__PURE__*/React.memo(function (props) {\n  var className = props.className,\n    thumbnailUrl = props.thumbnailUrl;\n  var thumbnailStyle = thumbnailUrl ? {\n    backgroundImage: \"url('\" + thumbnailUrl + \"')\"\n  } : {};\n  var classes = useStyles$f();\n  return React.createElement(\"div\", {\n    className: classnames([className, classes.fileThumbnail]),\n    style: thumbnailStyle\n  });\n});\nFileThumbnail.displayName = 'FileThumbnail';\nvar useStyles$f = /*#__PURE__*/makeGlobalChonkyStyles(function () {\n  return {\n    fileThumbnail: {\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: 'center',\n      backgroundSize: 'contain'\n    }\n  };\n});\n\n/**\r\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\r\n * @copyright 2020\r\n * @license MIT\r\n */\nvar GridEntryDndIndicator = /*#__PURE__*/React.memo(function (props) {\n  var _c;\n  var externalClassName = props.className,\n    dndState = props.dndState;\n  var dndIconName = useDndIcon(dndState);\n  var classes = useStyles$g(dndState);\n  var ChonkyIcon = useContext(ChonkyIconContext);\n  if (!dndIconName) return null;\n  var className = c((_c = {}, _c[classes.dndIndicator] = true, _c[externalClassName] = true, _c));\n  return React.createElement(\"div\", {\n    className: className\n  }, React.createElement(ChonkyIcon, {\n    icon: dndIconName\n  }));\n});\nvar useStyles$g = /*#__PURE__*/makeLocalChonkyStyles(function (theme) {\n  return {\n    dndIndicator: {\n      color: function color(dndState) {\n        return dndState.dndIsOver ? dndState.dndCanDrop ? theme.dnd.canDropColor : theme.dnd.cannotDropColor : '#000';\n      },\n      boxSizing: 'border-box',\n      position: 'absolute',\n      fontSize: '1.2em',\n      opacity: 0.6,\n      padding: 6,\n      '&:before': {\n        borderBottom: '50px solid transparent',\n        borderLeft: '50px solid #fff',\n        position: 'absolute',\n        content: '\"\"',\n        zIndex: -1,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n});\n\n/**\r\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\r\n * @copyright 2020\r\n * @license MIT\r\n */\nvar GridEntryPreviewFolder = /*#__PURE__*/React.memo(function (props) {\n  var _c;\n  var externalClassName = props.className,\n    entryState = props.entryState,\n    dndState = props.dndState;\n  var folderClasses = useFolderStyles(entryState);\n  var fileClasses = useFileStyles(entryState);\n  var commonClasses = useCommonEntryStyles(entryState);\n  var className = c((_c = {}, _c[folderClasses.previewFile] = true, _c[externalClassName || ''] = !!externalClassName, _c));\n  return React.createElement(\"div\", {\n    className: className\n  }, React.createElement(\"div\", {\n    className: folderClasses.folderBackSideMid\n  }, React.createElement(\"div\", {\n    className: folderClasses.folderBackSideTop\n  }), React.createElement(\"div\", {\n    className: folderClasses.folderFrontSide\n  }, React.createElement(GridEntryDndIndicator, {\n    className: fileClasses.dndIndicator,\n    dndState: dndState\n  }), React.createElement(\"div\", {\n    className: c([fileClasses.fileIcon, folderClasses.fileIcon])\n  }, entryState.childrenCount), React.createElement(\"div\", {\n    className: commonClasses.selectionIndicator\n  }), React.createElement(FileThumbnail, {\n    className: fileClasses.thumbnail,\n    thumbnailUrl: entryState.thumbnailUrl\n  }))));\n});\nGridEntryPreviewFolder.displayName = 'GridEntryPreviewFolder';\nvar useFolderStyles = /*#__PURE__*/makeLocalChonkyStyles(function (theme) {\n  return {\n    previewFile: {\n      borderRadius: theme.gridFileEntry.borderRadius,\n      position: 'relative',\n      overflow: 'hidden'\n    },\n    folderBackSideTop: {\n      backgroundColor: function backgroundColor(state) {\n        return state.color;\n      },\n      boxShadow: function boxShadow(state) {\n        var color = theme.gridFileEntry.folderBackColorTint;\n        if (state.focused) color = 'rgba(0, 0, 0, 0.3)';else if (state.selected) color = 'rgba(0, 153, 255, .4)';\n        return \"inset \" + color + \" 0 0 0 999px\";\n      },\n      borderTopLeftRadius: theme.gridFileEntry.borderRadius,\n      borderTopRightRadius: 10,\n      position: 'absolute',\n      right: '60%',\n      height: 13,\n      top: -10,\n      left: 0,\n      '&:after': {\n        borderRightColor: theme.palette.background.paper,\n        borderTopColor: theme.palette.background.paper,\n        borderBottomColor: 'transparent',\n        borderLeftColor: 'transparent',\n        borderWidth: [0, 15, 10, 0],\n        borderStyle: 'solid',\n        position: 'absolute',\n        display: 'block',\n        content: '\"\"',\n        right: 0,\n        top: 0\n      }\n    },\n    folderBackSideMid: {\n      backgroundColor: function backgroundColor(state) {\n        return state.color;\n      },\n      boxShadow: function boxShadow(state) {\n        var color = theme.gridFileEntry.folderBackColorTint;\n        if (state.focused) color = 'rgba(0, 0, 0, 0.3)';else if (state.selected) color = 'rgba(0, 153, 255, .4)';\n        return \"inset \" + color + \" 0 0 0 999px\";\n      },\n      borderTopRightRadius: theme.gridFileEntry.borderRadius,\n      position: 'absolute',\n      bottom: 0,\n      right: 0,\n      left: 0,\n      top: 10\n    },\n    folderFrontSide: {\n      boxShadow: function boxShadow(state) {\n        var shadows = [];\n        if (state.focused) shadows.push('inset rgba(0, 0, 0, 1) 0 0 0 3px');\n        if (state.selected) shadows.push('inset rgba(0, 153, 255, .65) 0 0 0 3px');\n        shadows.push(\"inset \" + theme.gridFileEntry.folderFrontColorTint + \" 0 0 0 999px\");\n        return shadows.join(', ');\n      },\n      backgroundColor: function backgroundColor(state) {\n        return state.color;\n      },\n      borderRadius: theme.gridFileEntry.borderRadius,\n      position: 'absolute',\n      overflow: 'hidden',\n      bottom: 0,\n      right: 0,\n      left: 0,\n      top: 10\n    },\n    fileIcon: {\n      fontSize: important(theme.gridFileEntry.childrenCountSize)\n    }\n  };\n});\nvar GridEntryPreviewFile = /*#__PURE__*/React.memo(function (props) {\n  var _c2;\n  var externalClassName = props.className,\n    entryState = props.entryState,\n    dndState = props.dndState;\n  var fileClasses = useFileStyles(entryState);\n  var commonClasses = useCommonEntryStyles(entryState);\n  var ChonkyIcon = useContext(ChonkyIconContext);\n  var className = c((_c2 = {}, _c2[fileClasses.previewFile] = true, _c2[externalClassName || ''] = !!externalClassName, _c2));\n  return React.createElement(\"div\", {\n    className: className\n  }, React.createElement(GridEntryDndIndicator, {\n    className: fileClasses.dndIndicator,\n    dndState: dndState\n  }), React.createElement(\"div\", {\n    className: fileClasses.fileIcon\n  }, React.createElement(ChonkyIcon, {\n    icon: entryState.icon,\n    spin: entryState.iconSpin\n  })), React.createElement(\"div\", {\n    className: commonClasses.selectionIndicator\n  }), React.createElement(FileThumbnail, {\n    className: fileClasses.thumbnail,\n    thumbnailUrl: entryState.thumbnailUrl\n  }));\n});\nGridEntryPreviewFile.displayName = 'GridEntryPreviewFile';\nvar useFileStyles = /*#__PURE__*/makeLocalChonkyStyles(function (theme) {\n  return {\n    previewFile: {\n      boxShadow: function boxShadow(state) {\n        var shadows = [];\n        if (state.selected) shadows.push('inset rgba(0,153,255, .65) 0 0 0 3px');\n        if (state.focused) shadows.push('inset rgba(0, 0, 0, 1) 0 0 0 3px');\n        shadows.push(\"inset \" + theme.gridFileEntry.fileColorTint + \" 0 0 0 999px\");\n        return shadows.join(', ');\n      },\n      backgroundColor: function backgroundColor(state) {\n        return state.color;\n      },\n      borderRadius: theme.gridFileEntry.borderRadius,\n      position: 'relative',\n      overflow: 'hidden'\n    },\n    dndIndicator: {\n      zIndex: 14\n    },\n    fileIcon: {\n      transform: 'translateX(-50%) translateY(-50%)',\n      fontSize: theme.gridFileEntry.iconSize,\n      opacity: function opacity(state) {\n        return state.thumbnailUrl && !state.focused ? 0 : 1;\n      },\n      color: function color(state) {\n        return state.focused ? theme.gridFileEntry.iconColorFocused : theme.gridFileEntry.iconColor;\n      },\n      position: 'absolute',\n      left: '50%',\n      zIndex: 12,\n      top: '50%'\n    },\n    thumbnail: {\n      borderRadius: theme.gridFileEntry.borderRadius,\n      position: 'absolute',\n      zIndex: 6,\n      bottom: 5,\n      right: 5,\n      left: 5,\n      top: 5\n    }\n  };\n});\nvar useCommonEntryStyles = /*#__PURE__*/makeLocalChonkyStyles(function () {\n  return {\n    selectionIndicator: {\n      display: function display(state) {\n        return state.selected ? 'block' : 'none';\n      },\n      background: 'repeating-linear-gradient(' + '45deg,' + 'rgba(0,153,255,.14),' + 'rgba(0,153,255,.14) 10px,' + 'rgba(0,153,255,.25) 0,' + 'rgba(0,153,255,.25) 20px' + ')',\n      backgroundColor: 'rgba(0, 153, 255, .14)',\n      position: 'absolute',\n      height: '100%',\n      width: '100%',\n      zIndex: 10\n    },\n    focusIndicator: {\n      display: function display(state) {\n        return state.focused ? 'block' : 'none';\n      },\n      boxShadow: 'inset rgba(0, 0, 0, 1) 0 0 0 2px',\n      position: 'absolute',\n      height: '100%',\n      width: '100%',\n      zIndex: 11\n    }\n  };\n});\nvar GridEntry = /*#__PURE__*/React.memo(function (_ref) {\n  var _c;\n  var file = _ref.file,\n    selected = _ref.selected,\n    focused = _ref.focused,\n    dndState = _ref.dndState;\n  var isDirectory = FileHelper.isDirectory(file);\n  var entryState = useFileEntryState(file, selected, focused);\n  var classes = useFileEntryStyles(entryState);\n  var fileEntryHtmlProps = useFileEntryHtmlProps(file);\n  var entryClassName = c((_c = {}, _c[classes.gridFileEntry] = true, _c));\n  return React.createElement(\"div\", Object.assign({\n    className: entryClassName\n  }, fileEntryHtmlProps), isDirectory ? React.createElement(GridEntryPreviewFolder, {\n    className: classes.gridFileEntryPreview,\n    entryState: entryState,\n    dndState: dndState\n  }) : React.createElement(GridEntryPreviewFile, {\n    className: classes.gridFileEntryPreview,\n    entryState: entryState,\n    dndState: dndState\n  }), React.createElement(\"div\", {\n    className: classes.gridFileEntryNameContainer\n  }, React.createElement(FileEntryName, {\n    className: classes.gridFileEntryName,\n    file: file\n  })));\n});\nGridEntry.displayName = 'GridEntry';\nvar useFileEntryStyles = /*#__PURE__*/makeLocalChonkyStyles(function (theme) {\n  return {\n    gridFileEntry: {\n      flexDirection: 'column',\n      display: 'flex',\n      height: '100%'\n    },\n    gridFileEntryPreview: {\n      flexGrow: 1\n    },\n    gridFileEntryNameContainer: {\n      fontSize: theme.gridFileEntry.fontSize,\n      wordBreak: 'break-word',\n      textAlign: 'center',\n      paddingTop: 5\n    },\n    gridFileEntryName: {\n      backgroundColor: function backgroundColor(state) {\n        return state.selected ? 'rgba(0,153,255, .25)' : 'transparent';\n      },\n      textDecoration: function textDecoration(state) {\n        return state.focused ? 'underline' : 'none';\n      },\n      borderRadius: 3,\n      padding: [2, 4]\n    }\n  };\n});\nvar ListEntry = /*#__PURE__*/React.memo(function (_ref) {\n  var file = _ref.file,\n    selected = _ref.selected,\n    focused = _ref.focused,\n    dndState = _ref.dndState;\n  var entryState = useFileEntryState(file, selected, focused);\n  var dndIconName = useDndIcon(dndState);\n  var _useLocalizedFileEntr = useLocalizedFileEntryStrings(file),\n    fileModDateString = _useLocalizedFileEntr.fileModDateString,\n    fileSizeString = _useLocalizedFileEntr.fileSizeString;\n  var styleState = useMemo(function () {\n    return {\n      entryState: entryState,\n      dndState: dndState\n    };\n  }, [dndState, entryState]);\n  var classes = useStyles$h(styleState);\n  var commonClasses = useCommonEntryStyles(entryState);\n  var ChonkyIcon = useContext(ChonkyIconContext);\n  var fileEntryHtmlProps = useFileEntryHtmlProps(file);\n  return React.createElement(\"div\", Object.assign({\n    className: classes.listFileEntry\n  }, fileEntryHtmlProps), React.createElement(\"div\", {\n    className: commonClasses.focusIndicator\n  }), React.createElement(\"div\", {\n    className: c([commonClasses.selectionIndicator, classes.listFileEntrySelection])\n  }), React.createElement(\"div\", {\n    className: classes.listFileEntryIcon\n  }, React.createElement(ChonkyIcon, {\n    icon: dndIconName != null ? dndIconName : entryState.icon,\n    spin: dndIconName ? false : entryState.iconSpin,\n    fixedWidth: true\n  })), React.createElement(\"div\", {\n    className: classes.listFileEntryName,\n    title: file ? file.name : undefined\n  }, React.createElement(FileEntryName, {\n    file: file\n  })), React.createElement(\"div\", {\n    className: classes.listFileEntryProperty\n  }, file ? fileModDateString != null ? fileModDateString : React.createElement(\"span\", null, \"\\u2014\") : React.createElement(TextPlaceholder, {\n    minLength: 5,\n    maxLength: 15\n  })), React.createElement(\"div\", {\n    className: classes.listFileEntryProperty\n  }, file ? fileSizeString != null ? fileSizeString : React.createElement(\"span\", null, \"\\u2014\") : React.createElement(TextPlaceholder, {\n    minLength: 10,\n    maxLength: 20\n  })));\n});\nvar useStyles$h = /*#__PURE__*/makeLocalChonkyStyles(function (theme) {\n  return {\n    listFileEntry: {\n      boxShadow: \"inset \" + theme.palette.divider + \" 0 -1px 0\",\n      fontSize: theme.listFileEntry.fontSize,\n      color: function color(_ref2) {\n        var dndState = _ref2.dndState;\n        return dndState.dndIsOver ? dndState.dndCanDrop ? theme.dnd.canDropColor : theme.dnd.cannotDropColor : 'inherit';\n      },\n      alignItems: 'center',\n      position: 'relative',\n      display: 'flex',\n      height: '100%'\n    },\n    listFileEntrySelection: {\n      opacity: 0.6\n    },\n    listFileEntryIcon: {\n      color: function color(_ref3) {\n        var entryState = _ref3.entryState,\n          dndState = _ref3.dndState;\n        return dndState.dndIsOver ? dndState.dndCanDrop ? theme.dnd.canDropColor : theme.dnd.cannotDropColor : entryState.color;\n      },\n      fontSize: theme.listFileEntry.iconFontSize,\n      boxSizing: 'border-box',\n      padding: [2, 4],\n      zIndex: 20\n    },\n    listFileEntryName: {\n      textOverflow: 'ellipsis',\n      boxSizing: 'border-box',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      flex: '1 1 300px',\n      paddingLeft: 8,\n      zIndex: 20\n    },\n    listFileEntryProperty: {\n      fontSize: theme.listFileEntry.propertyFontSize,\n      boxSizing: 'border-box',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      flex: '0 1 150px',\n      padding: [2, 8],\n      zIndex: 20\n    }\n  };\n});\nvar disabledDndState = {\n  dndIsDragging: false,\n  dndIsOver: false,\n  dndCanDrop: false\n};\nvar SmartFileEntry = /*#__PURE__*/React.memo(function (_ref) {\n  var fileId = _ref.fileId,\n    displayIndex = _ref.displayIndex,\n    fileViewMode = _ref.fileViewMode;\n  var classes = useStyles$i(); // Basic properties\n\n  var file = useParamSelector(selectFileData, fileId);\n  var selected = useParamSelector(selectIsFileSelected, fileId);\n  var dndDisabled = useSelector(selectIsDnDDisabled); // Clickable wrapper properties\n\n  var fileClickHandlers = useFileClickHandlers(file, displayIndex);\n  var _useState = useState(false),\n    focused = _useState[0],\n    setFocused = _useState[1];\n  var clickableWrapperProps = _extends({\n    wrapperTag: 'div',\n    passthroughProps: {\n      className: classes.fileEntryClickableWrapper\n    }\n  }, FileHelper.isClickable(file) ? fileClickHandlers : undefined, {\n    setFocused: setFocused\n  }); // File entry properties\n\n  var fileEntryProps = {\n    file: file,\n    selected: selected,\n    focused: focused\n  };\n  var EntryComponent;\n  if (fileViewMode === FileViewMode.List) EntryComponent = ListEntry;else if (fileViewMode === FileViewMode.Compact) EntryComponent = CompactEntry;else EntryComponent = GridEntry;\n  return dndDisabled ? React.createElement(ClickableWrapper, Object.assign({}, clickableWrapperProps), React.createElement(EntryComponent, Object.assign({}, fileEntryProps, {\n    dndState: disabledDndState\n  }))) : React.createElement(DnDFileEntry, {\n    file: file\n  }, function (dndState) {\n    return React.createElement(ClickableWrapper, Object.assign({}, clickableWrapperProps), React.createElement(EntryComponent, Object.assign({}, fileEntryProps, {\n      dndState: dndState\n    })));\n  });\n});\nSmartFileEntry.displayName = 'SmartFileEntry';\nvar useStyles$i = /*#__PURE__*/makeGlobalChonkyStyles(function () {\n  return {\n    fileEntryClickableWrapper: {\n      // We disable default browser outline because Chonky provides its own outline\n      // (which doesn't compromise accessibility, hopefully)\n      outline: 'none !important',\n      position: 'relative',\n      height: '100%'\n    }\n  };\n});\nvar isMobileDevice = function isMobileDevice() {\n  // noinspection JSDeprecatedSymbols\n  return typeof window.orientation !== 'undefined' || navigator.userAgent.indexOf('IEMobile') !== -1;\n};\nvar getGridConfig = function getGridConfig(width, fileCount, viewConfig, isMobileBreakpoint) {\n  var gutter = isMobileBreakpoint ? 5 : 8;\n  var scrollbar = isMobileDevice() ? 0 : 18;\n  var columnCount;\n  var columnWidth;\n  if (isMobileBreakpoint) {\n    columnCount = 2;\n    columnWidth = (width - gutter - scrollbar) / columnCount;\n  } else {\n    columnWidth = viewConfig.entryWidth;\n    columnCount = Math.max(1, Math.floor((width - scrollbar) / (columnWidth + gutter)));\n  }\n  var rowCount = Math.ceil(fileCount / columnCount);\n  return {\n    rowCount: rowCount,\n    columnCount: columnCount,\n    gutter: gutter,\n    rowHeight: viewConfig.entryHeight,\n    columnWidth: columnWidth\n  };\n};\nvar GridContainer = /*#__PURE__*/React.memo(function (props) {\n  var width = props.width,\n    height = props.height;\n  var viewConfig = useSelector(selectFileViewConfig);\n  var displayFileIds = useSelector(selectors.getDisplayFileIds);\n  var fileCount = useMemo(function () {\n    return displayFileIds.length;\n  }, [displayFileIds]);\n  var gridRef = useRef();\n  var isMobileBreakpoint = useIsMobileBreakpoint(); // Whenever the grid config changes at runtime, we call a method on the\n  // `VariableSizeGrid` handle to reset column width/row height cache.\n  // !!! Note that we deliberately update the `gridRef` firsts and update the React\n  //     state AFTER that. This is needed to avoid file entries jumping up/down.\n\n  var _useState = useState(getGridConfig(width, fileCount, viewConfig, isMobileBreakpoint)),\n    gridConfig = _useState[0],\n    setGridConfig = _useState[1];\n  var gridConfigRef = useRef(gridConfig);\n  useEffect(function () {\n    var oldConf = gridConfigRef.current;\n    var newConf = getGridConfig(width, fileCount, viewConfig, isMobileBreakpoint);\n    gridConfigRef.current = newConf;\n    if (gridRef.current) {\n      if (oldConf.rowCount !== newConf.rowCount) {\n        gridRef.current.resetAfterRowIndex(Math.min(oldConf.rowCount, newConf.rowCount) - 1);\n      }\n      if (oldConf.columnCount !== newConf.columnCount) {\n        gridRef.current.resetAfterColumnIndex(Math.min(oldConf.columnCount, newConf.rowCount) - 1);\n      }\n      if (oldConf.columnWidth !== newConf.columnWidth) {\n        gridRef.current.resetAfterIndices({\n          columnIndex: 0,\n          rowIndex: 0\n        });\n      }\n    }\n    setGridConfig(newConf);\n  }, [setGridConfig, gridConfigRef, isMobileBreakpoint, width, viewConfig, fileCount]);\n  var sizers = useMemo(function () {\n    var gc = gridConfigRef;\n    return {\n      getColumnWidth: function getColumnWidth(index) {\n        return gc.current.columnWidth + (index === gc.current.columnCount - 1 ? 0 : gc.current.gutter);\n      },\n      getRowHeight: function getRowHeight(index) {\n        return gc.current.rowHeight + (index === gc.current.rowCount - 1 ? 0 : gc.current.gutter);\n      }\n    };\n  }, [gridConfigRef]);\n  var displayFileIdsRef = useInstanceVariable(useSelector(selectors.getDisplayFileIds));\n  var getItemKey = useCallback(function (data) {\n    var _displayFileIdsRef$cu;\n    var index = data.rowIndex * gridConfigRef.current.columnCount + data.columnIndex;\n    return (_displayFileIdsRef$cu = displayFileIdsRef.current[index]) != null ? _displayFileIdsRef$cu : \"loading-file-\" + index;\n  }, [gridConfigRef, displayFileIdsRef]);\n  var cellRenderer = useCallback(function (data) {\n    var gc = gridConfigRef;\n    var index = data.rowIndex * gc.current.columnCount + data.columnIndex;\n    var fileId = displayFileIds[index];\n    if (displayFileIds[index] === undefined) return null;\n    var styleWithGutter = _extends({}, data.style, {\n      paddingRight: data.columnIndex === gc.current.columnCount - 1 ? 0 : gc.current.gutter,\n      paddingBottom: data.rowIndex === gc.current.rowCount - 1 ? 0 : gc.current.gutter,\n      boxSizing: 'border-box'\n    });\n    return React.createElement(\"div\", {\n      style: styleWithGutter\n    }, React.createElement(SmartFileEntry, {\n      fileId: fileId != null ? fileId : null,\n      displayIndex: index,\n      fileViewMode: viewConfig.mode\n    }));\n  }, [displayFileIds, viewConfig.mode]);\n  var classes = useStyles$j();\n  var gridComponent = useMemo(function () {\n    return React.createElement(VariableSizeGrid, {\n      ref: gridRef,\n      className: classes.gridContainer,\n      estimatedRowHeight: gridConfig.rowHeight + gridConfig.gutter,\n      rowHeight: sizers.getRowHeight,\n      estimatedColumnWidth: gridConfig.columnWidth + gridConfig.gutter,\n      columnWidth: sizers.getColumnWidth,\n      columnCount: gridConfig.columnCount,\n      height: height,\n      rowCount: gridConfig.rowCount,\n      width: width,\n      itemKey: getItemKey\n    }, cellRenderer);\n  }, [classes.gridContainer, gridConfig.rowHeight, gridConfig.gutter, gridConfig.columnWidth, gridConfig.columnCount, gridConfig.rowCount, sizers.getRowHeight, sizers.getColumnWidth, height, width, getItemKey, cellRenderer]);\n  return gridComponent;\n});\nvar useStyles$j = /*#__PURE__*/makeGlobalChonkyStyles(function () {\n  return {\n    gridContainer: {}\n  };\n});\n\n/**\r\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\r\n * @copyright 2020\r\n * @license MIT\r\n */\nvar ListContainer = /*#__PURE__*/React.memo(function (props) {\n  var width = props.width,\n    height = props.height;\n  var viewConfig = useSelector(selectFileViewConfig);\n  var listRef = useRef();\n  var displayFileIds = useSelector(selectors.getDisplayFileIds);\n  var displayFileIdsRef = useInstanceVariable(displayFileIds);\n  var getItemKey = useCallback(function (index) {\n    var _displayFileIdsRef$cu;\n    return (_displayFileIdsRef$cu = displayFileIdsRef.current[index]) != null ? _displayFileIdsRef$cu : \"loading-file-\" + index;\n  }, [displayFileIdsRef]);\n  var classes = useStyles$k();\n  var listComponent = useMemo(function () {\n    // When entry size is null, we use List view\n    var rowRenderer = function rowRenderer(data) {\n      var _displayFileIds$data$;\n      return React.createElement(\"div\", {\n        style: data.style\n      }, React.createElement(SmartFileEntry, {\n        fileId: (_displayFileIds$data$ = displayFileIds[data.index]) != null ? _displayFileIds$data$ : null,\n        displayIndex: data.index,\n        fileViewMode: FileViewMode.List\n      }));\n    };\n    return React.createElement(FixedSizeList, {\n      ref: listRef,\n      className: classes.listContainer,\n      itemSize: viewConfig.entryHeight,\n      height: height,\n      itemCount: displayFileIds.length,\n      width: width,\n      itemKey: getItemKey\n    }, rowRenderer);\n  }, [classes.listContainer, viewConfig.entryHeight, height, displayFileIds, width, getItemKey]);\n  return listComponent;\n});\nvar useStyles$k = /*#__PURE__*/makeLocalChonkyStyles(function (theme) {\n  return {\n    listContainer: {\n      borderTop: \"solid 1px \" + theme.palette.divider\n    }\n  };\n});\nvar FileList = /*#__PURE__*/React.memo(function (props) {\n  var displayFileIds = useSelector(selectors.getDisplayFileIds);\n  var viewConfig = useSelector(selectFileViewConfig);\n  var currentFolder = useSelector(selectCurrentFolder);\n  var _useFileDrop = useFileDrop({\n      file: currentFolder\n    }),\n    drop = _useFileDrop.drop,\n    dndCanDrop = _useFileDrop.dndCanDrop,\n    dndIsOverCurrent = _useFileDrop.dndIsOverCurrent;\n  var styleState = useMemo(function () {\n    return {\n      dndCanDrop: dndCanDrop,\n      dndIsOverCurrent: dndIsOverCurrent\n    };\n  }, [dndCanDrop, dndIsOverCurrent]);\n  var localClasses = useLocalStyles(styleState);\n  var classes = useStyles$l(viewConfig);\n  var onScroll = props.onScroll; // In Chonky v0.x, this field was user-configurable. In Chonky v1.x+, we hardcode\n  // this to `true` to simplify configuration. Users can just wrap Chonky in their\n  // own `div` if they want to have finer control over the height.\n\n  var fillParentContainer = true;\n  var listRenderer = useCallback(function (_ref) {\n    var width = _ref.width,\n      height = _ref.height;\n    if (displayFileIds.length === 0) {\n      return React.createElement(FileListEmpty, {\n        width: width,\n        height: viewConfig.entryHeight\n      });\n    } else if (viewConfig.mode === FileViewMode.List) {\n      return React.createElement(ListContainer, {\n        width: width,\n        height: height\n      });\n    } else {\n      return React.createElement(GridContainer, {\n        width: width,\n        height: height\n      });\n    }\n  }, [displayFileIds, viewConfig]);\n  var ChonkyIcon = useContext(ChonkyIconContext);\n  return React.createElement(\"div\", {\n    onScroll: onScroll,\n    ref: drop,\n    className: c([classes.fileListWrapper, localClasses.fileListWrapper]),\n    role: \"list\"\n  }, React.createElement(\"div\", {\n    className: localClasses.dndDropZone\n  }, React.createElement(\"div\", {\n    className: localClasses.dndDropZoneIcon\n  }, React.createElement(ChonkyIcon, {\n    icon: dndCanDrop ? ChonkyIconName.dndCanDrop : ChonkyIconName.dndCannotDrop\n  }))), React.createElement(AutoSizer, {\n    disableHeight: !fillParentContainer\n  }, listRenderer));\n});\nFileList.displayName = 'FileList';\nvar useLocalStyles = /*#__PURE__*/makeLocalChonkyStyles(function (theme) {\n  return {\n    fileListWrapper: {\n      minHeight: ChonkyActions.EnableGridView.fileViewConfig.entryHeight + 2,\n      background: function background(state) {\n        return state.dndIsOverCurrent && state.dndCanDrop ? state.dndCanDrop ? getStripeGradient(theme.dnd.fileListCanDropMaskOne, theme.dnd.fileListCanDropMaskTwo) : getStripeGradient(theme.dnd.fileListCannotDropMaskOne, theme.dnd.fileListCannotDropMaskTwo) : 'none';\n      }\n    },\n    dndDropZone: {\n      display: function display(state) {\n        return (\n          // When we cannot drop, we don't show an indicator at all\n          state.dndIsOverCurrent && state.dndCanDrop ? 'block' : 'none'\n        );\n      },\n      borderRadius: theme.gridFileEntry.borderRadius,\n      pointerEvents: 'none',\n      position: 'absolute',\n      height: '100%',\n      width: '100%',\n      zIndex: 2\n    },\n    dndDropZoneIcon: {\n      backgroundColor: function backgroundColor(state) {\n        return state.dndCanDrop ? theme.dnd.canDropMask : theme.dnd.cannotDropMask;\n      },\n      color: function color(state) {\n        return state.dndCanDrop ? theme.dnd.canDropColor : theme.dnd.cannotDropColor;\n      },\n      borderRadius: theme.gridFileEntry.borderRadius,\n      transform: 'translateX(-50%) translateY(-50%)',\n      position: 'absolute',\n      textAlign: 'center',\n      lineHeight: '60px',\n      fontSize: '2em',\n      left: '50%',\n      height: 60,\n      top: '50%',\n      width: 60\n    }\n  };\n});\nvar useStyles$l = /*#__PURE__*/makeGlobalChonkyStyles(function () {\n  return {\n    fileListWrapper: {\n      height: '100%',\n      maxHeight: '100%'\n    }\n  };\n});\n\n/**\r\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\r\n * @copyright 2020\r\n * @license MIT\r\n */\nvar FileContextMenu = /*#__PURE__*/React.memo(function () {\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(reduxActions.setContextMenuMounted(true));\n    return function () {\n      dispatch(reduxActions.setContextMenuMounted(false));\n    };\n  }, [dispatch]);\n  var intl = useIntl();\n  var browserMenuShortcutString = intl.formatMessage({\n    id: getI18nId(I18nNamespace.FileContextMenu, 'browserMenuShortcut'),\n    defaultMessage: 'Browser menu: {shortcut}'\n  }, {\n    shortcut: React.createElement(\"strong\", null, \"Alt + Right Click\")\n  });\n  var contextMenuConfig = useSelector(selectContextMenuConfig);\n  var contextMenuItems = useSelector(selectContextMenuItems);\n  var hideContextMenu = useContextMenuDismisser();\n  var contextMenuItemComponents = useMemo(function () {\n    var components = [];\n    var _loop = function _loop(i) {\n      var item = contextMenuItems[i];\n      if (typeof item === 'string') {\n        components.push(React.createElement(SmartToolbarDropdownButton, {\n          key: \"context-menu-item-\" + item,\n          fileActionId: item,\n          onClickFollowUp: hideContextMenu\n        }));\n      } else {\n        item.fileActionIds.map(function (id) {\n          return components.push(React.createElement(SmartToolbarDropdownButton, {\n            key: \"context-menu-item-\" + item.name + \"-\" + id,\n            fileActionId: id,\n            onClickFollowUp: hideContextMenu\n          }));\n        });\n      }\n    };\n    for (var i = 0; i < contextMenuItems.length; ++i) {\n      _loop(i);\n    }\n    return components;\n  }, [contextMenuItems, hideContextMenu]);\n  var anchorPosition = useMemo(function () {\n    return contextMenuConfig ? {\n      top: contextMenuConfig.mouseY,\n      left: contextMenuConfig.mouseX\n    } : undefined;\n  }, [contextMenuConfig]);\n  var classes = useStyles$m();\n  return React.createElement(Menu, {\n    elevation: 2,\n    disablePortal: true,\n    onClose: hideContextMenu,\n    transitionDuration: 150,\n    open: !!contextMenuConfig,\n    anchorPosition: anchorPosition,\n    anchorReference: \"anchorPosition\",\n    classes: {\n      list: classes.contextMenuList\n    }\n  }, contextMenuItemComponents, React.createElement(ListSubheader, {\n    component: \"div\",\n    className: classes.browserMenuTooltip\n  }, browserMenuShortcutString));\n});\nvar useStyles$m = /*#__PURE__*/makeGlobalChonkyStyles(function () {\n  return {\n    contextMenuList: {\n      paddingBottom: important(0),\n      paddingTop: important(0)\n    },\n    browserMenuTooltip: {\n      lineHeight: important('30px'),\n      fontSize: important('0.7em')\n    }\n  };\n});\n\n/**\r\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\r\n * @copyright 2020\r\n * @license MIT\r\n */\nvar FullFileBrowser = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var onScroll = props.onScroll;\n  return React.createElement(FileBrowser, Object.assign({\n    ref: ref\n  }, props), React.createElement(FileNavbar, null), React.createElement(FileToolbar, null), React.createElement(FileList, {\n    onScroll: onScroll\n  }), React.createElement(FileContextMenu, null));\n}));\nFullFileBrowser.displayName = 'FullFileBrowser';\nvar useFolderChain = function useFolderChain(fileMap, currentFolderId) {\n  return useMemo(function () {\n    var currentFolder = fileMap[currentFolderId];\n    var folderChain = [currentFolder];\n    var parentId = currentFolder.parentId;\n    while (parentId) {\n      var parentFile = fileMap[parentId];\n      if (parentFile) {\n        folderChain.unshift(parentFile);\n        parentId = parentFile.parentId;\n      } else {\n        break;\n      }\n    }\n    return folderChain;\n  }, [currentFolderId, fileMap]);\n};\nvar useFiles = function useFiles(fileMap, currentFolderId) {\n  return useMemo(function () {\n    var currentFolder = fileMap[currentFolderId];\n    var childrenIds = currentFolder.childrenIds;\n    var files = childrenIds.map(function (fileId) {\n      return fileMap[fileId];\n    });\n    return files;\n  }, [currentFolderId, fileMap]);\n};\nvar useFileMapMethods = function useFileMapMethods(baseFileMap, initialFolderId) {\n  var _useState = useState(baseFileMap),\n    fileMap = _useState[0],\n    setFileMap = _useState[1];\n  var _useState2 = useState(initialFolderId),\n    currentFolderId = _useState2[0],\n    setCurrentFolderId = _useState2[1];\n  var resetFileMap = useCallback(function () {\n    setFileMap(baseFileMap);\n    setCurrentFolderId(initialFolderId);\n  }, [baseFileMap, initialFolderId]);\n  var moveFiles = useCallback(function (files, source, destination) {\n    return setFileMap(function (currentFileMap) {\n      var newFileMap = _extends({}, currentFileMap);\n      var moveFileIds = new Set(files.map(function (f) {\n        return f.id;\n      })); // Delete files from their source folder.\n\n      var newSourceChildrenIds = source.childrenIds.filter(function (id) {\n        return !moveFileIds.has(id);\n      });\n      newFileMap[source.id] = _extends({}, source, {\n        childrenIds: newSourceChildrenIds,\n        childrenCount: newSourceChildrenIds.length\n      }); // Add the files to their destination folder.\n\n      var newDestinationChildrenIds = [].concat(destination.childrenIds, files.map(function (f) {\n        return f.id;\n      }));\n      newFileMap[destination.id] = _extends({}, destination, {\n        childrenIds: newDestinationChildrenIds,\n        childrenCount: newDestinationChildrenIds.length\n      }); // Finally, update the parent folder ID on the files from source folder\n      // ID to the destination folder ID.\n\n      files.forEach(function (file) {\n        newFileMap[file.id] = _extends({}, file, {\n          parentId: destination.id\n        });\n      });\n      return newFileMap;\n    });\n  }, []);\n  var methods = useMemo(function () {\n    return {\n      setFileMap: setFileMap,\n      setCurrentFolderId: setCurrentFolderId,\n      resetFileMap: resetFileMap,\n      moveFiles: moveFiles\n    };\n  }, [setFileMap, setCurrentFolderId, resetFileMap, moveFiles]);\n  return {\n    fileMap: fileMap,\n    currentFolderId: currentFolderId,\n    methods: methods\n  };\n};\nvar useFileActionHandler = function useFileActionHandler(methods) {\n  return useCallback(function (data) {\n    if (data.id === ChonkyActions.OpenFiles.id) {\n      var _data$payload = data.payload,\n        targetFile = _data$payload.targetFile,\n        files = _data$payload.files;\n      var fileToOpen = targetFile != null ? targetFile : files[0];\n      if (fileToOpen && FileHelper.isDirectory(fileToOpen)) {\n        methods.setCurrentFolderId(fileToOpen.id);\n      }\n    } else if (data.id === ChonkyActions.MoveFiles.id) {\n      methods.moveFiles(data.payload.files, data.payload.source, data.payload.destination);\n    }\n  }, [methods]);\n};\nvar useFileMap = function useFileMap(_ref) {\n  var baseFileMap = _ref.baseFileMap,\n    initialFolderId = _ref.initialFolderId;\n  var _useFileMapMethods = useFileMapMethods(baseFileMap, initialFolderId),\n    fileMap = _useFileMapMethods.fileMap,\n    currentFolderId = _useFileMapMethods.currentFolderId,\n    methods = _useFileMapMethods.methods;\n  var folderChain = useFolderChain(fileMap, currentFolderId);\n  var files = useFiles(fileMap, currentFolderId);\n  var fileActionHandler = useFileActionHandler(methods);\n  var data = {\n    fileMap: fileMap,\n    currentFolderId: currentFolderId,\n    folderChain: folderChain,\n    files: files\n  };\n  return {\n    data: data,\n    methods: methods,\n    fileActionHandler: fileActionHandler\n  };\n};\nvar fileMap = {\n  __proto__: null,\n  useFolderChain: useFolderChain,\n  useFiles: useFiles,\n  useFileMapMethods: useFileMapMethods,\n  useFileActionHandler: useFileActionHandler,\n  useFileMap: useFileMap\n};\nexport { ChonkyActions, ChonkyDndFileEntryType, ChonkyIconName, CustomVisibilityState, DefaultFileActions, FileBrowser, FileContextMenu, FileHelper, FileList, FileNavbar, FileToolbar, FileViewMode, FullFileBrowser, I18nNamespace, OptionIds, defaultFormatters, defineFileAction, fileMap, getActionI18nId, getI18nId, setChonkyDefaults, thunkDispatchFileAction, thunkRequestFileAction };","map":{"version":3,"names":["useDebounce","value","delay","_useState","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","UNINITIALIZED_SENTINEL","useStaticValue","factory","valueRef","useRef","current","useInstanceVariable","ref","Logger","error","args","Array","_len","_key","arguments","_console","console","apply","concat","warn","_len2","_key2","_console2","debug","_len3","_key3","_console3","formatBullets","bullets","join","FileHelper","isDirectory","file","isDir","isHidden","isSymlink","isEncrypted","isClickable","isOpenable","openable","isSelectable","selectable","isDraggable","draggable","isDroppable","droppable","isDndOpenable","dndOpenable","getModDate","modDate","undefined","parseDate","maybeDate","Date","message","isNaN","getTime","getChildrenCount","childrenCount","sanitizeInputArray","mode","rawArray","sanitizedFiles","errorMessages","isArray","push","nonObjectFileCount","missingFieldFileCount","seenIds","Set","duplicateIds","i","length","item","id","name","has","add","size","repeatedIdsString","from","errorMessageString","arrayString","itemString","sanitizedArray","OptionIds","ShowHiddenFiles","ShowFoldersFirst","DarkMode","SortOrder","selectInstanceId","state","instanceId","selectExternalFileActionHandler","externalFileActionHandler","selectFileActionMap","fileActionMap","selectFileActionIds","fileActionIds","selectFileActionData","fileActionId","selectToolbarItems","toolbarItems","selectContextMenuItems","contextMenuItems","selectFolderChain","folderChain","selectCurrentFolder","currentFolder","selectParentFolder","parentFolder","selectFileMap","fileMap","selectCleanFileIds","cleanFileIds","selectFileData","fileId","selectHiddenFileIdMap","hiddenFileIdMap","selectHiddenFileCount","Object","keys","selectFocusSearchInput","focusSearchInput","selectSearchString","searchString","selectSelectionMap","selectionMap","selectSelectedFileIds","selectSelectionSize","selectIsFileSelected","selectSelectedFiles","map","selectSelectedFilesForAction","action","requiresSelection","getSelectedFiles","fileFilter","selectSelectedFilesForActionCount","_getSelectedFilesForA","getSelectedFilesForAction","selectDisableSelection","disableSelection","selectFileViewConfig","fileViewConfig","selectSortActionId","sortActionId","selectSortOrder","sortOrder","selectOptionMap","optionMap","selectOptionValue","optionId","selectThumbnailGenerator","thumbnailGenerator","selectDoubleClickDelay","doubleClickDelay","selectIsDnDDisabled","disableDragAndDrop","selectClearSelectionOnOutsideClick","clearSelectionOnOutsideClick","selectContextMenuMounted","contextMenuMounted","selectContextMenuConfig","contextMenuConfig","selectContextMenuTriggerFile","config","triggerFileId","_fileMap$config$trigg","getFileActionMap","getOptionMap","getFileMap","getFileIds","fileIds","getCleanFileIds","getSortActionId","getSortOrder","getSearchString","_getLastClick","lastClick","makeGetAction","fileActionSelector","createSelector","makeGetOptionValue","defaultValue","makeGetFiles","fileIdsSelector","getSortedFileIds","files","sortAction","showFolderFirst","prepareSortKeySelector","selector","sortFunctions","desc","sortKeySelector","_sortFunctions$push","configKeyName","ASC","sortedFileIds","sort","by","getSearcher","cleanFiles","FuzzySearch","caseSensitive","getSearchFilteredFileIds","searcher","search","f","getHiddenFileIdMap","searchFilteredFileIds","showHiddenFiles","searchFilteredFileIdsSet","forEach","getDisplayFileIds","filter","getLastClickIndex","displayFileIds","index","selectors","getFileData","getIsFileSelected","selectedFiles","filters","filteredSelectedFiles","reduce","prevFiles","mergeFileActionsArrays","seenActionIds","addToSeen","a","wasNotSeen","fileActionArrays","duplicateFreeArrays","arr","duplicateFreeArray","_Array","thunkUpdateRawFileActions","rawFileActions","disableDefaultFileActions","dispatch","_sanitizeInputArray","defaultActionsToAdd","disabledActionIds","DefaultFileActions","fileActions","EssentialFileActions","optionDefaults","option","reduxActions","setRawFileActions","setFileActionsErrorMessages","setFileActions","setOptionDefaults","thunkUpdateToolbarNContextMenuItems","excludedToolbarFileActionIds","ChonkyActions","OpenParentFolder","seenToolbarGroups","seenContextMenuGroups","getGroup","itemArray","seenMap","groupName","group","_iterator","_createForOfIteratorHelperLoose","_step","done","button","toolbar","contextMenu","_group","updateFileActionMenuItems","thunkUpdateDefaultFileViewActionId","getState","_getState","setFileViewConfig","thunkActivateSortAction","_getState2","oldActionId","oldOrder","order","DESC","setSort","actionId","thunkApplySelectionTransform","selectionTransform","prevSelection","hiddenFileIds","newSelection","clearSelection","selectFiles","reset","thunkDispatchFileAction","data","_dispatch","Promise","resolve","thunkRequestFileAction","payload","selectedFilesForAction","contextMenuTriggerFile","actionState","toggleOption","effect","maybeEffectPromise","reduxDispatch","getReduxState","then","effectResult","triggerDispatchAfterEffect","preventDispatch","FileViewMode","ChonkyIconName","defineFileAction","__payloadType","hotkeys","errorMessage","Error","findElementAmongAncestors","maybeElement","predicate","parentElement","elementIsInsideButton","buttonCandidate","element","tagName","toLowerCase","getValueOrFallback","fallback","desiredType","reduxThunks","selectRange","params","fileIdsToSelect","slice","rangeStart","rangeEnd","EssentialActions","MouseClickFile","_ref","clickType","OpenFiles","targetFile","ctrlKey","toggleSelection","exclusive","setLastClickIndex","fileDisplayIndex","shiftKey","lastClickIndex","_ref2","KeyboardClickFile","_ref3","enterKey","spaceKey","StartDragNDrop","_ref4","draggedFile","EndDragNDrop","_ref5","destination","droppedFiles","MoveFiles","_extends","ChangeSelection","icon","openParentFolder","iconOnly","_ref6","OpenFileContextMenu","_ref7","triggerFile","fileSelected","showContextMenu","mouseX","clientX","mouseY","clientY","DefaultActions","OpenSelection","openFiles","SelectAllFiles","selectAllFiles","ClearSelection","EnableListView","List","entryHeight","list","EnableCompactView","Compact","entryWidth","compact","EnableGridView","Grid","smallThumbnail","SortFilesByName","SortFilesBySize","SortFilesByDate","ToggleHiddenFiles","ToggleShowFoldersFirst","FocusSearchInput","ToggleDarkMode","ExtraActions","CopyFiles","copy","CreateFolder","tooltip","folderCreate","UploadFiles","upload","DownloadFiles","download","DeleteFiles","trash","initialRootState","fileActionsErrorMessages","rawFolderChain","folderChainErrorMessages","rawFiles","filesErrorMessages","searchMode","reducers","setExternalFileActionHandler","_action$payload","_action$payload2","setRawFolderChain","setRawFiles","_sanitizeInputArray2","_i","_Object$keys","selectedFileId","setSortedFileIds","setHiddenFileIds","_i2","_Object$keys2","setFocusSearchInput","setSearchString","oldValue","setSelectionDisabled","_i3","_Object$keys3","setThumbnailGenerator","setDoubleClickDelay","setDisableDragAndDrop","setClearSelectionOnOutsideClick","setContextMenuMounted","hideContextMenu","_createSlice","createSlice","initialState","actions","rootReducer","reducer","useStoreWatchers","store","selectionWatcher","watch","onSelectionChange","oldSelection","selectedFilesIds","selection","unsubscribeCallbacks","subscribe","unsubscribe","useChonkyStore","chonkyInstanceId","preloadedState","configureStore","middleware","getDefaultMiddleware","serializableCheck","devTools","useParamSelector","parametrizedSelector","selectorParams","useCallback","useSelector","useDTE","actionCreator","useDispatch","usePropReduxUpdate","ChonkyIconPlaceholder","title","React","createElement","defaultConfig","onFileAction","disableDragAndDropProvider","defaultSortActionId","defaultFileViewActionId","iconComponent","darkMode","i18n","setChonkyDefaults","key","I18nNamespace","getI18nId","namespace","stringId","getActionI18nId","FileActions","useLocalizedFileActionGroup","intl","useIntl","useMemo","formatMessage","FileActionGroups","defaultMessage","useLocalizedFileActionStrings","buttonName","buttonTooltip","_action$button","_action$button2","_action$button3","useLocalizedFileEntryStrings","formatters","useContext","ChonkyFormattersContext","fileModDateString","formatFileModDate","fileSizeString","formatFileSize","defaultFormatters","safeModDate","formatDate","dateStyle","timeStyle","_intl","sizeData","filesize","bits","output","symbol","Math","round","createContext","ChonkyIconContext","VideoExtensions","ImageExtensions","AudioExtensions","ColorsLight","ColorsDark","getIconTrie","colourIndex","step","IconsToExtensions","license","model","database","text","archive","image","video","code","info","lock","music","terminal","users","linux","ubuntu","windows","rust","python","nodejs","php","git","adobe","pdf","excel","word","flash","exactTrie","ExactTrie","ignoreCase","_IconsToExtensions","pair","extensions","colorCode","iconData","put","iconTrie","useIconData","loading","folder","match","getWithCheckpoints","lightTheme","colors","debugRed","debugBlue","debugGreen","debugPurple","debugYellow","textActive","fontSizes","rootPrimary","margins","rootLayoutMargin","lineHeight","fontSize","buttonRadius","dnd","canDropColor","cannotDropColor","canDropMask","cannotDropMask","fileListCanDropMaskOne","fileListCanDropMaskTwo","fileListCannotDropMaskOne","fileListCannotDropMaskTwo","dragLayer","border","padding","borderRadius","fileList","desktopGridGutter","mobileGridGutter","gridFileEntry","childrenCountSize","iconColorFocused","iconSize","iconColor","fileColorTint","folderBackColorTint","folderFrontColorTint","listFileEntry","propertyFontSize","iconFontSize","iconBorderRadius","darkThemeOverride","mobileThemeOverride","useIsMobileBreakpoint","useMediaQuery","getStripeGradient","colorOne","colorTwo","makeLocalChonkyStyles","styles","createUseStyles","makeGlobalChonkyStyles","makeStyles","selectorMapping","makeGlobalStyles","theme","localStyles","globalStyles","localSelectors","localSelector","globalSelector","jssSelector","useStyles","classes","important","c","classnames","useFileBrowserHandle","useStore","useImperativeHandle","getFileSelection","selectionSet","setFileSelection","requestFileAction","ChonkyBusinessLogicInner","memo","forwardRef","props","_props$files","displayName","ChonkyBusinessLogic","useDndContextAvailable","dndContext","DndContext","dragDropManager","useDragIfAvailable","dndContextAvailable","mockHook","useHook","useDrag","useDropIfAvailable","useDrop","findClosestChonkyFileId","fileEntryWrapperDiv","dataset","chonkyFileId","useContextMenuTrigger","contextMenuMountedRef","event","altKey","preventDefault","target","useContextMenuDismisser","ChonkyDndFileEntryType","layerStyles","position","pointerEvents","zIndex","left","top","width","height","getItemStyles","initialCursorOffset","initialFileOffset","currentFileOffset","display","x","y","transform","WebkitTransform","DnDFileListDragLayer","_useDragLayer","useDragLayer","monitor","getItem","itemType","getItemType","getInitialClientOffset","getInitialSourceClientOffset","getSourceClientOffset","isDragging","selectionSize","style","className","fileDragPreview","Fragment","boxShadow","palette","divider","backgroundColor","background","color","primary","HotkeyListener","fileAction","hotkeysStr","hotkeyCallback","unbind","ChonkyPresentationLayer","children","dndDisabled","handleClickAway","hotkeyListenerComponents","useStyles$1","ClickAwayListener","onClickAway","Box","chonkyRoot","onContextMenu","paper","touchAction","fontFamily","flexDirection","boxSizing","textAlign","webkitTouchCallout","webkitUserSelect","mozUserSelect","msUserSelect","userSelect","FileBrowser","shortid","generate","isMobileBreakpoint","muiTheme","createMuiTheme","type","combinedTheme","merge","chonkyComps","assign","IntlProvider","locale","defaultLocale","Provider","ThemeProvider","ThemeProvider$1","DndProvider","backend","HTML5Backend","useFolderChainItems","folderChainItems","items","disabled","onClick","_loop","useFileDrag","fileRef","getDndStartPayload","reduxState","sourceInstanceId","source","canDrag","onDragStart","onDragEnd","dropResult","getDropResult","dropTarget","dropEffect","collect","_useDragIfAvailable","begin","end","dndIsDragging","drag","preview","getEmptyImage","captureDraggingState","useFileDrop","forceDisableDrop","includeChildrenDrops","folderChainRef","onDrop","_item","canDrop","customDropResult","isOver","shallow","_item$payload","prohibitedFileIds","movedFiles","currFile","isOverCurrent","_useDropIfAvailable","accept","drop","_useDropIfAvailable$","dndIsOver","dndIsOverCurrent","dndCanDrop","useFileEntryDnD","_useFileDrag","_useFileDrop","dndState","useDndHoverOpen","currentFolderRef","timeout","_currentFolderRef$cur","getRandomInt","min","max","floor","random","TextPlaceholder","minLength","maxLength","placeholderLength","whitespace","repeat","useStyles$2","textPlaceholder","dangerouslySetInnerHTML","__html","opacity","animationName","animationIterationCount","animationTimingFunction","animationDuration","whiteSpace","overflow","maxWidth","minWidth","useFileEntryHtmlProps","dataProps","role","useFileEntryState","selected","focused","_useThumbnailUrl","useThumbnailUrl","thumbnailUrl","thumbnailLoading","fileColor","iconSpin","useDndIcon","dndIconName","showDropIcon","dndCannotDrop","dndDragging","useModifierIconComponents","modifierIcons","hidden","symlink","ChonkyIcon","modifierIconComponents","_extname","fileName","parts","split","useFileNameComponent","extension","_file$ext","ext","substr","setThumbnailUrl","_useState2","setThumbnailLoading","loadingAttempts","loadingCancelled","useFileClickHandlers","displayIndex","onMouseClick","onKeyboardClick","onSingleClick","onDoubleClick","CustomVisibilityState","useFileActionTrigger","useFileActionProps","optionValue","_action$option","actionSelectionSize","actionSelectionEmpty","active","_action$button$icon","sortAsc","sortDesc","placeholder","toggleOn","toggleOff","isSortButtonAndCurrentSort","isFileViewButtonAndCurrentView","isOptionAndEnabled","customDisabled","customActive","customVisibility","Disabled","Active","ToolbarButton","externalClassName","dropdown","useStyles$3","iconWithText","fallbackIcon","fixedWidth","_c","baseButton","iconOnlyButton","activeButton","Button","iconDropdown","textTransform","letterSpacing","paddingBottom","paddingTop","marginRight","marginLeft","marginTop","SmartToolbarButton","triggerAction","_useFileActionProps","_useLocalizedFileActi","Hidden","FolderChainButton","first","useStyles$4","baseBreadcrumb","disabledBreadcrumb","currentBreadcrumb","folderChainIcon","buttonContainer","dndIndicator","textDecoration","FileNavbar","useStyles$5","folderChainComponents","components","component","navbarWrapper","navbarContainer","Breadcrumbs","navbarBreadcrumbs","separator","upDirectoryButton","flexGrow","ToolbarDropdownButton","useStyles$6","MenuItem","ListItemIcon","ListItemText","primaryTypographyProps","minHeight","SmartToolbarDropdownButton","onClickFollowUp","handleClick","ToolbarDropdown","_React$useState","anchor","setAnchor","currentTarget","handleClose","menuItemComponents","localizedName","useStyles$7","Menu","autoFocus","keepMounted","elevation","anchorEl","onClose","open","Boolean","transitionDuration","dropdownList","ToolbarInfo","useStyles$8","hiddenCount","fileCountString","Toolbar","fileCount","selectedString","hiddenString","infoContainer","Typography","infoText","variant","extraInfoSpan","selectionSizeText","hiddenCountText","ToolbarSearch","searchPlaceholderString","useStyles$9","searchInputRef","reduxSearchString","localSearchString","setLocalSearchString","_useDebounce","debouncedLocalSearchString","showLoadingIndicator","setShowLoadingIndicator","focus","handleChange","handleKeyUp","blur","TextField","searchFieldContainer","onChange","inputRef","InputProps","onKeyUp","startAdornment","InputAdornment","searchIcon","spin","searchFieldInput","inputProps","searchFieldInputInner","margin","paddingLeft","FileToolbar","useStyles$a","toolbarItemComponents","toolbarWrapper","toolbarContainer","toolbarLeft","toolbarRight","flexWrap","toolbarLeftFiller","FileListEmpty","useStyles$b","emptyString","FileList","fileListEmpty","fileListEmptyContent","folderOpen","useClickHandler","counter","clickCount","clickTimeout","mouseClickEvent","metaKey","useKeyDownHandler","keyboardClickEvent","nativeEvent","stopPropagation","ClickableWrapper","WrapperTag","wrapperTag","passthroughProps","setFocused","handleKeyDown","compProps","onFocus","onBlur","onKeyDown","tabIndex","mergedProps","FileEntryName","fileNameComponent","useStyles$c","hint","paddingRight","CompactEntry","entryState","_useLocalizedFileEntr","useStyles$d","fileEntryHtmlProps","listFileEntryIcon","listFileEntryDescription","listFileEntryName","listFileEntryProperties","listFileEntryProperty","alignItems","DnDFileEntry","_useFileEntryDnD","useStyles$e","fillParent","FileThumbnail","thumbnailStyle","backgroundImage","useStyles$f","fileThumbnail","backgroundRepeat","backgroundPosition","backgroundSize","GridEntryDndIndicator","useStyles$g","borderBottom","borderLeft","content","GridEntryPreviewFolder","folderClasses","useFolderStyles","fileClasses","useFileStyles","commonClasses","useCommonEntryStyles","previewFile","folderBackSideMid","folderBackSideTop","folderFrontSide","fileIcon","selectionIndicator","thumbnail","borderTopLeftRadius","borderTopRightRadius","right","borderRightColor","borderTopColor","borderBottomColor","borderLeftColor","borderWidth","borderStyle","bottom","shadows","GridEntryPreviewFile","_c2","focusIndicator","GridEntry","useFileEntryStyles","entryClassName","gridFileEntryPreview","gridFileEntryNameContainer","gridFileEntryName","wordBreak","ListEntry","styleState","useStyles$h","listFileEntrySelection","textOverflow","flex","disabledDndState","SmartFileEntry","fileViewMode","useStyles$i","fileClickHandlers","clickableWrapperProps","fileEntryClickableWrapper","fileEntryProps","EntryComponent","outline","isMobileDevice","window","orientation","navigator","userAgent","indexOf","getGridConfig","viewConfig","gutter","scrollbar","columnCount","columnWidth","rowCount","ceil","rowHeight","GridContainer","gridRef","gridConfig","setGridConfig","gridConfigRef","oldConf","newConf","resetAfterRowIndex","resetAfterColumnIndex","resetAfterIndices","columnIndex","rowIndex","sizers","gc","getColumnWidth","getRowHeight","displayFileIdsRef","getItemKey","_displayFileIdsRef$cu","cellRenderer","styleWithGutter","useStyles$j","gridComponent","VariableSizeGrid","gridContainer","estimatedRowHeight","estimatedColumnWidth","itemKey","ListContainer","listRef","useStyles$k","listComponent","rowRenderer","_displayFileIds$data$","FixedSizeList","listContainer","itemSize","itemCount","borderTop","localClasses","useLocalStyles","useStyles$l","onScroll","fillParentContainer","listRenderer","fileListWrapper","dndDropZone","dndDropZoneIcon","AutoSizer","disableHeight","maxHeight","FileContextMenu","browserMenuShortcutString","shortcut","contextMenuItemComponents","anchorPosition","useStyles$m","disablePortal","anchorReference","contextMenuList","ListSubheader","browserMenuTooltip","FullFileBrowser","useFolderChain","currentFolderId","parentId","parentFile","unshift","useFiles","childrenIds","useFileMapMethods","baseFileMap","initialFolderId","setFileMap","setCurrentFolderId","resetFileMap","moveFiles","currentFileMap","newFileMap","moveFileIds","newSourceChildrenIds","newDestinationChildrenIds","methods","useFileActionHandler","_data$payload","fileToOpen","useFileMap","_useFileMapMethods","fileActionHandler"],"sources":["../src/util/hooks-helpers.ts","../src/util/logger.ts","../src/util/file-helper.ts","../src/redux/files-transforms.ts","../src/action-definitions/option-ids.ts","../src/types/sort.types.ts","../src/redux/selectors.ts","../src/redux/thunks/file-actions.thunks.ts","../src/redux/thunks/dispatchers.thunks.ts","../src/types/file-view.types.ts","../src/types/icons.types.ts","../src/util/helpers.ts","../src/redux/thunks/index.ts","../src/action-definitions/essential.ts","../src/action-definitions/default.ts","../src/action-definitions/extra.ts","../src/action-definitions/index.ts","../src/redux/state.ts","../src/redux/reducers.ts","../src/redux/watchers.ts","../src/redux/store.ts","../src/components/internal/ChonkyIconPlaceholder.tsx","../src/util/default-config.ts","../src/util/i18n.ts","../src/util/icon-helper.ts","../src/util/styles.ts","../src/util/file-browser-handle.ts","../src/components/internal/ChonkyBusinessLogic.tsx","../src/util/dnd-fallback.ts","../src/components/external/FileContextMenu-hooks.ts","../src/types/dnd.types.ts","../src/components/file-list/DnDFileListDragLayer.tsx","../src/components/internal/HotkeyListener.tsx","../src/components/internal/ChonkyPresentationLayer.tsx","../src/components/external/FileBrowser.tsx","../src/components/external/FileNavbar-hooks.ts","../src/util/dnd.ts","../src/components/external/TextPlaceholder.tsx","../src/components/file-list/FileEntry-hooks.tsx","../src/types/action.types.ts","../src/util/file-actions.ts","../src/components/external/ToolbarButton.tsx","../src/components/external/FolderChainButton.tsx","../src/components/external/FileNavbar.tsx","../src/components/external/ToolbarDropdownButton.tsx","../src/components/external/ToolbarDropdown.tsx","../src/components/external/ToolbarInfo.tsx","../src/components/external/ToolbarSearch.tsx","../src/components/external/FileToolbar.tsx","../src/components/file-list/FileListEmpty.tsx","../src/components/internal/ClickableWrapper-hooks.tsx","../src/components/internal/ClickableWrapper.tsx","../src/components/file-list/FileEntryName.tsx","../src/components/file-list/CompactEntry.tsx","../src/components/file-list/DnDFileEntry.tsx","../src/components/file-list/FileThumbnail.tsx","../src/components/file-list/GridEntryDndIndicator.tsx","../src/components/file-list/GridEntryPreview.tsx","../src/components/file-list/GridEntry.tsx","../src/components/file-list/ListEntry.tsx","../src/components/file-list/FileEntry.tsx","../src/components/file-list/GridContainer.tsx","../src/components/file-list/ListContainer.tsx","../src/components/file-list/FileList.tsx","../src/components/external/FileContextMenu.tsx","../src/components/external/FullFileBrowser.tsx","../src/extensions/file-map.ts"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nexport const useDebounce = <T>(\n    value: T,\n    delay: number\n): [T, React.Dispatch<React.SetStateAction<T>>] => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [value, delay]);\n\n    return [debouncedValue, setDebouncedValue];\n};\n\nconst UNINITIALIZED_SENTINEL = {};\nexport const useStaticValue = <T>(factory: () => T): T => {\n    const valueRef = useRef<T>(UNINITIALIZED_SENTINEL as T);\n    if (valueRef.current === UNINITIALIZED_SENTINEL) valueRef.current = factory();\n    return valueRef.current;\n};\n\nexport const useInstanceVariable = <T>(value: T) => {\n    const ref = useRef(value);\n    useEffect(() => {\n        ref.current = value;\n    }, [ref, value]);\n    return ref;\n};\n","export class Logger {\n    public static error(...args: any[]): void {\n        // eslint-disable-next-line no-console\n        console.error('[Chonky runtime error]', ...args);\n    }\n\n    public static warn(...args: any[]): void {\n        // eslint-disable-next-line no-console\n        console.warn('[Chonky runtime warning]', ...args);\n    }\n\n    public static debug(...args: any[]): void {\n        // eslint-disable-next-line no-console\n        console.debug('[Chonky runtime debug]', ...args);\n    }\n\n    public static formatBullets(bullets: string[]): string {\n        return `\\n- ${bullets.join('\\n- ')}`;\n    }\n}\n","import { Nullable } from 'tsdef';\n\nimport { FileData } from '../types/file.types';\nimport { Logger } from './logger';\n\nexport class FileHelper {\n    public static isDirectory(file: Nullable<FileData>): file is FileData {\n        // Not a directory by default\n        return !!file && file.isDir === true;\n    }\n\n    public static isHidden(file: Nullable<FileData>): file is FileData {\n        // Not hidden by default\n        return !!file && file.isHidden === true;\n    }\n\n    public static isSymlink(file: Nullable<FileData>): file is FileData {\n        // Not a symlink by default\n        return !!file && file.isSymlink === true;\n    }\n\n    public static isEncrypted(file: Nullable<FileData>): file is FileData {\n        // Not encrypted by default\n        return !!file && file.isEncrypted === true;\n    }\n\n    public static isClickable(file: Nullable<FileData>): file is FileData {\n        // Clickable by default\n        return !!file;\n    }\n\n    public static isOpenable(file: Nullable<FileData>): file is FileData {\n        // Openable by default\n        return !!file && file.openable !== false;\n    }\n\n    public static isSelectable(file: Nullable<FileData>): file is FileData {\n        // Selectable by default\n        return !!file && file.selectable !== false;\n    }\n\n    public static isDraggable(file: Nullable<FileData>): file is FileData {\n        // File & folders are draggable by default, `null` is not\n        return !!file && file.draggable !== false;\n    }\n\n    public static isDroppable(file: Nullable<FileData>): file is FileData {\n        // Folders are droppable by default, files are not\n        if (!file) return false;\n        if (file.isDir && file.droppable !== false) return true;\n        return file.droppable === true;\n    }\n\n    public static isDndOpenable(file: Nullable<FileData>): file is FileData {\n        // Folders are DnD openable by default, files are not\n        if (!FileHelper.isOpenable(file)) return false;\n        if (file.isDir && file.dndOpenable !== false) return true;\n        return file.dndOpenable === true;\n    }\n\n    public static getModDate(file: Nullable<FileData>): Nullable<Date> {\n        if (!file || file.modDate === null || file.modDate === undefined) return null;\n        return FileHelper.parseDate(file.modDate);\n    }\n\n    public static parseDate(maybeDate: Date | string | any): Nullable<Date> {\n        if (typeof maybeDate === 'string' || typeof maybeDate === 'number') {\n            // We allow users to provide string and numerical representations of dates.\n            try {\n                return new Date(maybeDate);\n            } catch (error) {\n                Logger.error(\n                    `Could not convert provided string/number into a date: ${error.message} `,\n                    'Invalid value:',\n                    maybeDate\n                );\n            }\n        }\n        if (maybeDate instanceof Date && !isNaN(maybeDate.getTime())) {\n            // We only allow valid dates objects\n            return maybeDate;\n        }\n\n        // If we have an invalid date representation, we just return null.\n        Logger.warn('Unsupported date representation:', maybeDate);\n        return null;\n    }\n\n    public static getChildrenCount(file: Nullable<FileData>): Nullable<number> {\n        if (!file || typeof file.childrenCount !== 'number') return null;\n\n        return file.childrenCount;\n    }\n}\n","import { Nullable } from 'tsdef';\n\nimport { FileAction } from '../types/action.types';\nimport { FileArray } from '../types/file.types';\nimport { Logger } from '../util/logger';\n\ninterface SanitizeFiles {\n    (mode: 'files', rawArray: FileArray | any): {\n        sanitizedArray: FileArray;\n        errorMessages: string[];\n    };\n    (mode: 'folderChain', rawArray: Nullable<FileArray> | any): {\n        sanitizedArray: FileArray;\n        errorMessages: string[];\n    };\n    (mode: 'fileActions', rawArray: FileAction[] | any): {\n        sanitizedArray: FileAction[];\n        errorMessages: string[];\n    };\n}\n\nexport const sanitizeInputArray: SanitizeFiles = (mode: string, rawArray: any[]) => {\n    const sanitizedFiles = [];\n    const errorMessages: string[] = [];\n\n    if ((mode === 'folderChain' || mode === 'fileActions') && !rawArray) {\n        // Do nothing, we allow folder chain to be null.\n    } else if (!Array.isArray(rawArray)) {\n        errorMessages.push(\n            `Expected \"${mode}\" prop to be an array, got \"${typeof rawArray}\" instead.`\n        );\n    } else {\n        let nonObjectFileCount = 0;\n        let missingFieldFileCount = 0;\n        const seenIds = new Set<string>();\n        const duplicateIds = new Set<string>();\n\n        for (let i = 0; i < rawArray.length; ++i) {\n            const item = rawArray[i];\n            if (!item) {\n                if (mode === 'fileActions') nonObjectFileCount++;\n                else sanitizedFiles.push(null);\n            } else if (typeof item !== 'object') {\n                nonObjectFileCount++;\n            } else {\n                if (!item.id || (mode !== 'fileActions' && !item.name)) {\n                    missingFieldFileCount++;\n                } else if (seenIds.has(item.id)) {\n                    duplicateIds.add(item.id);\n                } else {\n                    seenIds.add(item.id);\n                    sanitizedFiles.push(item);\n                }\n            }\n        }\n\n        if (nonObjectFileCount) {\n            errorMessages.push(\n                `Detected ${nonObjectFileCount} file(s) of invalid type. Remember ` +\n                    `that \"files\" array should contain either objects or nulls.`\n            );\n        }\n        if (missingFieldFileCount) {\n            errorMessages.push(\n                `Detected ${missingFieldFileCount} file(s) that are missing the ` +\n                    `required fields. Remember that file object should define an ` +\n                    `\"id\" and a \"name\".`\n            );\n        }\n        if (duplicateIds.size > 0) {\n            const repeatedIdsString = '\"' + Array.from(duplicateIds).join('\", \"') + '\"';\n            errorMessages.push(\n                `Detected ${duplicateIds.size} file IDs that are used multiple ` +\n                    `times. Remember that each file should have a unique IDs. The ` +\n                    `following IDs were seen multiple times: ${repeatedIdsString}`\n            );\n        }\n    }\n\n    if (errorMessages.length > 0) {\n        const errorMessageString = '\\n- ' + errorMessages.join('\\n- ');\n        let arrayString: string;\n        let itemString: string;\n        if (mode === 'folderChain') {\n            arrayString = 'folder chain';\n            itemString = 'files';\n        } else if (mode === 'fileActions') {\n            arrayString = 'file actions';\n            itemString = 'file actions';\n        } else {\n            // mode === 'files'\n            arrayString = 'files';\n            itemString = 'files';\n        }\n\n        Logger.error(\n            `Errors were detected when sanitizing the ${arrayString} array. ` +\n                `Offending ${itemString} were removed from the array. Summary of ` +\n                `validation errors: ${errorMessageString}`\n        );\n    }\n\n    return {\n        sanitizedArray: sanitizedFiles,\n        errorMessages,\n    };\n};\n","/**\n * We have option IDs in a separate file to avoid circular deps...\n */\nexport const OptionIds = {\n    ShowHiddenFiles: 'show_hidden_files',\n    ShowFoldersFirst: 'show_folders_first',\n    DarkMode: 'dark_mode',\n};\n","import { Nullable } from 'tsdef';\n\nimport { FileData } from './file.types';\n\nexport type FileSortKeySelector = (file: Nullable<FileData>) => any;\n\nexport enum SortOrder {\n    ASC = 'asc',\n    DESC = 'desc',\n}\n","import sort from 'fast-sort';\nimport FuzzySearch from 'fuzzy-search';\nimport { Nilable, Nullable } from 'tsdef';\n\nimport { createSelector } from '@reduxjs/toolkit';\n\nimport { OptionIds } from '../action-definitions/option-ids';\nimport { FileArray, FileData, FileFilter } from '../types/file.types';\nimport { RootState } from '../types/redux.types';\nimport { FileSortKeySelector, SortOrder } from '../types/sort.types';\nimport { FileHelper } from '../util/file-helper';\n\n// Raw selectors\nexport const selectInstanceId = (state: RootState) => state.instanceId;\nexport const selectExternalFileActionHandler = (state: RootState) => state.externalFileActionHandler;\n\nexport const selectFileActionMap = (state: RootState) => state.fileActionMap;\nexport const selectFileActionIds = (state: RootState) => state.fileActionIds;\nexport const selectFileActionData = (fileActionId: string) => (state: RootState) =>\n    selectFileActionMap(state)[fileActionId];\nexport const selectToolbarItems = (state: RootState) => state.toolbarItems;\nexport const selectContextMenuItems = (state: RootState) => state.contextMenuItems;\n\nexport const selectFolderChain = (state: RootState) => state.folderChain;\nexport const selectCurrentFolder = (state: RootState) => {\n    const folderChain = selectFolderChain(state);\n    const currentFolder = folderChain.length > 0 ? folderChain[folderChain.length - 1] : null;\n    return currentFolder;\n};\nexport const selectParentFolder = (state: RootState) => {\n    const folderChain = selectFolderChain(state);\n    const parentFolder = folderChain.length > 1 ? folderChain[folderChain.length - 2] : null;\n    return parentFolder;\n};\n\nexport const selectRawFiles = (state: RootState) => state.rawFiles;\nexport const selectFileMap = (state: RootState) => state.fileMap;\nexport const selectCleanFileIds = (state: RootState) => state.cleanFileIds;\nexport const selectFileData = (fileId: Nullable<string>) => (state: RootState) =>\n    fileId ? selectFileMap(state)[fileId] : null;\n\nexport const selectHiddenFileIdMap = (state: RootState) => state.hiddenFileIdMap;\nexport const selectHiddenFileCount = (state: RootState) => Object.keys(selectHiddenFileIdMap(state)).length;\n\nexport const selectFocusSearchInput = (state: RootState) => state.focusSearchInput;\nexport const selectSearchString = (state: RootState) => state.searchString;\n\nexport const selectSelectionMap = (state: RootState) => state.selectionMap;\nexport const selectSelectedFileIds = (state: RootState) => Object.keys(selectSelectionMap(state));\nexport const selectSelectionSize = (state: RootState) => selectSelectedFileIds(state).length;\nexport const selectIsFileSelected = (fileId: Nullable<string>) => (state: RootState) =>\n    !!fileId && !!selectSelectionMap(state)[fileId];\nexport const selectSelectedFiles = (state: RootState) => {\n    const fileMap = selectFileMap(state);\n    return Object.keys(selectSelectionMap(state)).map(id => fileMap[id]);\n};\nexport const selectSelectedFilesForAction = (fileActionId: string) => (state: RootState) => {\n    const { fileActionMap } = state;\n    const action = fileActionMap[fileActionId];\n    if (!action || !action.requiresSelection) return undefined;\n\n    return getSelectedFiles(state, action.fileFilter);\n};\nexport const selectSelectedFilesForActionCount = (fileActionId: string) => (state: RootState) =>\n    getSelectedFilesForAction(state, fileActionId)?.length;\nexport const selectDisableSelection = (state: RootState) => state.disableSelection;\n\nexport const selectFileViewConfig = (state: RootState) => state.fileViewConfig;\n\nexport const selectSortActionId = (state: RootState) => state.sortActionId;\nexport const selectSortOrder = (state: RootState) => state.sortOrder;\n\nexport const selectOptionMap = (state: RootState) => state.optionMap;\nexport const selectOptionValue = (optionId: string) => (state: RootState) => selectOptionMap(state)[optionId];\n\nexport const selectThumbnailGenerator = (state: RootState) => state.thumbnailGenerator;\nexport const selectDoubleClickDelay = (state: RootState) => state.doubleClickDelay;\nexport const selectIsDnDDisabled = (state: RootState) => state.disableDragAndDrop;\nexport const selectClearSelectionOnOutsideClick = (state: RootState) => state.clearSelectionOnOutsideClick;\n\nexport const selectContextMenuMounted = (state: RootState) => state.contextMenuMounted;\nexport const selectContextMenuConfig = (state: RootState) => state.contextMenuConfig;\nexport const selectContextMenuTriggerFile = (state: RootState) => {\n    const config = selectContextMenuConfig(state);\n    if (!config || !config.triggerFileId) return null;\n    const fileMap = selectFileMap(state);\n    return fileMap[config.triggerFileId] ?? null;\n};\n\n// Raw selectors\nconst getFileActionMap = (state: RootState) => state.fileActionMap;\nconst getOptionMap = (state: RootState) => state.optionMap;\nconst getFileMap = (state: RootState) => state.fileMap;\nconst getFileIds = (state: RootState) => state.fileIds;\nconst getCleanFileIds = (state: RootState) => state.cleanFileIds;\nconst getSortActionId = (state: RootState) => state.sortActionId;\nconst getSortOrder = (state: RootState) => state.sortOrder;\nconst getSearchString = (state: RootState) => state.searchString;\nconst _getLastClick = (state: RootState) => state.lastClick;\n\n// Memoized selectors\nconst makeGetAction = (fileActionSelector: (state: RootState) => Nullable<string>) =>\n    createSelector([getFileActionMap, fileActionSelector], (fileActionMap, fileActionId) =>\n        fileActionId && fileActionMap[fileActionId] ? fileActionMap[fileActionId] : null\n    );\nconst makeGetOptionValue = (optionId: string, defaultValue: any = undefined) =>\n    createSelector([getOptionMap], optionMap => {\n        const value = optionMap[optionId];\n        if (value === undefined) {\n            return defaultValue;\n        }\n        return value;\n    });\nconst makeGetFiles = (fileIdsSelector: (state: RootState) => Nullable<string>[]) =>\n    createSelector(\n        [getFileMap, fileIdsSelector],\n        (fileMap, fileIds): FileArray => fileIds.map(fileId => (fileId && fileMap[fileId] ? fileMap[fileId] : null))\n    );\nconst getSortedFileIds = createSelector(\n    [\n        getFileIds,\n        getSortOrder,\n        makeGetFiles(getFileIds),\n        makeGetAction(getSortActionId),\n        makeGetOptionValue(OptionIds.ShowFoldersFirst, false),\n    ],\n    (fileIds, sortOrder, files, sortAction, showFolderFirst) => {\n        if (!sortAction) {\n            // We allow users to set the sort action ID to `null` if they want to use their\n            // own sorting mechanisms instead of relying on Chonky built-in sort.\n            return fileIds;\n        }\n\n        const prepareSortKeySelector = (selector: FileSortKeySelector) => (file: Nullable<FileData>) => selector(file);\n\n        const sortFunctions: {\n            asc?: (file: FileData) => any;\n            desc?: (file: FileData) => any;\n        }[] = [];\n\n        if (showFolderFirst) {\n            // If option is undefined (relevant actions is not enabled), we don't show\n            // folders first.\n            sortFunctions.push({\n                desc: prepareSortKeySelector(FileHelper.isDirectory),\n            });\n        }\n        if (sortAction.sortKeySelector) {\n            const configKeyName = sortOrder === SortOrder.ASC ? 'asc' : 'desc';\n            sortFunctions.push({\n                [configKeyName]: prepareSortKeySelector(sortAction.sortKeySelector),\n            });\n        }\n        if (sortFunctions.length === 0) return fileIds;\n\n        // We copy the array because `fast-sort` mutates it\n        const sortedFileIds = sort([...files])\n            .by(sortFunctions as any)\n            .map(file => (file ? file.id : null));\n        return sortedFileIds;\n    }\n);\nconst getSearcher = createSelector(\n    [makeGetFiles(getCleanFileIds)],\n    cleanFiles => new FuzzySearch(cleanFiles as FileData[], ['name'], { caseSensitive: false })\n);\nconst getSearchFilteredFileIds = createSelector(\n    [getCleanFileIds, getSearchString, getSearcher],\n    (cleanFileIds, searchString, searcher) =>\n        searchString ? searcher.search(searchString).map(f => f.id) : cleanFileIds\n);\nconst getHiddenFileIdMap = createSelector(\n    [getSearchFilteredFileIds, makeGetFiles(getCleanFileIds), makeGetOptionValue(OptionIds.ShowHiddenFiles)],\n    (searchFilteredFileIds, cleanFiles, showHiddenFiles) => {\n        const searchFilteredFileIdsSet = new Set(searchFilteredFileIds);\n        const hiddenFileIdMap: any = {};\n        cleanFiles.forEach(file => {\n            if (!file) return;\n            else if (!searchFilteredFileIdsSet.has(file.id)) {\n                // Hidden by seach\n                hiddenFileIdMap[file.id] = true;\n            } else if (!showHiddenFiles && FileHelper.isHidden(file)) {\n                // Hidden by options\n                hiddenFileIdMap[file.id] = true;\n            }\n        });\n        return hiddenFileIdMap;\n    }\n);\nconst getDisplayFileIds = createSelector(\n    [getSortedFileIds, getHiddenFileIdMap],\n    /** Returns files that will actually be shown to the user. */\n    (sortedFileIds, hiddenFileIdMap) => sortedFileIds.filter(id => !id || !hiddenFileIdMap[id])\n);\nconst getLastClickIndex = createSelector(\n    [_getLastClick, getSortedFileIds],\n    /** Returns the last click index after ensuring it is actually still valid. */\n    (lastClick, displayFileIds) => {\n        if (\n            !lastClick ||\n            lastClick.index > displayFileIds.length - 1 ||\n            lastClick.fileId != displayFileIds[lastClick.index]\n        ) {\n            return null;\n        }\n        return lastClick.index;\n    }\n);\n\nexport const selectors = {\n    // Raw selectors\n    getFileActionMap,\n    getOptionMap,\n    getFileMap,\n    getFileIds,\n    getCleanFileIds,\n    getSortActionId,\n    getSortOrder,\n    getSearchString,\n    _getLastClick,\n\n    // Memoized selectors\n    getSortedFileIds,\n    getSearcher,\n    getSearchFilteredFileIds,\n    getHiddenFileIdMap,\n    getDisplayFileIds,\n    getLastClickIndex,\n\n    // Parametrized selectors\n    makeGetAction,\n    makeGetOptionValue,\n    makeGetFiles,\n};\n\n// Selectors meant to be used outside of Redux code\nexport const getFileData = (state: RootState, fileId: Nullable<string>) =>\n    fileId ? selectFileMap(state)[fileId] : null;\nexport const getIsFileSelected = (state: RootState, file: FileData) => {\n    // !!! We deliberately don't use `FileHelper.isSelectable` here as we want to\n    //     reflect the state of Redux store accurately.\n    return !!selectSelectionMap(state)[file.id];\n};\nexport const getSelectedFiles = (state: RootState, ...filters: Nilable<FileFilter>[]) => {\n    const { fileMap, selectionMap } = state;\n\n    const selectedFiles = Object.keys(selectionMap).map(id => fileMap[id]);\n    const filteredSelectedFiles = filters.reduce(\n        (prevFiles, filter) => (filter ? prevFiles.filter(filter) : prevFiles),\n        selectedFiles\n    );\n    return filteredSelectedFiles;\n};\nexport const getSelectedFilesForAction = (state: RootState, fileActionId: string) =>\n    selectSelectedFilesForAction(fileActionId)(state);\n","import { Nilable } from 'tsdef';\n\nimport { ChonkyActions, DefaultFileActions, EssentialFileActions } from '../../action-definitions/index';\nimport { FileActionGroup, FileActionMenuItem } from '../../types/action-menus.types';\nimport { FileAction } from '../../types/action.types';\nimport { ChonkyThunk } from '../../types/redux.types';\nimport { SortOrder } from '../../types/sort.types';\nimport { sanitizeInputArray } from '../files-transforms';\nimport { reduxActions } from '../reducers';\nimport { selectCleanFileIds, selectFileMap, selectHiddenFileIdMap, selectSelectionMap } from '../selectors';\n\n/**\n * Merges multiple file action arrays into one while removing duplicates\n */\nconst mergeFileActionsArrays = (...fileActionArrays: FileAction[][]): FileAction[] => {\n    const seenActionIds = new Set<string>();\n    const addToSeen = (a: FileAction) => !!seenActionIds.add(a.id);\n    const wasNotSeen = (a: FileAction) => !seenActionIds.has(a.id);\n\n    const duplicateFreeArrays = fileActionArrays.map(arr => {\n        const duplicateFreeArray = arr.filter(wasNotSeen);\n        duplicateFreeArray.map(addToSeen);\n        return duplicateFreeArray;\n    });\n    return new Array<FileAction>().concat(...duplicateFreeArrays);\n};\n\nexport const thunkUpdateRawFileActions = (\n    rawFileActions: FileAction[] | any,\n    disableDefaultFileActions: Nilable<boolean | string[]>\n): ChonkyThunk => dispatch => {\n    const { sanitizedArray, errorMessages } = sanitizeInputArray('fileActions', rawFileActions);\n\n    // Add default actions unless user disabled them\n    let defaultActionsToAdd: FileAction[];\n    if (Array.isArray(disableDefaultFileActions)) {\n        const disabledActionIds = new Set(disableDefaultFileActions);\n        defaultActionsToAdd = DefaultFileActions.filter(action => !disabledActionIds.has(action.id));\n    } else if (disableDefaultFileActions) {\n        defaultActionsToAdd = [];\n    } else {\n        defaultActionsToAdd = DefaultFileActions;\n    }\n\n    const fileActions = mergeFileActionsArrays(sanitizedArray, EssentialFileActions, defaultActionsToAdd);\n    const optionDefaults: any = {};\n    fileActions.map(a => (a.option ? (optionDefaults[a.option.id] = a.option.defaultValue) : null));\n\n    dispatch(reduxActions.setRawFileActions(rawFileActions));\n    dispatch(reduxActions.setFileActionsErrorMessages(errorMessages));\n    dispatch(reduxActions.setFileActions(fileActions));\n    dispatch(reduxActions.setOptionDefaults(optionDefaults));\n    dispatch(thunkUpdateToolbarNContextMenuItems(fileActions));\n};\n\nexport const thunkUpdateToolbarNContextMenuItems = (fileActions: FileAction[]): ChonkyThunk => dispatch => {\n    const excludedToolbarFileActionIds = new Set<string>([\n        // TODO: Move decision to exclude actions somewhere else, as users' custom\n        //  components might not give these actions special treatment like Chonky does.\n        ChonkyActions.OpenParentFolder.id,\n    ]);\n\n    type SeenGroupMap = { [groupName: string]: FileActionGroup };\n\n    const toolbarItems: FileActionMenuItem[] = [];\n    const seenToolbarGroups: SeenGroupMap = {};\n\n    const contextMenuItems: FileActionMenuItem[] = [];\n    const seenContextMenuGroups: SeenGroupMap = {};\n\n    const getGroup = (itemArray: FileActionMenuItem[], seenMap: SeenGroupMap, groupName: string): FileActionGroup => {\n        if (seenMap[groupName]) return seenMap[groupName];\n        const group: FileActionGroup = { name: groupName, fileActionIds: [] };\n        itemArray.push(group);\n        seenMap[groupName] = group;\n        return group;\n    };\n\n    for (const action of fileActions) {\n        const button = action.button;\n        if (!button) continue;\n\n        if (button.toolbar && !excludedToolbarFileActionIds.has(action.id)) {\n            if (button.group) {\n                const group = getGroup(toolbarItems, seenToolbarGroups, button.group);\n                group.fileActionIds.push(action.id);\n            } else {\n                toolbarItems.push(action.id);\n            }\n        }\n\n        if (button.contextMenu) {\n            if (button.group) {\n                const group = getGroup(contextMenuItems, seenContextMenuGroups, button.group);\n                group.fileActionIds.push(action.id);\n            } else {\n                contextMenuItems.push(action.id);\n            }\n        }\n    }\n\n    dispatch(reduxActions.updateFileActionMenuItems([toolbarItems, contextMenuItems]));\n};\n\nexport const thunkUpdateDefaultFileViewActionId = (fileActionId: Nilable<string>): ChonkyThunk => (\n    dispatch,\n    getState\n) => {\n    const { fileActionMap } = getState();\n    const action = fileActionId ? fileActionMap[fileActionId] : null;\n    if (action && action.fileViewConfig) {\n        dispatch(reduxActions.setFileViewConfig(action.fileViewConfig));\n    }\n};\n\nexport const thunkActivateSortAction = (fileActionId: Nilable<string>): ChonkyThunk => (dispatch, getState) => {\n    if (!fileActionId) return;\n\n    const { sortActionId: oldActionId, sortOrder: oldOrder, fileActionMap } = getState();\n    const action = fileActionMap[fileActionId];\n    if (!action || !action.sortKeySelector) return;\n\n    let order = oldOrder === SortOrder.ASC ? SortOrder.DESC : SortOrder.ASC;\n    if (oldActionId !== fileActionId) {\n        order = SortOrder.ASC;\n    }\n\n    dispatch(reduxActions.setSort({ actionId: fileActionId, order: order }));\n};\n\nexport const thunkApplySelectionTransform = (action: FileAction): ChonkyThunk => (dispatch, getState) => {\n    const selectionTransform = action.selectionTransform;\n    if (!selectionTransform) return;\n\n    const state = getState();\n    const prevSelection = new Set<string>(Object.keys(selectSelectionMap(state)));\n    const hiddenFileIds = new Set<string>(Object.keys(selectHiddenFileIdMap(state)));\n\n    const newSelection = selectionTransform({\n        prevSelection,\n        fileIds: selectCleanFileIds(state),\n        fileMap: selectFileMap(state),\n        hiddenFileIds,\n    });\n    if (!newSelection) return;\n\n    if (newSelection.size === 0) {\n        dispatch(reduxActions.clearSelection());\n    } else {\n        dispatch(reduxActions.selectFiles({ fileIds: Array.from(newSelection), reset: true }));\n    }\n};\n","import { MaybePromise, Undefinable } from 'tsdef';\n\nimport { FileActionData, FileActionState } from '../../types/action-handler.types';\nimport { FileAction } from '../../types/action.types';\nimport { ChonkyDispatch, ChonkyThunk } from '../../types/redux.types';\nimport { Logger } from '../../util/logger';\nimport { reduxActions } from '../reducers';\nimport {\n    selectContextMenuTriggerFile, selectExternalFileActionHandler, selectFileActionMap,\n    selectInstanceId, selectSelectedFiles\n} from '../selectors';\nimport { thunkActivateSortAction, thunkApplySelectionTransform } from './file-actions.thunks';\n\n/**\n * Thunk that dispatches actions to the external (user-provided) action handler.\n */\nexport const thunkDispatchFileAction = (data: FileActionData<FileAction>): ChonkyThunk => (_dispatch, getState) => {\n    Logger.debug(`FILE ACTION DISPATCH: [${data.id}]`, 'data:', data);\n    const state = getState();\n    const action = selectFileActionMap(state)[data.id];\n    const externalFileActionHandler = selectExternalFileActionHandler(state);\n    if (action) {\n        if (externalFileActionHandler) {\n            Promise.resolve(externalFileActionHandler(data)).catch(error =>\n                Logger.error(`User-defined file action handler threw an error: ${error.message}`)\n            );\n        }\n    } else {\n        Logger.warn(\n            `Internal components dispatched the \"${data.id}\" file action, but such ` + `action was not registered.`\n        );\n    }\n};\n\n/**\n * Thunk that is used by internal components (and potentially the user) to \"request\"\n * actions. When action is requested, Chonky \"prepares\" the action data by extracting it\n * from Redux state. Once action data is ready, Chonky executes some side effect and/or\n * dispatches the action to the external action handler.\n */\nexport const thunkRequestFileAction = <Action extends FileAction>(\n    action: Action,\n    payload: Action['__payloadType']\n): ChonkyThunk => (dispatch, getState) => {\n    Logger.debug(`FILE ACTION REQUEST: [${action.id}]`, 'action:', action, 'payload:', payload);\n    const state = getState();\n    const instanceId = selectInstanceId(state);\n\n    if (!selectFileActionMap(state)[action.id]) {\n        Logger.warn(\n            `The action \"${action.id}\" was requested, but it is not registered. The ` +\n                `action will still be dispatched, but this might indicate a bug in ` +\n                `the code. Please register your actions by passing them to ` +\n                `\"fileActions\" prop.`\n        );\n    }\n\n    // Determine files for the action if action requires selection\n    const selectedFiles = selectSelectedFiles(state);\n    const selectedFilesForAction = action.fileFilter ? selectedFiles.filter(action.fileFilter) : selectedFiles;\n    if (action.requiresSelection && selectedFilesForAction.length === 0) {\n        Logger.warn(\n            `Internal components requested the \"${action.id}\" file ` +\n                `action, but the selection for this action was empty. This ` +\n                `might a bug in the code of the presentational components.`\n        );\n        return;\n    }\n\n    const contextMenuTriggerFile = selectContextMenuTriggerFile(state);\n    const actionState: FileActionState<{}> = {\n        instanceId,\n        selectedFiles,\n        selectedFilesForAction,\n        contextMenuTriggerFile,\n    };\n\n    // === Update sort state if necessary\n    const sortKeySelector = action.sortKeySelector;\n    if (sortKeySelector) dispatch(thunkActivateSortAction(action.id));\n\n    // === Update file view state if necessary\n    const fileViewConfig = action.fileViewConfig;\n    if (fileViewConfig) dispatch(reduxActions.setFileViewConfig(fileViewConfig));\n\n    // === Update option state if necessary\n    const option = action.option;\n    if (option) dispatch(reduxActions.toggleOption(option.id));\n\n    // === Apply selection transform if necessary\n    const selectionTransform = action.selectionTransform;\n    if (selectionTransform) dispatch(thunkApplySelectionTransform(action));\n\n    // Apply the effect\n    const effect = action.effect;\n    let maybeEffectPromise: MaybePromise<boolean | undefined> = undefined;\n    if (effect) {\n        try {\n            maybeEffectPromise = effect({\n                action,\n                payload,\n                state: actionState,\n                reduxDispatch: dispatch,\n                getReduxState: getState,\n            }) as MaybePromise<boolean | undefined>;\n        } catch (error) {\n            Logger.error(`User-defined effect function for action ${action.id} threw an ` + `error: ${error.message}`);\n        }\n    }\n\n    // Dispatch the action to user code. Deliberately call it after all other\n    // operations are over.\n    return Promise.resolve(maybeEffectPromise)\n        .then(effectResult => {\n            const data: FileActionData<Action> = {\n                id: action.id,\n                action,\n                payload,\n                state: actionState,\n            };\n            triggerDispatchAfterEffect(dispatch, data, effectResult);\n        })\n        .catch(error => {\n            Logger.error(\n                `User-defined effect function for action ${action.id} returned a ` +\n                    `promise that was rejected: ${error.message}`\n            );\n            const data: FileActionData<Action> = {\n                id: action.id,\n                action,\n                payload,\n                state: actionState,\n            };\n            triggerDispatchAfterEffect(dispatch, data, undefined);\n        });\n};\n\nexport const triggerDispatchAfterEffect = <Action extends FileAction>(\n    dispatch: ChonkyDispatch,\n    data: FileActionData<Action>,\n    effectResult: Undefinable<boolean>\n) => {\n    const preventDispatch = effectResult === true;\n    if (!preventDispatch) dispatch(thunkDispatchFileAction(data));\n};\n","export enum FileViewMode {\n    List = 'list',\n    Compact = 'compact',\n    Grid = 'grid',\n}\n\nexport type FileViewConfigList = {\n    mode: FileViewMode.List;\n    entryHeight: number;\n};\n\nexport type FileViewConfigGrid = {\n    mode: FileViewMode.Compact | FileViewMode.Grid;\n    entryWidth: number;\n    entryHeight: number;\n};\n\nexport type FileViewConfig = FileViewConfigList | FileViewConfigGrid;\n","import React from 'react';\n\nexport enum ChonkyIconName {\n    // Misc\n    loading = 'loading',\n    dropdown = 'dropdown',\n    placeholder = 'placeholder',\n\n    // File Actions: Drag & drop\n    dndDragging = 'dndDragging',\n    dndCanDrop = 'dndCanDrop',\n    dndCannotDrop = 'dndCannotDrop',\n\n    // File Actions: File operations\n    openFiles = 'openFiles',\n    openParentFolder = 'openParentFolder',\n    copy = 'copy',\n    paste = 'paste',\n    share = 'share',\n    search = 'search',\n    selectAllFiles = 'selectAllFiles',\n    clearSelection = 'clearSelection',\n\n    // File Actions: Sorting & options\n    sortAsc = 'sortAsc',\n    sortDesc = 'sortDesc',\n    toggleOn = 'toggleOn',\n    toggleOff = 'toggleOff',\n\n    // File Actions: File Views\n    list = 'list',\n    compact = 'compact',\n    smallThumbnail = 'smallThumbnail',\n    largeThumbnail = 'largeThumbnail',\n\n    // File Actions: Unsorted\n    folder = 'folder',\n    folderCreate = 'folderCreate',\n    folderOpen = 'folderOpen',\n    folderChainSeparator = 'folderChainSeparator',\n    download = 'download',\n    upload = 'upload',\n    trash = 'trash',\n    fallbackIcon = 'fallbackIcon',\n\n    // File modifiers\n    symlink = 'symlink',\n    hidden = 'hidden',\n\n    // Generic file types\n    file = 'file',\n    license = 'license',\n    code = 'code',\n    config = 'config',\n    model = 'model',\n    database = 'database',\n    text = 'text',\n    archive = 'archive',\n    image = 'image',\n    video = 'video',\n    info = 'info',\n    key = 'key',\n    lock = 'lock',\n    music = 'music',\n    terminal = 'terminal',\n    users = 'users',\n\n    // OS file types\n    linux = 'linux',\n    ubuntu = 'ubuntu',\n    windows = 'windows',\n\n    // Programming language file types\n    rust = 'rust',\n    python = 'python',\n    nodejs = 'nodejs',\n    php = 'php',\n\n    // Development tools file types\n    git = 'git',\n\n    // Brands file types\n    adobe = 'adobe',\n\n    // Other program file types\n    pdf = 'pdf',\n    excel = 'excel',\n    word = 'word',\n    flash = 'flash',\n}\n\nexport interface FileIconData {\n    icon: ChonkyIconName | string;\n    colorCode: number;\n}\n\nexport interface ChonkyIconProps {\n    icon: ChonkyIconName | string;\n    spin?: boolean;\n    className?: string;\n    fixedWidth?: boolean;\n    style?: React.CSSProperties;\n}\n","// Used in React hooks to indicate empty deps are intentional.\nimport { MaybePromise, Nullable, WritableProps } from 'tsdef';\n\nimport { FileAction, FileActionEffect } from '../types/action.types';\nimport { Logger } from './logger';\n\n// Used in contexts that need to provide some default value for a function.\n// eslint-disable-next-line no-unused-vars,@typescript-eslint/no-unused-vars\nexport const NOOP_FUNCTION = (...args: any[]) => {\n    Logger.warn(\n        `The \"NOOP_FUNCTION\" from the constants module was called. ` +\n            `This can indicate a bug in one of the components. Supplied args:`,\n        args\n    );\n};\n\nexport const isPromise = <T>(value: MaybePromise<T> | any): value is Promise<T> => {\n    if (typeof value !== 'object' || !value) return false;\n    const then = (value as Promise<T>).then;\n    return then && typeof then === 'function';\n};\n\nexport const defineFileAction = <Action extends FileAction>(\n    action: Action,\n    effect?: FileActionEffect<FileAction>\n): WritableProps<Action> => {\n    if (action.__payloadType !== undefined && (action.hotkeys || action.button)) {\n        const errorMessage =\n            `Invalid definition was provided for file action \"${action.id}\". Actions ` +\n            `that specify hotkeys or buttons cannot define a payload type. If ` +\n            `your application requires this functionality, define two actions ` +\n            `and chain them using effects.`;\n        Logger.error(errorMessage);\n        throw new Error(errorMessage);\n    }\n\n    action.effect = effect;\n    return action;\n};\n\n/**\n * Recursively check the current element and the parent elements, going bottom-up.\n * Returns the first element to match the predicate, otherwise returns null if such\n * element is not found.\n */\nexport const findElementAmongAncestors = (\n    maybeElement: HTMLElement | any,\n    predicate: (maybeElement: HTMLElement | any) => boolean\n): Nullable<HTMLElement> => {\n    if (!maybeElement) return maybeElement;\n\n    if (predicate(maybeElement)) return maybeElement;\n\n    if (maybeElement.parentElement) {\n        return findElementAmongAncestors(maybeElement.parentElement, predicate);\n    }\n\n    return null;\n};\n\nexport const elementIsInsideButton = (buttonCandidate: HTMLElement | any): boolean => {\n    return !!findElementAmongAncestors(\n        buttonCandidate,\n        (element: any) => element.tagName && element.tagName.toLowerCase() === 'button'\n    );\n};\n\nexport const getValueOrFallback = <T extends any>(\n    value: T | undefined,\n    fallback: T,\n    desiredType?: 'boolean' | 'string' | 'number'\n): NonNullable<T> => {\n    if (desiredType) {\n        return (typeof value === desiredType ? value : fallback) as NonNullable<T>;\n    }\n    return (value !== undefined ? value : fallback) as NonNullable<T>;\n};\n","import { ChonkyThunk } from '../../types/redux.types';\nimport { FileHelper } from '../../util/file-helper';\nimport { reduxActions } from '../reducers';\nimport { selectors } from '../selectors';\n\nexport const reduxThunks = {\n    selectRange: (params: {\n        rangeStart: number;\n        rangeEnd: number;\n        reset?: boolean;\n    }): ChonkyThunk => (dispatch, getState) => {\n        const state = getState();\n        if (state.disableSelection) return;\n        const displayFileIds = selectors.getDisplayFileIds(state);\n        const fileIdsToSelect = displayFileIds\n            .slice(params.rangeStart, params.rangeEnd + 1)\n            .filter(id => id && FileHelper.isSelectable(state.fileMap[id])) as string[];\n        dispatch(\n            reduxActions.selectFiles({\n                fileIds: fileIdsToSelect,\n                reset: !!params.reset,\n            })\n        );\n    },\n};\n","import { reduxActions } from '../redux/reducers';\nimport {\n    getFileData, getIsFileSelected, selectDisableSelection, selectors, selectParentFolder,\n    selectSelectionSize\n} from '../redux/selectors';\nimport { reduxThunks } from '../redux/thunks';\nimport { thunkRequestFileAction } from '../redux/thunks/dispatchers.thunks';\nimport {\n    ChangeSelectionPayload, EndDragNDropPayload, KeyboardClickFilePayload, MouseClickFilePayload,\n    MoveFilesPayload, OpenFileContextMenuPayload, OpenFilesPayload, StartDragNDropPayload\n} from '../types/action-payloads.types';\nimport { ChonkyIconName } from '../types/icons.types';\nimport { FileHelper } from '../util/file-helper';\nimport { defineFileAction } from '../util/helpers';\nimport { Logger } from '../util/logger';\nimport { ChonkyActions } from './index';\n\nexport const EssentialActions = {\n    /**\n     * Action that is dispatched when the user clicks on a file entry using their mouse.\n     * Both single clicks and double clicks trigger this action.\n     */\n    MouseClickFile: defineFileAction(\n        {\n            id: 'mouse_click_file',\n            __payloadType: {} as MouseClickFilePayload,\n        } as const,\n        ({ payload, reduxDispatch, getReduxState }) => {\n            if (payload.clickType === 'double') {\n                if (FileHelper.isOpenable(payload.file)) {\n                    reduxDispatch(\n                        thunkRequestFileAction(ChonkyActions.OpenFiles, {\n                            targetFile: payload.file,\n\n                            // To simulate Windows Explorer and Nautilus behaviour,\n                            // a double click on a file only opens that file even if\n                            // there is a selection.\n                            files: [payload.file],\n                        })\n                    );\n                }\n            } else {\n                // We're dealing with a single click\n\n                const disableSelection = selectDisableSelection(getReduxState());\n                if (FileHelper.isSelectable(payload.file) && !disableSelection) {\n                    if (payload.ctrlKey) {\n                        // Multiple selection\n                        reduxDispatch(\n                            reduxActions.toggleSelection({\n                                fileId: payload.file.id,\n                                exclusive: false,\n                            })\n                        );\n                        reduxDispatch(\n                            reduxActions.setLastClickIndex({\n                                index: payload.fileDisplayIndex,\n                                fileId: payload.file.id,\n                            })\n                        );\n                    } else if (payload.shiftKey) {\n                        // Range selection\n                        const lastClickIndex = selectors.getLastClickIndex(getReduxState());\n                        if (typeof lastClickIndex === 'number') {\n                            // We have the index of the previous click\n                            let rangeStart = lastClickIndex;\n                            let rangeEnd = payload.fileDisplayIndex;\n                            if (rangeStart > rangeEnd) {\n                                [rangeStart, rangeEnd] = [rangeEnd, rangeStart];\n                            }\n\n                            reduxDispatch(reduxThunks.selectRange({ rangeStart, rangeEnd }));\n                        } else {\n                            // Since we can't do a range selection, do a\n                            // multiple selection\n                            reduxDispatch(\n                                reduxActions.toggleSelection({\n                                    fileId: payload.file.id,\n                                    exclusive: false,\n                                })\n                            );\n                            reduxDispatch(\n                                reduxActions.setLastClickIndex({\n                                    index: payload.fileDisplayIndex,\n                                    fileId: payload.file.id,\n                                })\n                            );\n                        }\n                    } else {\n                        // Exclusive selection\n                        reduxDispatch(\n                            reduxActions.toggleSelection({\n                                fileId: payload.file.id,\n                                exclusive: true,\n                            })\n                        );\n                        reduxDispatch(\n                            reduxActions.setLastClickIndex({\n                                index: payload.fileDisplayIndex,\n                                fileId: payload.file.id,\n                            })\n                        );\n                    }\n                } else {\n                    if (!payload.ctrlKey && !disableSelection) {\n                        reduxDispatch(reduxActions.clearSelection());\n                    }\n                    reduxDispatch(\n                        reduxActions.setLastClickIndex({\n                            index: payload.fileDisplayIndex,\n                            fileId: payload.file.id,\n                        })\n                    );\n                }\n            }\n        }\n    ),\n    /**\n     * Action that is dispatched when the user \"clicks\" on a file using their keyboard.\n     * Using Space and Enter keys counts as clicking.\n     */\n    KeyboardClickFile: defineFileAction(\n        {\n            id: 'keyboard_click_file',\n            __payloadType: {} as KeyboardClickFilePayload,\n        } as const,\n        ({ payload, reduxDispatch, getReduxState }) => {\n            reduxDispatch(\n                reduxActions.setLastClickIndex({\n                    index: payload.fileDisplayIndex,\n                    fileId: payload.file.id,\n                })\n            );\n            if (payload.enterKey) {\n                // We only dispatch the Open Files action here when the selection is\n                // empty. Otherwise, `Enter` key presses are handled by the\n                // hotkey manager for the Open Files action.\n                if (selectSelectionSize(getReduxState()) === 0) {\n                    reduxDispatch(\n                        thunkRequestFileAction(ChonkyActions.OpenFiles, {\n                            targetFile: payload.file,\n                            files: [payload.file],\n                        })\n                    );\n                }\n            } else if (payload.spaceKey && FileHelper.isSelectable(payload.file)) {\n                reduxDispatch(\n                    reduxActions.toggleSelection({\n                        fileId: payload.file.id,\n                        exclusive: payload.ctrlKey,\n                    })\n                );\n            }\n        }\n    ),\n    /**\n     * Action that is dispatched when user starts dragging some file.\n     */\n    StartDragNDrop: defineFileAction(\n        {\n            id: 'start_drag_n_drop',\n            __payloadType: {} as StartDragNDropPayload,\n        } as const,\n        ({ payload, reduxDispatch, getReduxState }) => {\n            const file = payload.draggedFile;\n            if (!getIsFileSelected(getReduxState(), file)) {\n                if (FileHelper.isSelectable(file)) {\n                    reduxDispatch(\n                        reduxActions.selectFiles({\n                            fileIds: [file.id],\n                            reset: true,\n                        })\n                    );\n                }\n            }\n        }\n    ),\n    /**\n     * Action that is dispatched when user either cancels the drag & drop interaction,\n     * or drops a file somewhere.\n     */\n    EndDragNDrop: defineFileAction(\n        {\n            id: 'end_drag_n_drop',\n            __payloadType: {} as EndDragNDropPayload,\n        } as const,\n        ({ payload, reduxDispatch, getReduxState }) => {\n            if (getIsFileSelected(getReduxState(), payload.destination)) {\n                // Can't drop a selection into itself\n                return;\n            }\n\n            const { draggedFile, selectedFiles } = payload as EndDragNDropPayload;\n            const droppedFiles = selectedFiles.length > 0 ? selectedFiles : [draggedFile];\n            reduxDispatch(\n                thunkRequestFileAction(ChonkyActions.MoveFiles, {\n                    ...payload,\n                    files: droppedFiles,\n                })\n            );\n        }\n    ),\n    /**\n     * Action that is dispatched when user moves files from one folder to another,\n     * usually by dragging & dropping some files into the folder.\n     */\n    MoveFiles: defineFileAction({\n        id: 'move_files',\n        __payloadType: {} as MoveFilesPayload,\n    } as const),\n    /**\n     * Action that is dispatched when the selection changes for any reason.\n     */\n    ChangeSelection: defineFileAction({\n        id: 'change_selection',\n        __payloadType: {} as ChangeSelectionPayload,\n    } as const),\n    /**\n     * Action that is dispatched when user wants to open some files. This action is\n     * often triggered by other actions.\n     */\n    OpenFiles: defineFileAction({\n        id: 'open_files',\n        __payloadType: {} as OpenFilesPayload,\n    } as const),\n    /**\n     * Action that is triggered when user wants to go up a directory.\n     */\n    OpenParentFolder: defineFileAction(\n        {\n            id: 'open_parent_folder',\n            hotkeys: ['backspace'],\n            button: {\n                name: 'Go up a directory',\n                toolbar: true,\n                contextMenu: false,\n                icon: ChonkyIconName.openParentFolder,\n                iconOnly: true,\n            },\n        } as const,\n        ({ reduxDispatch, getReduxState }) => {\n            const parentFolder = selectParentFolder(getReduxState());\n            if (FileHelper.isOpenable(parentFolder)) {\n                reduxDispatch(\n                    thunkRequestFileAction(ChonkyActions.OpenFiles, {\n                        targetFile: parentFolder,\n                        files: [parentFolder],\n                    })\n                );\n            } else {\n                Logger.warn(\n                    'Open parent folder effect was triggered  even though the parent folder' +\n                        ' is not openable. This indicates a bug in presentation components.'\n                );\n            }\n        }\n    ),\n    /**\n     * Action that is dispatched when user opens the context menu, either by right click\n     * on something or using the context menu button on their keyboard.\n     */\n    OpenFileContextMenu: defineFileAction(\n        {\n            id: 'open_file_context_menu',\n            __payloadType: {} as OpenFileContextMenuPayload,\n        } as const,\n        ({ payload, reduxDispatch, getReduxState }) => {\n            // TODO: Check if the context menu component is actually enabled. There is a\n            //  chance it doesn't matter if it is enabled or not - if it is not mounted,\n            //  the action will simply have no effect. It also allows users to provide\n            //  their own components - however, users could also flip the \"context menu\n            //  component mounted\" switch...\n            const triggerFile = getFileData(getReduxState(), payload.triggerFileId);\n            if (triggerFile) {\n                const fileSelected = getIsFileSelected(getReduxState(), triggerFile);\n                if (!fileSelected) {\n                    // If file is selected, we leave the selection as is. If it is not\n                    // selected, it means user right clicked the file with no selection.\n                    // We simulate the Windows Explorer/Nautilus behaviour of moving\n                    // selection to this file.\n                    if (FileHelper.isSelectable(triggerFile)) {\n                        reduxDispatch(\n                            reduxActions.selectFiles({\n                                fileIds: [payload.triggerFileId],\n                                reset: true,\n                            })\n                        );\n                    } else {\n                        reduxDispatch(reduxActions.clearSelection());\n                    }\n                }\n            }\n\n            reduxDispatch(\n                reduxActions.showContextMenu({\n                    triggerFileId: payload.triggerFileId,\n                    mouseX: payload.clientX - 2,\n                    mouseY: payload.clientY - 4,\n                })\n            );\n        }\n    ),\n};\n","import { Nullable } from 'tsdef';\n\nimport { selectFocusSearchInput } from '../redux/selectors';\nimport { thunkRequestFileAction } from '../redux/thunks/dispatchers.thunks';\nimport { FileSelectionTransform } from '../types/action.types';\nimport { FileViewMode } from '../types/file-view.types';\nimport { FileData } from '../types/file.types';\nimport { ChonkyIconName } from '../types/icons.types';\nimport { FileHelper } from '../util/file-helper';\nimport { defineFileAction } from '../util/helpers';\nimport { EssentialActions } from './essential';\nimport { OptionIds } from './option-ids';\n\nexport const DefaultActions = {\n    /**\n     * Action that can be used to open currently selected files.\n     */\n    OpenSelection: defineFileAction(\n        {\n            id: 'open_selection',\n            hotkeys: ['enter'],\n            requiresSelection: true,\n            fileFilter: FileHelper.isOpenable,\n            button: {\n                name: 'Open selection',\n                toolbar: true,\n                contextMenu: true,\n                group: 'Actions',\n                icon: ChonkyIconName.openFiles,\n            },\n        } as const,\n        ({ state, reduxDispatch }) => {\n            reduxDispatch(\n                thunkRequestFileAction(EssentialActions.OpenFiles, {\n                    files: state.selectedFilesForAction!,\n                })\n            );\n            return undefined;\n        }\n    ),\n    /**\n     * Action that selects all files.\n     */\n    SelectAllFiles: defineFileAction({\n        id: 'select_all_files',\n        hotkeys: ['ctrl+a'],\n        button: {\n            name: 'Select all files',\n            toolbar: true,\n            contextMenu: true,\n            group: 'Actions',\n            icon: ChonkyIconName.selectAllFiles,\n        },\n        selectionTransform: (({ fileIds, hiddenFileIds }) => {\n            const newSelection = new Set<string>();\n            fileIds.map(fileId => {\n                // We don't need to check if file is selectable because Chonky does\n                // it own checks internally.\n                if (!hiddenFileIds.has(fileId)) newSelection.add(fileId);\n            });\n            return newSelection;\n        }) as FileSelectionTransform,\n    } as const),\n    /**\n     * Action that clear the file selection.\n     */\n    ClearSelection: defineFileAction({\n        id: 'clear_selection',\n        hotkeys: ['escape'],\n        button: {\n            name: 'Clear selection',\n            toolbar: true,\n            contextMenu: true,\n            group: 'Actions',\n            icon: ChonkyIconName.clearSelection,\n        },\n        selectionTransform: (({ prevSelection }) => {\n            if (prevSelection.size === 0) return null;\n            return new Set<string>();\n        }) as FileSelectionTransform,\n    } as const),\n    /**\n     * Action that enables List view.\n     */\n    EnableListView: defineFileAction({\n        id: 'enable_list_view',\n        fileViewConfig: {\n            mode: FileViewMode.List,\n            entryHeight: 30,\n        },\n        button: {\n            name: 'Switch to List view',\n            toolbar: true,\n            icon: ChonkyIconName.list,\n            iconOnly: true,\n        },\n    } as const),\n    /**\n     * Action that enables Compact view. Note that compact view is still\n     * experimental and should not be used in production.\n     */\n    EnableCompactView: defineFileAction({\n        // TODO: Don't enable until compact view is fully supported\n        id: 'enable_compact_view',\n        fileViewConfig: {\n            mode: FileViewMode.Compact,\n            entryHeight: 40,\n            entryWidth: 220,\n        },\n        button: {\n            name: 'Switch to Compact view',\n            toolbar: true,\n            icon: ChonkyIconName.compact,\n            iconOnly: true,\n        },\n    } as const),\n    /**\n     * Action that enables Grid view.\n     */\n    EnableGridView: defineFileAction({\n        id: 'enable_grid_view',\n        fileViewConfig: { mode: FileViewMode.Grid, entryWidth: 165, entryHeight: 130 },\n        button: {\n            name: 'Switch to Grid view',\n            toolbar: true,\n            icon: ChonkyIconName.smallThumbnail,\n            iconOnly: true,\n        },\n    } as const),\n    /**\n     * Action that sorts files by `file.name`.\n     */\n    SortFilesByName: defineFileAction({\n        id: 'sort_files_by_name',\n        sortKeySelector: (file: Nullable<FileData>) => (file ? file.name.toLowerCase() : undefined),\n        button: {\n            name: 'Sort by name',\n            toolbar: true,\n            group: 'Options',\n        },\n    } as const),\n    /**\n     * Action that sorts files by `file.size`.\n     */\n    SortFilesBySize: defineFileAction({\n        id: 'sort_files_by_size',\n        sortKeySelector: (file: Nullable<FileData>) => (file ? file.size : undefined),\n        button: {\n            name: 'Sort by size',\n            toolbar: true,\n            group: 'Options',\n        },\n    } as const),\n    /**\n     * Action that sorts files by `file.modDate`.\n     */\n    SortFilesByDate: defineFileAction({\n        id: 'sort_files_by_date',\n        sortKeySelector: (file: Nullable<FileData>) => (file ? file.modDate : undefined),\n        button: {\n            name: 'Sort by date',\n            toolbar: true,\n            group: 'Options',\n        },\n    } as const),\n    /**\n     * Action that toggles whether hidden files are shown to the user or not.\n     */\n    ToggleHiddenFiles: defineFileAction({\n        id: 'toggle_hidden_files',\n        hotkeys: ['ctrl+h'],\n        option: {\n            id: OptionIds.ShowHiddenFiles,\n            defaultValue: true,\n        },\n        button: {\n            name: 'Show hidden files',\n            toolbar: true,\n            group: 'Options',\n        },\n    } as const),\n    /**\n     * Action that toggles whether folders should appear before files regardless of\n     * current sort function.\n     */\n    ToggleShowFoldersFirst: defineFileAction({\n        id: 'toggle_show_folders_first',\n        option: {\n            id: OptionIds.ShowFoldersFirst,\n            defaultValue: true,\n        },\n        button: {\n            name: 'Show folders first',\n            toolbar: true,\n            group: 'Options',\n        },\n    } as const),\n    /**\n     * Action that focuses the search input when it is dispatched.\n     */\n    FocusSearchInput: defineFileAction(\n        {\n            id: 'focus_search_input',\n            hotkeys: ['ctrl+f'],\n        } as const,\n        ({ getReduxState }) => {\n            const focusSearchInput = selectFocusSearchInput(getReduxState());\n            if (focusSearchInput) focusSearchInput();\n        }\n    ),\n    /**\n     * Action that enables List view.\n     */\n    ToggleDarkMode: defineFileAction({\n        id: 'enable_dark_mode',\n        option: {\n            id: OptionIds.DarkMode,\n            defaultValue: false,\n        },\n        button: {\n            name: 'Enable dark mode',\n            toolbar: true,\n            icon: ChonkyIconName.list,\n            iconOnly: true,\n        },\n    } as const),\n};\n","import { ChonkyIconName } from '../types/icons.types';\nimport { defineFileAction } from '../util/helpers';\n\nexport const ExtraActions = {\n    /**\n     * Action that adds a button and shortcut to copy files.\n     */\n    CopyFiles: defineFileAction({\n        id: 'copy_files',\n        requiresSelection: true,\n        hotkeys: ['ctrl+c'],\n        button: {\n            name: 'Copy selection',\n            toolbar: true,\n            contextMenu: true,\n            group: 'Actions',\n            icon: ChonkyIconName.copy,\n        },\n    } as const),\n    /**\n     * Action that adds a button to create a new folder.\n     */\n    CreateFolder: defineFileAction({\n        id: 'create_folder',\n        button: {\n            name: 'Create folder',\n            toolbar: true,\n            tooltip: 'Create a folder',\n            icon: ChonkyIconName.folderCreate,\n        },\n    } as const),\n    /**\n     * Action that adds a button to upload files.\n     */\n    UploadFiles: defineFileAction({\n        id: 'upload_files',\n        button: {\n            name: 'Upload files',\n            toolbar: true,\n            tooltip: 'Upload files',\n            icon: ChonkyIconName.upload,\n        },\n    } as const),\n    /**\n     * Action that adds a button to download files.\n     */\n    DownloadFiles: defineFileAction({\n        id: 'download_files',\n        requiresSelection: true,\n        button: {\n            name: 'Download files',\n            toolbar: true,\n            contextMenu: true,\n            group: 'Actions',\n            icon: ChonkyIconName.download,\n        },\n    } as const),\n    /**\n     * Action that adds a button and shortcut to delete files.\n     */\n    DeleteFiles: defineFileAction({\n        id: 'delete_files',\n        requiresSelection: true,\n        hotkeys: ['delete'],\n        button: {\n            name: 'Delete files',\n            toolbar: true,\n            contextMenu: true,\n            group: 'Actions',\n            icon: ChonkyIconName.trash,\n        },\n    } as const),\n};\n","import { DefaultActions } from './default';\nimport { EssentialActions } from './essential';\nimport { ExtraActions } from './extra';\n\nexport { OptionIds } from './option-ids';\n\nexport const ChonkyActions = {\n    ...EssentialActions,\n    ...DefaultActions,\n    ...ExtraActions,\n};\n\nexport const EssentialFileActions = [\n    ChonkyActions.MouseClickFile,\n    ChonkyActions.KeyboardClickFile,\n    ChonkyActions.StartDragNDrop,\n    ChonkyActions.EndDragNDrop,\n    ChonkyActions.MoveFiles,\n    ChonkyActions.ChangeSelection,\n    ChonkyActions.OpenFiles,\n    ChonkyActions.OpenParentFolder,\n    ChonkyActions.OpenFileContextMenu,\n];\n\nexport const DefaultFileActions = [\n    ChonkyActions.OpenSelection,\n    ChonkyActions.SelectAllFiles,\n    ChonkyActions.ClearSelection,\n    ChonkyActions.EnableListView,\n    // TODO: Don't enable until compact view is fully supported\n    // ChonkyActions.EnableCompactView,\n    ChonkyActions.EnableGridView,\n    ChonkyActions.SortFilesByName,\n    ChonkyActions.SortFilesBySize,\n    ChonkyActions.SortFilesByDate,\n    ChonkyActions.ToggleHiddenFiles,\n    ChonkyActions.ToggleShowFoldersFirst,\n    ChonkyActions.FocusSearchInput,\n];\n","import { ChonkyActions } from '../action-definitions/index';\nimport { RootState } from '../types/redux.types';\nimport { SortOrder } from '../types/sort.types';\n\nexport const initialRootState: RootState = {\n    instanceId: 'CHONKY_INVALID_ID', // should be overwritten by preloaded state\n\n    externalFileActionHandler: null,\n\n    rawFileActions: [],\n    fileActionsErrorMessages: [],\n    fileActionMap: {},\n    fileActionIds: [],\n    toolbarItems: [],\n    contextMenuItems: [],\n\n    rawFolderChain: null,\n    folderChainErrorMessages: [],\n    folderChain: [],\n\n    rawFiles: [],\n    filesErrorMessages: [],\n    fileMap: {},\n    fileIds: [],\n    cleanFileIds: [],\n\n    sortedFileIds: [],\n    hiddenFileIdMap: {},\n\n    focusSearchInput: null,\n    searchString: '',\n    searchMode: 'currentFolder',\n\n    selectionMap: {},\n    disableSelection: false,\n\n    fileViewConfig: ChonkyActions.EnableGridView.fileViewConfig,\n\n    sortActionId: null,\n    sortOrder: SortOrder.ASC,\n\n    optionMap: {},\n\n    thumbnailGenerator: null,\n    doubleClickDelay: 300,\n    disableDragAndDrop: false,\n    clearSelectionOnOutsideClick: true,\n\n    lastClick: null,\n\n    contextMenuMounted: false,\n    contextMenuConfig: null,\n};\n","import { Nilable, Nullable } from 'tsdef';\n\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { GenericFileActionHandler } from '../types/action-handler.types';\nimport { FileActionMenuItem } from '../types/action-menus.types';\nimport { FileAction, FileActionMap } from '../types/action.types';\nimport { ContextMenuConfig } from '../types/context-menu.types';\nimport { FileViewConfig } from '../types/file-view.types';\nimport { FileArray, FileIdTrueMap, FileMap } from '../types/file.types';\nimport { OptionMap } from '../types/options.types';\nimport { RootState } from '../types/redux.types';\nimport { SortOrder } from '../types/sort.types';\nimport { ThumbnailGenerator } from '../types/thumbnails.types';\nimport { FileHelper } from '../util/file-helper';\nimport { sanitizeInputArray } from './files-transforms';\nimport { initialRootState } from './state';\n\nconst reducers = {\n    setExternalFileActionHandler(\n        state: RootState,\n        action: PayloadAction<Nilable<GenericFileActionHandler<FileAction>>>\n    ) {\n        state.externalFileActionHandler = action.payload ?? null;\n    },\n    setRawFileActions(state: RootState, action: PayloadAction<FileAction[] | any>) {\n        state.rawFileActions = action.payload;\n    },\n    setFileActionsErrorMessages(state: RootState, action: PayloadAction<string[]>) {\n        state.fileActionsErrorMessages = action.payload;\n    },\n    setFileActions(state: RootState, action: PayloadAction<FileAction[]>) {\n        const fileActionMap: FileActionMap = {};\n        action.payload.map(a => (fileActionMap[a.id] = a));\n        const fileIds = action.payload.map(a => a.id);\n\n        state.fileActionMap = fileActionMap as FileMap;\n        state.fileActionIds = fileIds;\n    },\n    updateFileActionMenuItems(state: RootState, action: PayloadAction<[FileActionMenuItem[], FileActionMenuItem[]]>) {\n        [state.toolbarItems, state.contextMenuItems] = action.payload;\n    },\n    setRawFolderChain(state: RootState, action: PayloadAction<FileArray | any>) {\n        const rawFolderChain = action.payload;\n        const { sanitizedArray: folderChain, errorMessages } = sanitizeInputArray('folderChain', rawFolderChain);\n        state.rawFolderChain = rawFolderChain;\n        state.folderChain = folderChain;\n        state.folderChainErrorMessages = errorMessages;\n    },\n    setRawFiles(state: RootState, action: PayloadAction<FileArray | any>) {\n        const rawFiles = action.payload;\n        const { sanitizedArray: files, errorMessages } = sanitizeInputArray('files', rawFiles);\n        state.rawFiles = rawFiles;\n        state.filesErrorMessages = errorMessages;\n\n        const fileMap: FileMap = {};\n        files.forEach(f => {\n            if (f) fileMap[f.id] = f;\n        });\n        const fileIds = files.map(f => (f ? f.id : null));\n        const cleanFileIds = fileIds.filter(f => !!f) as string[];\n\n        state.fileMap = fileMap;\n        state.fileIds = fileIds;\n        state.cleanFileIds = cleanFileIds;\n\n        // Cleanup selection\n        for (const selectedFileId of Object.keys(state.selectionMap)) {\n            if (!fileMap[selectedFileId]) {\n                delete state.selectionMap[selectedFileId];\n            }\n        }\n    },\n    setSortedFileIds(state: RootState, action: PayloadAction<Nullable<string>[]>) {\n        state.sortedFileIds = action.payload;\n    },\n    setHiddenFileIds(state: RootState, action: PayloadAction<FileIdTrueMap>) {\n        state.hiddenFileIdMap = action.payload;\n\n        // Cleanup selection\n        for (const selectedFileId of Object.keys(state.selectionMap)) {\n            if (state.hiddenFileIdMap[selectedFileId]) {\n                delete state.selectionMap[selectedFileId];\n            }\n        }\n    },\n    setFocusSearchInput(state: RootState, action: PayloadAction<Nullable<() => void>>) {\n        state.focusSearchInput = action.payload;\n    },\n    setSearchString(state: RootState, action: PayloadAction<string>) {\n        state.searchString = action.payload;\n    },\n    selectAllFiles(state: RootState) {\n        state.fileIds\n            .filter(id => id && FileHelper.isSelectable(state.fileMap[id]))\n            .map(id => (id ? (state.selectionMap[id] = true) : null));\n    },\n    selectFiles(state: RootState, action: PayloadAction<{ fileIds: string[]; reset: boolean }>) {\n        if (state.disableSelection) return;\n        if (action.payload.reset) state.selectionMap = {};\n        action.payload.fileIds\n            .filter(id => id && FileHelper.isSelectable(state.fileMap[id]))\n            .map(id => (state.selectionMap[id] = true));\n    },\n    toggleSelection(state: RootState, action: PayloadAction<{ fileId: string; exclusive: boolean }>) {\n        if (state.disableSelection) return;\n        const oldValue = !!state.selectionMap[action.payload.fileId];\n        if (action.payload.exclusive) state.selectionMap = {};\n        if (oldValue) delete state.selectionMap[action.payload.fileId];\n        else if (FileHelper.isSelectable(state.fileMap[action.payload.fileId])) {\n            state.selectionMap[action.payload.fileId] = true;\n        }\n    },\n    clearSelection(state: RootState) {\n        if (state.disableSelection) return;\n        if (Object.keys(state.selectionMap).length !== 0) state.selectionMap = {};\n    },\n    setSelectionDisabled(state: RootState, action: PayloadAction<boolean>) {\n        state.disableSelection = action.payload;\n        if (Object.keys(state.selectionMap).length !== 0) state.selectionMap = {};\n    },\n    setFileViewConfig(state: RootState, action: PayloadAction<FileViewConfig>) {\n        state.fileViewConfig = action.payload;\n    },\n    setSort(state: RootState, action: PayloadAction<{ actionId: string; order: SortOrder }>) {\n        state.sortActionId = action.payload.actionId;\n        state.sortOrder = action.payload.order;\n    },\n    setOptionDefaults(state: RootState, action: PayloadAction<OptionMap>) {\n        for (const optionId of Object.keys(action.payload)) {\n            if (optionId in state.optionMap) continue;\n            state.optionMap[optionId] = action.payload[optionId];\n        }\n    },\n    toggleOption(state: RootState, action: PayloadAction<string>) {\n        state.optionMap[action.payload] = !state.optionMap[action.payload];\n    },\n    setThumbnailGenerator(state: RootState, action: PayloadAction<Nullable<ThumbnailGenerator>>) {\n        state.thumbnailGenerator = action.payload;\n    },\n    setDoubleClickDelay(state: RootState, action: PayloadAction<number>) {\n        state.doubleClickDelay = action.payload;\n    },\n    setDisableDragAndDrop(state: RootState, action: PayloadAction<boolean>) {\n        state.disableDragAndDrop = action.payload;\n    },\n    setClearSelectionOnOutsideClick(state: RootState, action: PayloadAction<boolean>) {\n        state.clearSelectionOnOutsideClick = action.payload;\n    },\n    setLastClickIndex(state: RootState, action: PayloadAction<Nullable<{ index: number; fileId: string }>>) {\n        state.lastClick = action.payload;\n    },\n    setContextMenuMounted(state: RootState, action: PayloadAction<boolean>) {\n        state.contextMenuMounted = action.payload;\n    },\n    showContextMenu(state: RootState, action: PayloadAction<ContextMenuConfig>) {\n        state.contextMenuConfig = action.payload;\n    },\n    hideContextMenu(state: RootState) {\n        if (!state.contextMenuConfig) return;\n        state.contextMenuConfig = null;\n    },\n};\n\nexport const { actions: reduxActions, reducer: rootReducer } = createSlice({\n    name: 'root',\n    initialState: initialRootState,\n    reducers,\n});\n","import { useEffect } from 'react';\nimport watch from 'redux-watch';\n\nimport { Store } from '@reduxjs/toolkit';\n\nimport { ChonkyActions } from '../action-definitions';\nimport { RootState } from '../types/redux.types';\nimport { FileSelection } from '../types/selection.types';\nimport { selectSelectedFileIds, selectSelectionMap } from './selectors';\nimport { thunkRequestFileAction } from './thunks/dispatchers.thunks';\n\nexport const useStoreWatchers = (store: Store<RootState>) => {\n    useEffect(() => {\n        const selectionWatcher = watch(() => selectSelectionMap(store.getState()));\n        const onSelectionChange = (\n            newSelection: FileSelection,\n            oldSelection: FileSelection\n        ) => {\n            // We don't check for deep equality here as we expect the\n            // reducers to prevent all unnecessary updates.\n            if (newSelection === oldSelection) return;\n\n            // Notify users the selection has changed.\n            const selectedFilesIds = selectSelectedFileIds(store.getState());\n            const selection = new Set<string>(selectedFilesIds);\n            store.dispatch(\n                thunkRequestFileAction(ChonkyActions.ChangeSelection, {\n                    selection,\n                }) as any\n            );\n        };\n\n        const unsubscribeCallbacks = [\n            store.subscribe(selectionWatcher(onSelectionChange)),\n        ];\n        return () => {\n            for (const unsubscribe of unsubscribeCallbacks) unsubscribe();\n        };\n    }, [store]);\n};\n","import { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { configureStore } from '@reduxjs/toolkit';\n\nimport { RootState } from '../types/redux.types';\nimport { useStaticValue } from '../util/hooks-helpers';\nimport { rootReducer } from './reducers';\nimport { initialRootState } from './state';\nimport { useStoreWatchers } from './watchers';\n\nexport const useChonkyStore = (chonkyInstanceId: string) => {\n    const store = useStaticValue(() => {\n        const preloadedState: RootState = {\n            ...initialRootState,\n            instanceId: chonkyInstanceId,\n        };\n\n        return configureStore({\n            preloadedState: preloadedState as any,\n            reducer: rootReducer,\n            middleware: getDefaultMiddleware =>\n                getDefaultMiddleware({\n                    serializableCheck: false,\n                }),\n            devTools: { name: `chonky_${chonkyInstanceId}` },\n        });\n    });\n    useStoreWatchers(store);\n    return store;\n};\n\n/**\n * Hook that can be used with parametrized selectors.\n */\nexport const useParamSelector = <Args extends Array<any>, Value>(\n    parametrizedSelector: (...args: Args) => (state: RootState) => Value,\n    ...selectorParams: Args\n) => {\n    const selector = useCallback(\n        (state: RootState) => parametrizedSelector(...selectorParams)(state),\n        // eslint-disable-next-line\n        [parametrizedSelector, ...selectorParams]\n    );\n    return useSelector(selector);\n};\n\n/**\n * DTE - DispatchThunkEffect. This method is used to decrease code duplication in\n * main Chonky method.\n */\nexport const useDTE = <Args extends Array<any>>(actionCreator: (...args: Args) => any, ...selectorParams: Args) => {\n    const dispatch = useDispatch();\n    useEffect(\n        () => {\n            dispatch(actionCreator(...selectorParams));\n        },\n        // eslint-disable-next-line\n        [dispatch, actionCreator, ...selectorParams]\n    );\n};\n\nexport const usePropReduxUpdate = <Payload extends any>(actionCreator: (payload: Payload) => any, payload: Payload) => {\n    const dispatch = useDispatch();\n    useEffect(() => dispatch(actionCreator(payload)), [dispatch, actionCreator, payload]);\n};\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React from 'react';\n\nimport { ChonkyIconProps } from '../../types/icons.types';\n\nexport const ChonkyIconPlaceholder: React.FC<ChonkyIconProps> = () => {\n    // This component should not be rendered unless the user has misconfigured Chonky\n    const title =\n        'No icon component found. Please follow Chonky installation instructions to ' +\n        'provide a pre-made icon component (or a custom icon).';\n    return <span title={title}>⚠️</span>;\n};\n","import { ChonkyActions } from '../action-definitions/index';\nimport { ChonkyIconPlaceholder } from '../components/internal/ChonkyIconPlaceholder';\nimport { FileBrowserProps } from '../types/file-browser.types';\n\nexport type ChonkyConfig = Pick<\n    FileBrowserProps,\n    | 'fileActions'\n    | 'onFileAction'\n    | 'thumbnailGenerator'\n    | 'doubleClickDelay'\n    | 'disableSelection'\n    | 'disableDefaultFileActions'\n    | 'disableDragAndDrop'\n    | 'disableDragAndDropProvider'\n    | 'defaultSortActionId'\n    | 'defaultFileViewActionId'\n    | 'clearSelectionOnOutsideClick'\n    | 'iconComponent'\n    | 'darkMode'\n    | 'i18n'\n>;\n\nexport const defaultConfig: ChonkyConfig = {\n    fileActions: null,\n    onFileAction: null,\n    thumbnailGenerator: null,\n    doubleClickDelay: 300,\n    disableSelection: false,\n    disableDefaultFileActions: false,\n    disableDragAndDrop: false,\n    disableDragAndDropProvider: false,\n    defaultSortActionId: ChonkyActions.SortFilesByName.id,\n    defaultFileViewActionId: ChonkyActions.EnableGridView.id,\n    clearSelectionOnOutsideClick: true,\n    iconComponent: ChonkyIconPlaceholder,\n    darkMode: false,\n    i18n: {},\n};\n\nexport const setChonkyDefaults = (config: Partial<ChonkyConfig>) => {\n    for (const key of Object.keys(defaultConfig)) {\n        if (key in config) {\n            defaultConfig[key as keyof ChonkyConfig] = config[\n                key as keyof ChonkyConfig\n            ] as any;\n        }\n    }\n};\n","import filesize from 'filesize';\nimport { createContext, useContext, useMemo } from 'react';\nimport { IntlShape, useIntl } from 'react-intl';\nimport { Nullable, Undefinable } from 'tsdef';\n\nimport { FileAction } from '../types/action.types';\nimport { FileData } from '../types/file.types';\nimport { ChonkyFormatters } from '../types/i18n.types';\nimport { FileHelper } from './file-helper';\n\nexport enum I18nNamespace {\n    Toolbar = 'toolbar',\n    FileList = 'fileList',\n    FileEntry = 'fileEntry',\n    FileContextMenu = 'contextMenu',\n\n    FileActions = 'actions',\n    FileActionGroups = 'actionGroups',\n}\n\nexport const getI18nId = (namespace: I18nNamespace, stringId: string): string =>\n    `chonky.${namespace}.${stringId}`;\n\nexport const getActionI18nId = (actionId: string, stringId: string): string =>\n    `chonky.${I18nNamespace.FileActions}.${actionId}.${stringId}`;\n\nexport const useLocalizedFileActionGroup = (groupName: string) => {\n    const intl = useIntl();\n    return useMemo(() => {\n        return intl.formatMessage({\n            id: getI18nId(I18nNamespace.FileActionGroups, groupName),\n            defaultMessage: groupName,\n        });\n    }, [groupName, intl]);\n};\n\nexport const useLocalizedFileActionStrings = (action: Nullable<FileAction>) => {\n    const intl = useIntl();\n    return useMemo(() => {\n        if (!action) {\n            return {\n                buttonName: '',\n                buttonTooltip: undefined,\n            };\n        }\n\n        const buttonName = intl.formatMessage({\n            id: getActionI18nId(action.id, 'button.name'),\n            defaultMessage: action.button?.name,\n        });\n\n        let buttonTooltip: Undefinable<string> = undefined;\n        if (action.button?.tooltip) {\n            // We only translate the tooltip if the original action has a tooltip.\n            buttonTooltip = intl.formatMessage({\n                id: getActionI18nId(action.id, 'button.tooltip'),\n                defaultMessage: action.button?.tooltip,\n            });\n        }\n\n        return {\n            buttonName,\n            buttonTooltip,\n        };\n    }, [action, intl]);\n};\n\nexport const useLocalizedFileEntryStrings = (file: Nullable<FileData>) => {\n    const intl = useIntl();\n    const formatters = useContext(ChonkyFormattersContext);\n    return useMemo(() => {\n        return {\n            fileModDateString: formatters.formatFileModDate(intl, file),\n            fileSizeString: formatters.formatFileSize(intl, file),\n        };\n    }, [file, formatters, intl]);\n};\n\nexport const defaultFormatters: ChonkyFormatters = {\n    formatFileModDate: (\n        intl: IntlShape,\n        file: Nullable<FileData>\n    ): Nullable<string> => {\n        const safeModDate = FileHelper.getModDate(file);\n        if (safeModDate) {\n            return intl.formatDate(safeModDate, {\n                dateStyle: 'medium',\n                timeStyle: 'short',\n            });\n        } else {\n            return null;\n        }\n    },\n    formatFileSize: (_intl: IntlShape, file: Nullable<FileData>): Nullable<string> => {\n        if (!file || typeof file.size !== 'number') return null;\n\n        const size = file.size;\n        const sizeData = filesize(size, { bits: false, output: 'object' }) as any;\n        if (sizeData.symbol === 'B') {\n            return `${Math.round(sizeData.value / 10) / 100.0} KB`;\n        } else if (sizeData.symbol === 'KB') {\n            return `${Math.round(sizeData.value)} ${sizeData.symbol}`;\n        }\n        return `${sizeData.value} ${sizeData.symbol}`;\n    },\n};\n\nexport const ChonkyFormattersContext = createContext(defaultFormatters);\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2019\n * @license MIT\n */\n\nimport { createContext, ElementType, useMemo } from 'react';\n\nimport ExactTrie from 'exact-trie';\nimport { Nullable } from 'tsdef';\n\nimport { ChonkyIconPlaceholder } from '../components/internal/ChonkyIconPlaceholder';\nimport { FileData } from '../types/file.types';\nimport { ChonkyIconName, ChonkyIconProps, FileIconData } from '../types/icons.types';\n\nexport const ChonkyIconContext = createContext<ElementType<ChonkyIconProps>>(ChonkyIconPlaceholder);\n\nexport const VideoExtensions: string[] = [\n    '3g2',\n    '3gp',\n    '3gpp',\n    'asf',\n    'asx',\n    'avi',\n    'dvb',\n    'f4v',\n    'fli',\n    'flv',\n    'fvt',\n    'h261',\n    'h263',\n    'h264',\n    'jpgm',\n    'jpgv',\n    'jpm',\n    'm1v',\n    'm2v',\n    'm4u',\n    'm4v',\n    'mj2',\n    'mjp2',\n    'mk3d',\n    'mks',\n    'mkv',\n    'mng',\n    'mov',\n    'movie',\n    'mp4',\n    'mp4v',\n    'mpe',\n    'mpeg',\n    'mpg',\n    'mpg4',\n    'mxu',\n    'ogv',\n    'pyv',\n    'qt',\n    'smv',\n    'ts',\n    'uvh',\n    'uvm',\n    'uvp',\n    'uvs',\n    'uvu',\n    'uvv',\n    'uvvh',\n    'uvvm',\n    'uvvp',\n    'uvvs',\n    'uvvu',\n    'uvvv',\n    'viv',\n    'vob',\n    'webm',\n    'wm',\n    'wmv',\n    'wmx',\n    'wvx',\n];\nexport const ImageExtensions: string[] = [\n    '3ds',\n    'apng',\n    'azv',\n    'bmp',\n    'bmp',\n    'btif',\n    'cgm',\n    'cmx',\n    'djv',\n    'djvu',\n    'drle',\n    'dwg',\n    'dxf',\n    'emf',\n    'exr',\n    'fbs',\n    'fh',\n    'fh4',\n    'fh5',\n    'fh7',\n    'fhc',\n    'fits',\n    'fpx',\n    'fst',\n    'g3',\n    'gif',\n    'heic',\n    'heics',\n    'heif',\n    'heifs',\n    'ico',\n    'ico',\n    'ief',\n    'jls',\n    'jng',\n    'jp2',\n    'jpe',\n    'jpeg',\n    'jpf',\n    'jpg',\n    'jpg2',\n    'jpm',\n    'jpx',\n    'jxr',\n    'ktx',\n    'mdi',\n    'mmr',\n    'npx',\n    'pbm',\n    'pct',\n    'pcx',\n    'pcx',\n    'pgm',\n    'pic',\n    'png',\n    'pnm',\n    'ppm',\n    'psd',\n    'pti',\n    'ras',\n    'rgb',\n    'rlc',\n    'sgi',\n    'sid',\n    'sub',\n    'svg',\n    'svgz',\n    't38',\n    'tap',\n    'tfx',\n    'tga',\n    'tif',\n    'tiff',\n    'uvg',\n    'uvi',\n    'uvvg',\n    'uvvi',\n    'vtf',\n    'wbmp',\n    'wdp',\n    'webp',\n    'wmf',\n    'xbm',\n    'xif',\n    'xpm',\n    'xwd',\n];\nexport const AudioExtensions: string[] = [\n    '3gpp',\n    'aac',\n    'adp',\n    'aif',\n    'aifc',\n    'aiff',\n    'au',\n    'caf',\n    'dra',\n    'dts',\n    'dtshd',\n    'ecelp4800',\n    'ecelp7470',\n    'ecelp9600',\n    'eol',\n    'flac',\n    'kar',\n    'lvp',\n    'm2a',\n    'm3a',\n    'm3u',\n    'm4a',\n    'm4a',\n    'mid',\n    'midi',\n    'mka',\n    'mp2',\n    'mp2a',\n    'mp3',\n    'mp3',\n    'mp4a',\n    'mpga',\n    'oga',\n    'ogg',\n    'pya',\n    'ra',\n    'ra',\n    'ram',\n    'rip',\n    'rmi',\n    'rmp',\n    's3m',\n    'sil',\n    'snd',\n    'spx',\n    'uva',\n    'uvva',\n    'wav',\n    'wav',\n    'wav',\n    'wax',\n    'weba',\n    'wma',\n    'xm',\n];\nexport const ColorsLight: string[] = [\n    '#bbbbbb',\n    '#d65c5c',\n    '#d6665c',\n    '#d6705c',\n    '#d67a5c',\n    '#d6855c',\n    '#d68f5c',\n    '#d6995c',\n    '#d6a35c',\n    '#d6ad5c',\n    '#d6b85c',\n    '#d6c25c',\n    '#d6cc5c',\n    '#d6d65c',\n    '#ccd65c',\n    '#c2d65c',\n    '#b8d65c',\n    '#add65c',\n    '#a3d65c',\n    '#99d65c',\n    '#8fd65c',\n    '#85d65c',\n    '#7ad65c',\n    '#70d65c',\n    '#66d65c',\n    '#5cd65c',\n    '#5cd666',\n    '#5cd670',\n    '#5cd67a',\n    '#5cd685',\n    '#5cd68f',\n    '#5cd699',\n    '#5cd6a3',\n    '#5cd6ad',\n    '#5cd6b8',\n    '#5cd6c2',\n    '#5cd6cc',\n    '#5cd6d6',\n    '#5cccd6',\n    '#5cc2d6',\n    '#5cb8d6',\n    '#5cadd6',\n    '#5ca3d6',\n    '#5c99d6',\n    '#5c8fd6',\n    '#5c85d6',\n    '#5c7ad6',\n    '#5c70d6',\n    '#5c66d6',\n    '#5c5cd6',\n    '#665cd6',\n    '#705cd6',\n    '#7a5cd6',\n    '#855cd6',\n    '#8f5cd6',\n    '#995cd6',\n    '#a35cd6',\n    '#ad5cd6',\n    '#b85cd6',\n    '#c25cd6',\n    '#cc5cd6',\n    '#d65cd6',\n    '#d65ccc',\n    '#d65cc2',\n    '#d65cb8',\n    '#d65cad',\n    '#d65ca3',\n    '#d65c99',\n    '#d65c8f',\n    '#d65c85',\n    '#d65c7a',\n    '#d65c70',\n    '#d65c66',\n];\nexport const ColorsDark: string[] = [\n    '#777',\n    '#8f3d3d',\n    '#8f443d',\n    '#8f4b3d',\n    '#8f523d',\n    '#8f583d',\n    '#8f5f3d',\n    '#8f663d',\n    '#8f6d3d',\n    '#8f743d',\n    '#8f7a3d',\n    '#8f813d',\n    '#8f883d',\n    '#8f8f3d',\n    '#888f3d',\n    '#818f3d',\n    '#7a8f3d',\n    '#748f3d',\n    '#6d8f3d',\n    '#668f3d',\n    '#5f8f3d',\n    '#588f3d',\n    '#528f3d',\n    '#4b8f3d',\n    '#448f3d',\n    '#3d8f3d',\n    '#3d8f44',\n    '#3d8f4b',\n    '#3d8f52',\n    '#3d8f58',\n    '#3d8f5f',\n    '#3d8f66',\n    '#3d8f6d',\n    '#3d8f74',\n    '#3d8f7a',\n    '#3d8f81',\n    '#3d8f88',\n    '#3d8f8f',\n    '#3d888f',\n    '#3d818f',\n    '#3d7a8f',\n    '#3d748f',\n    '#3d6d8f',\n    '#3d668f',\n    '#3d5f8f',\n    '#3d588f',\n    '#3d528f',\n    '#3d4b8f',\n    '#3d448f',\n    '#3d3d8f',\n    '#443d8f',\n    '#4b3d8f',\n    '#523d8f',\n    '#583d8f',\n    '#5f3d8f',\n    '#663d8f',\n    '#6d3d8f',\n    '#743d8f',\n    '#7a3d8f',\n    '#813d8f',\n    '#883d8f',\n    '#8f3d8f',\n    '#8f3d88',\n    '#8f3d81',\n    '#8f3d7a',\n    '#8f3d74',\n    '#8f3d6d',\n    '#8f3d66',\n    '#8f3d5f',\n    '#8f3d58',\n    '#8f3d52',\n    '#8f3d4b',\n    '#8f3d44',\n];\n\nconst getIconTrie = () => {\n    let colourIndex = 0;\n    const step = 5;\n\n    const IconsToExtensions = [\n        // Generic file types\n        [ChonkyIconName.license, ['license']],\n        [ChonkyIconName.config, ['sfk', 'ini', 'yml', 'toml', 'iml']],\n        [ChonkyIconName.model, ['3ds', 'obj', 'ply', 'fbx']],\n        [ChonkyIconName.database, ['csv', 'json', 'sql', 'sqlite', 'sqlite3', 'npy', 'npz', 'rec', 'idx', 'hdf5']],\n        [ChonkyIconName.text, ['txt', 'md', 'mdx']],\n        [ChonkyIconName.archive, ['zip', 'rar', 'tar', 'tar.gz', '7z']],\n        [ChonkyIconName.image, ImageExtensions],\n        [ChonkyIconName.video, VideoExtensions],\n        [ChonkyIconName.code, ['html', 'php', 'css', 'sass', 'scss', 'less', 'cpp', 'h', 'hpp', 'c', 'xml']],\n        [ChonkyIconName.info, ['bib', 'readme', 'nfo']],\n        [ChonkyIconName.key, ['pem', 'pub']],\n        [ChonkyIconName.lock, ['lock', 'lock.json', 'shrinkwrap.json']],\n        [ChonkyIconName.music, AudioExtensions],\n        [ChonkyIconName.terminal, ['run', 'sh']],\n        [ChonkyIconName.trash, ['.Trashes']],\n        [ChonkyIconName.users, ['authors', 'contributors']],\n\n        // OS file types\n        [ChonkyIconName.linux, ['AppImage']],\n        [ChonkyIconName.ubuntu, ['deb']],\n        [ChonkyIconName.windows, ['exe']],\n\n        // Programming language file types\n        [ChonkyIconName.rust, ['rs', 'rlib']],\n        [ChonkyIconName.python, ['py', 'ipynb']],\n        [ChonkyIconName.nodejs, ['js', 'jsx', 'ts', 'tsx', 'd.ts']],\n        [ChonkyIconName.php, ['php']],\n\n        // Development tools file types\n        [ChonkyIconName.git, ['.gitignore']],\n\n        // Brands file types\n        [ChonkyIconName.adobe, ['psd']],\n\n        // Other program file types\n        [ChonkyIconName.pdf, ['pdf']],\n        [ChonkyIconName.excel, ['xls', 'xlsx']],\n        [ChonkyIconName.word, ['doc', 'docx', 'odt']],\n        [ChonkyIconName.flash, ['swf']],\n    ] as const;\n\n    const exactTrie = new ExactTrie({ ignoreCase: true });\n    for (const pair of IconsToExtensions) {\n        const [icon, extensions] = pair;\n\n        for (let i = 0; i < extensions.length; ++i) {\n            colourIndex += step;\n            const colorCode = (colourIndex % (ColorsLight.length - 1)) + 1;\n            const iconData: FileIconData = {\n                icon,\n                colorCode,\n            };\n            exactTrie.put(extensions[i], iconData, true);\n        }\n    }\n\n    return exactTrie;\n};\n\nconst iconTrie = getIconTrie();\n\nexport const useIconData = (file: Nullable<FileData>): FileIconData => {\n    return useMemo(() => {\n        if (!file) return { icon: ChonkyIconName.loading, colorCode: 0 };\n        if (file.isDir === true) return { icon: ChonkyIconName.folder, colorCode: 0 };\n\n        const match = iconTrie.getWithCheckpoints(file.name, '.', true);\n        return match ? match : { icon: ChonkyIconName.file, colorCode: 32 };\n    }, [file]);\n};\n","import { Theme as MuiTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport classnames from 'classnames';\nimport { createUseStyles } from 'react-jss';\nimport { DeepPartial } from 'tsdef';\n\nexport const lightTheme = {\n    colors: {\n        debugRed: '#fabdbd',\n        debugBlue: '#bdd8fa',\n        debugGreen: '#d2fabd',\n        debugPurple: '#d2bdfa',\n        debugYellow: '#fae9bd',\n\n        textActive: '#09f',\n    },\n\n    fontSizes: {\n        rootPrimary: 15,\n    },\n\n    margins: {\n        rootLayoutMargin: 8,\n    },\n\n    toolbar: {\n        size: 30,\n        lineHeight: '30px', // `px` suffix is required for `line-height` fields to work\n        fontSize: 15,\n        buttonRadius: 4,\n    },\n\n    dnd: {\n        canDropColor: 'green',\n        cannotDropColor: 'red',\n        canDropMask: 'rgba(180, 235, 180, 0.75)',\n        cannotDropMask: 'rgba(235, 180, 180, 0.75)',\n        fileListCanDropMaskOne: 'rgba(180, 235, 180, 0.1)',\n        fileListCanDropMaskTwo: 'rgba(180, 235, 180, 0.2)',\n        fileListCannotDropMaskOne: 'rgba(235, 180, 180, 0.1)',\n        fileListCannotDropMaskTwo: 'rgba(235, 180, 180, 0.2)',\n    },\n\n    dragLayer: {\n        border: 'solid 2px #09f',\n        padding: '7px 10px',\n        borderRadius: 2,\n    },\n\n    fileList: {\n        desktopGridGutter: 8,\n        mobileGridGutter: 5,\n    },\n\n    gridFileEntry: {\n        childrenCountSize: '1.6em',\n        iconColorFocused: '#000',\n        iconSize: '2.4em',\n        iconColor: '#fff',\n        borderRadius: 5,\n        fontSize: 14,\n\n        fileColorTint: 'rgba(255, 255, 255, 0.4)',\n        folderBackColorTint: 'rgba(255, 255, 255, 0.1)',\n        folderFrontColorTint: 'rgba(255, 255, 255, 0.4)',\n    },\n\n    listFileEntry: {\n        propertyFontSize: 14,\n        iconFontSize: '1.1em',\n        iconBorderRadius: 5,\n        fontSize: 14,\n    },\n};\n\nexport type ChonkyTheme = typeof lightTheme;\n\nexport const darkThemeOverride: DeepPartial<ChonkyTheme> = {\n    gridFileEntry: {\n        fileColorTint: 'rgba(50, 50, 50, 0.4)',\n        folderBackColorTint: 'rgba(50, 50, 50, 0.4)',\n        folderFrontColorTint: 'rgba(50, 50, 50, 0.15)',\n    },\n};\n\nexport const mobileThemeOverride: DeepPartial<ChonkyTheme> = {\n    fontSizes: {\n        rootPrimary: 13,\n    },\n    margins: {\n        rootLayoutMargin: 4,\n    },\n    toolbar: {\n        size: 28,\n        lineHeight: '28px',\n        fontSize: 13,\n    },\n    gridFileEntry: {\n        fontSize: 13,\n    },\n    listFileEntry: {\n        propertyFontSize: 12,\n        iconFontSize: '1em',\n        fontSize: 13,\n    },\n};\n\nexport const useIsMobileBreakpoint = () => {\n    return useMediaQuery('(max-width:480px)');\n};\n\nexport const getStripeGradient = (colorOne: string, colorTwo: string) =>\n    'repeating-linear-gradient(' +\n    '45deg,' +\n    `${colorOne},` +\n    `${colorOne} 10px,` +\n    `${colorTwo} 0,` +\n    `${colorTwo} 20px` +\n    ')';\n\nexport const makeLocalChonkyStyles = <C extends string = string>(\n    styles: (theme: ChonkyTheme & MuiTheme) => any\n    // @ts-ignore\n): any => createUseStyles<ChonkyTheme, C>(styles);\n\nexport const makeGlobalChonkyStyles = <C extends string = string>(\n    makeStyles: (theme: ChonkyTheme & MuiTheme) => any\n) => {\n    const selectorMapping = {};\n    const makeGlobalStyles = (theme: ChonkyTheme) => {\n        const localStyles = makeStyles(theme as any);\n        const globalStyles = {};\n        const localSelectors = Object.keys(localStyles);\n        localSelectors.map(localSelector => {\n            const globalSelector = `chonky-${localSelector}`;\n            const jssSelector = `@global .${globalSelector}`;\n            // @ts-ignore\n            globalStyles[jssSelector] = localStyles[localSelector];\n            // @ts-ignore\n            selectorMapping[localSelector] = globalSelector;\n        });\n        return globalStyles;\n    };\n\n    // @ts-ignore\n    const useStyles = createUseStyles<ChonkyTheme, C>(makeGlobalStyles as any);\n    return (...args: any[]): any => {\n        const styles = useStyles(...args);\n        const classes = {};\n        Object.keys(selectorMapping).map(localSelector => {\n            // @ts-ignore\n            classes[localSelector] = selectorMapping[localSelector];\n        });\n        return { ...classes, ...styles };\n    };\n};\n\nexport const important = <T>(value: T) => [value, '!important'];\n\nexport const c = classnames;\n","import React, { useImperativeHandle } from 'react';\nimport { useDispatch, useStore } from 'react-redux';\n\nimport { reduxActions } from '../redux/reducers';\nimport { selectSelectionMap } from '../redux/selectors';\nimport { thunkRequestFileAction } from '../redux/thunks/dispatchers.thunks';\nimport { FileAction } from '../types/action.types';\nimport { FileBrowserHandle } from '../types/file-browser.types';\nimport { RootState } from '../types/redux.types';\n\nexport const useFileBrowserHandle = (ref: React.Ref<FileBrowserHandle>) => {\n    const store = useStore<RootState>();\n    const dispatch = useDispatch();\n\n    useImperativeHandle(\n        ref,\n        () => ({\n            getFileSelection(): Set<string> {\n                const selectionMap = selectSelectionMap(store.getState());\n                const selectionSet = new Set(Object.keys(selectionMap));\n                return selectionSet;\n            },\n            setFileSelection(selection, reset = true): void {\n                const fileIds = Array.from(selection);\n                dispatch(reduxActions.selectFiles({ fileIds, reset }));\n            },\n            requestFileAction<Action extends FileAction>(\n                action: Action,\n                payload: Action['__payloadType']\n            ): Promise<void> {\n                return Promise.resolve(\n                    dispatch(thunkRequestFileAction(action, payload))\n                ).then();\n            },\n        }),\n        [store, dispatch]\n    );\n};\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React from 'react';\n\nimport { reduxActions } from '../../redux/reducers';\nimport { initialRootState } from '../../redux/state';\nimport { useDTE, usePropReduxUpdate } from '../../redux/store';\nimport {\n    thunkActivateSortAction, thunkUpdateDefaultFileViewActionId, thunkUpdateRawFileActions\n} from '../../redux/thunks/file-actions.thunks';\nimport { FileBrowserHandle, FileBrowserProps } from '../../types/file-browser.types';\nimport { defaultConfig } from '../../util/default-config';\nimport { useFileBrowserHandle } from '../../util/file-browser-handle';\nimport { getValueOrFallback } from '../../util/helpers';\n\nexport const ChonkyBusinessLogicInner = React.memo(\n    React.forwardRef<FileBrowserHandle, FileBrowserProps>((props, ref) => {\n        // ==== Update Redux state\n        usePropReduxUpdate(reduxActions.setRawFiles, props.files ?? initialRootState.rawFiles);\n        usePropReduxUpdate(reduxActions.setRawFolderChain, props.folderChain);\n        useDTE(\n            thunkUpdateRawFileActions,\n            getValueOrFallback(props.fileActions, defaultConfig.fileActions),\n            getValueOrFallback(props.disableDefaultFileActions, defaultConfig.disableDefaultFileActions)\n        );\n        useDTE(\n            reduxActions.setExternalFileActionHandler,\n            getValueOrFallback(props.onFileAction, defaultConfig.onFileAction) as any\n        );\n        useDTE(\n            reduxActions.setSelectionDisabled,\n            getValueOrFallback(props.disableSelection, defaultConfig.disableSelection, 'boolean')\n        );\n        useDTE(\n            thunkActivateSortAction,\n            getValueOrFallback(props.defaultSortActionId, defaultConfig.defaultSortActionId)\n        );\n        useDTE(\n            thunkUpdateDefaultFileViewActionId,\n            getValueOrFallback(props.defaultFileViewActionId, defaultConfig.defaultFileViewActionId, 'string')\n        );\n\n        useDTE(\n            reduxActions.setThumbnailGenerator,\n            getValueOrFallback(props.thumbnailGenerator, defaultConfig.thumbnailGenerator)\n        );\n        useDTE(\n            reduxActions.setDoubleClickDelay,\n            getValueOrFallback(props.doubleClickDelay, defaultConfig.doubleClickDelay, 'number')\n        );\n        useDTE(\n            reduxActions.setDisableDragAndDrop,\n            getValueOrFallback(props.disableDragAndDrop, defaultConfig.disableDragAndDrop, 'boolean')\n        );\n        useDTE(\n            reduxActions.setClearSelectionOnOutsideClick,\n            getValueOrFallback(\n                props.clearSelectionOnOutsideClick,\n                defaultConfig.clearSelectionOnOutsideClick,\n                'boolean'\n            )\n        );\n\n        // ==== Setup the imperative handle for external use\n        useFileBrowserHandle(ref);\n\n        return null;\n    })\n);\nChonkyBusinessLogicInner.displayName = 'ChonkyBusinessLogicInner';\n\nexport const ChonkyBusinessLogic = React.memo(ChonkyBusinessLogicInner);\nChonkyBusinessLogic.displayName = 'ChonkyBusinessLogic';\n","import { useCallback, useContext } from 'react';\nimport { DndContext, useDrag, useDrop } from 'react-dnd';\n\nexport const useDndContextAvailable = () => {\n    const dndContext = useContext(DndContext);\n    const { dragDropManager } = dndContext;\n    return !!dragDropManager;\n};\n\nexport const useDragIfAvailable: typeof useDrag = (...args) => {\n    // This is an ugly hack to make `useDrag` not throw if a `DndContext` is not available.\n    // See: https://github.com/react-dnd/react-dnd/issues/2212\n    const dndContextAvailable = useDndContextAvailable();\n    const mockHook = useCallback(() => [{} as any, () => null, () => null], []);\n    // @ts-ignore\n    const useHook: typeof useDrag = dndContextAvailable ? useDrag : mockHook;\n    return useHook(...args);\n};\n\nexport const useDropIfAvailable: typeof useDrop = (...args) => {\n    const dndContextAvailable = useDndContextAvailable();\n    const mockHook = useCallback(() => [{} as any, () => null], []);\n    // @ts-ignore\n    const useHook: typeof useDrop = dndContextAvailable ? useDrop : mockHook;\n    return useHook(...args);\n};\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Nullable } from 'tsdef';\n\nimport { ChonkyActions } from '../../action-definitions/index';\nimport { reduxActions } from '../../redux/reducers';\nimport { selectContextMenuMounted } from '../../redux/selectors';\nimport { thunkRequestFileAction } from '../../redux/thunks/dispatchers.thunks';\nimport { findElementAmongAncestors } from '../../util/helpers';\nimport { useInstanceVariable } from '../../util/hooks-helpers';\n\nexport const findClosestChonkyFileId = (\n    element: HTMLElement | any\n): Nullable<string> => {\n    const fileEntryWrapperDiv = findElementAmongAncestors(\n        element,\n        (element: any) =>\n            element.tagName &&\n            element.tagName.toLowerCase() === 'div' &&\n            element.dataset &&\n            element.dataset.chonkyFileId\n    );\n    return fileEntryWrapperDiv ? fileEntryWrapperDiv.dataset.chonkyFileId! : null;\n};\n\nexport const useContextMenuTrigger = () => {\n    const dispatch = useDispatch();\n    const contextMenuMountedRef = useInstanceVariable(\n        useSelector(selectContextMenuMounted)\n    );\n    return useCallback(\n        (event: React.MouseEvent<HTMLDivElement>) => {\n            // Use default browser context menu when Chonky context menu component\n            // is not mounted.\n            if (!contextMenuMountedRef.current) return;\n            // Users can use Alt+Right Click to bring up browser's default\n            // context menu instead of Chonky's context menu.\n            if (event.altKey) return;\n\n            event.preventDefault();\n\n            const triggerFileId = findClosestChonkyFileId(event.target);\n            dispatch(\n                thunkRequestFileAction(ChonkyActions.OpenFileContextMenu, {\n                    clientX: event.clientX,\n                    clientY: event.clientY,\n                    triggerFileId,\n                })\n            );\n        },\n        [contextMenuMountedRef, dispatch]\n    );\n};\n\nexport const useContextMenuDismisser = () => {\n    const dispatch = useDispatch();\n    return useCallback(() => dispatch(reduxActions.hideContextMenu()), [dispatch]);\n};\n","import { DragObjectWithType } from 'react-dnd';\nimport { Nilable } from 'tsdef';\n\nimport { StartDragNDropPayload } from './action-payloads.types';\nimport { FileData } from './file.types';\n\nexport interface ChonkyDndDropResult {\n    dropTarget: Nilable<FileData> | any;\n    dropEffect: 'move' | 'copy';\n}\n\nexport type ChonkyDndFileEntryItem = DragObjectWithType & {\n    payload: StartDragNDropPayload;\n};\nexport const ChonkyDndFileEntryType = 'dnd-chonky-file-entry';\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React from 'react';\nimport { useDragLayer } from 'react-dnd';\nimport { Nullable } from 'tsdef';\n\nimport { ChonkyDndFileEntryItem, ChonkyDndFileEntryType } from '../../types/dnd.types';\nimport { makeGlobalChonkyStyles } from '../../util/styles';\n\nexport interface DnDFileListDragLayerProps {}\n\nconst layerStyles: React.CSSProperties = {\n    position: 'fixed',\n    pointerEvents: 'none',\n    zIndex: 100,\n    left: 0,\n    top: 0,\n    width: '100%',\n    height: '100%',\n};\nconst getItemStyles = (\n    initialCursorOffset: Nullable<{ x: number; y: number }>,\n    initialFileOffset: Nullable<{ x: number; y: number }>,\n    currentFileOffset: Nullable<{ x: number; y: number }>\n) => {\n    if (!initialCursorOffset || !initialFileOffset || !currentFileOffset) {\n        return {\n            display: 'none',\n        };\n    }\n    const x = initialCursorOffset.x + (currentFileOffset.x - initialFileOffset.x);\n    const y = initialCursorOffset.y + (currentFileOffset.y - initialFileOffset.y);\n    const transform = `translate(${x}px, ${y}px)`;\n    return {\n        transform,\n        WebkitTransform: transform,\n    };\n};\n\nexport const DnDFileListDragLayer: React.FC<DnDFileListDragLayerProps> = () => {\n    const classes = useStyles();\n\n    const {\n        itemType,\n        item,\n        initialCursorOffset,\n        initialFileOffset,\n        currentFileOffset,\n        isDragging,\n    } = useDragLayer(monitor => ({\n        item: monitor.getItem() as ChonkyDndFileEntryItem,\n        itemType: monitor.getItemType(),\n        initialCursorOffset: monitor.getInitialClientOffset(),\n        initialFileOffset: monitor.getInitialSourceClientOffset(),\n        currentFileOffset: monitor.getSourceClientOffset(),\n        isDragging: monitor.isDragging(),\n    }));\n    if (!isDragging || itemType !== ChonkyDndFileEntryType || !item.payload) {\n        return null;\n    }\n\n    const selectionSize = item.payload.selectedFiles.length;\n    return (\n        <div style={layerStyles}>\n            <div\n                style={getItemStyles(\n                    initialCursorOffset,\n                    initialFileOffset,\n                    currentFileOffset\n                )}\n            >\n                <div className={classes.fileDragPreview}>\n                    <b>{item.payload.draggedFile.name}</b>\n                    {selectionSize > 1 && (\n                        <>\n                            {' and '}\n                            <strong>\n                                {selectionSize - 1} other file\n                                {selectionSize - 1 !== 1 ? 's' : ''}\n                            </strong>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst useStyles = makeGlobalChonkyStyles(theme => ({\n    fileDragPreview: {\n        boxShadow: `2px 2px 5px ${theme.palette.divider}`,\n        backgroundColor: theme.palette.background.default,\n        borderRadius: theme.dragLayer.borderRadius,\n        fontSize: theme.fontSizes.rootPrimary,\n        color: theme.palette.text.primary,\n        padding: theme.dragLayer.padding,\n        border: theme.dragLayer.border,\n        display: 'inline-block',\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport hotkeys from 'hotkeys-js';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { selectFileActionData } from '../../redux/selectors';\nimport { useParamSelector } from '../../redux/store';\nimport { thunkRequestFileAction } from '../../redux/thunks/dispatchers.thunks';\n\nexport interface HotkeyListenerProps {\n    fileActionId: string;\n}\n\nexport const HotkeyListener: React.FC<HotkeyListenerProps> = React.memo(props => {\n    const { fileActionId } = props;\n\n    const dispatch = useDispatch();\n    const fileAction = useParamSelector(selectFileActionData, fileActionId);\n\n    useEffect(() => {\n        if (!fileAction || !fileAction.hotkeys || fileAction.hotkeys.length === 0) {\n            return;\n        }\n\n        const hotkeysStr = fileAction.hotkeys.join(',');\n        const hotkeyCallback = (event: KeyboardEvent) => {\n            event.preventDefault();\n            dispatch(thunkRequestFileAction(fileAction, undefined));\n        };\n        hotkeys(hotkeysStr, hotkeyCallback);\n        return () => hotkeys.unbind(hotkeysStr, hotkeyCallback);\n    }, [dispatch, fileAction]);\n\n    return null;\n});\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport Box from '@material-ui/core/Box';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport React, { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { reduxActions } from '../../redux/reducers';\nimport {\n    selectClearSelectionOnOutsideClick,\n    selectFileActionIds,\n    selectIsDnDDisabled,\n} from '../../redux/selectors';\nimport { useDndContextAvailable } from '../../util/dnd-fallback';\nimport { elementIsInsideButton } from '../../util/helpers';\nimport { makeGlobalChonkyStyles } from '../../util/styles';\nimport { useContextMenuTrigger } from '../external/FileContextMenu-hooks';\nimport { DnDFileListDragLayer } from '../file-list/DnDFileListDragLayer';\nimport { HotkeyListener } from './HotkeyListener';\n\nexport interface ChonkyPresentationLayerProps {}\n\nexport const ChonkyPresentationLayer: React.FC<ChonkyPresentationLayerProps> = ({\n    children,\n}) => {\n    const dispatch = useDispatch();\n    const fileActionIds = useSelector(selectFileActionIds);\n    const dndDisabled = useSelector(selectIsDnDDisabled);\n    const clearSelectionOnOutsideClick = useSelector(\n        selectClearSelectionOnOutsideClick\n    );\n\n    // Deal with clicks outside of Chonky\n    const handleClickAway = useCallback(\n        (event: React.MouseEvent<Document>) => {\n            if (!clearSelectionOnOutsideClick || elementIsInsideButton(event.target)) {\n                // We only clear out the selection on outside click if the click target\n                // was not a button. We don't want to clear out the selection when a\n                // button is clicked because Chonky users might want to trigger some\n                // selection-related action on that button click.\n                return;\n            }\n            dispatch(reduxActions.clearSelection());\n        },\n        [dispatch, clearSelectionOnOutsideClick]\n    );\n\n    // Generate necessary components\n    const hotkeyListenerComponents = useMemo(\n        () =>\n            fileActionIds.map(actionId => (\n                <HotkeyListener\n                    key={`file-action-listener-${actionId}`}\n                    fileActionId={actionId}\n                />\n            )),\n        [fileActionIds]\n    );\n\n    const dndContextAvailable = useDndContextAvailable();\n    const showContextMenu = useContextMenuTrigger();\n\n    const classes = useStyles();\n    return (\n        <ClickAwayListener onClickAway={handleClickAway}>\n            <Box className={classes.chonkyRoot} onContextMenu={showContextMenu}>\n                {!dndDisabled && dndContextAvailable && <DnDFileListDragLayer />}\n                {hotkeyListenerComponents}\n                {children ? children : null}\n            </Box>\n        </ClickAwayListener>\n    );\n};\n\nconst useStyles = makeGlobalChonkyStyles(theme => ({\n    chonkyRoot: {\n        backgroundColor: theme.palette.background.paper,\n        border: `solid 1px ${theme.palette.divider}`,\n        padding: theme.margins.rootLayoutMargin,\n        fontSize: theme.fontSizes.rootPrimary,\n        color: theme.palette.text.primary,\n        touchAction: 'manipulation', // Disabling zoom on double tap\n        fontFamily: 'sans-serif',\n        flexDirection: 'column',\n        boxSizing: 'border-box',\n        textAlign: 'left',\n        borderRadius: 4,\n        display: 'flex',\n        height: '100%',\n\n        // Disabling select\n        webkitTouchCallout: 'none',\n        webkitUserSelect: 'none',\n        mozUserSelect: 'none',\n        msUserSelect: 'none',\n        userSelect: 'none',\n    },\n}));\n","import {\n    createMuiTheme,\n    ThemeProvider as MuiThemeProvider,\n} from '@material-ui/core/styles';\nimport merge from 'deepmerge';\nimport React, { ReactNode, useMemo } from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { IntlProvider } from 'react-intl';\nimport { ThemeProvider } from 'react-jss';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport shortid from 'shortid';\n\nimport { useChonkyStore } from '../../redux/store';\nimport { FileBrowserHandle, FileBrowserProps } from '../../types/file-browser.types';\nimport { defaultConfig } from '../../util/default-config';\nimport { getValueOrFallback } from '../../util/helpers';\nimport { useStaticValue } from '../../util/hooks-helpers';\nimport { ChonkyFormattersContext, defaultFormatters } from '../../util/i18n';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport {\n    darkThemeOverride,\n    lightTheme,\n    mobileThemeOverride,\n    useIsMobileBreakpoint,\n} from '../../util/styles';\nimport { ChonkyBusinessLogic } from '../internal/ChonkyBusinessLogic';\nimport { ChonkyIconPlaceholder } from '../internal/ChonkyIconPlaceholder';\nimport { ChonkyPresentationLayer } from '../internal/ChonkyPresentationLayer';\n\n// if (process.env.NODE_ENV === 'development') {\n//     const whyDidYouRender = require('@welldone-software/why-did-you-render');\n//     whyDidYouRender(React, {\n//         trackAllPureComponents: true,\n//     });\n// }\n\nexport const FileBrowser = React.forwardRef<\n    FileBrowserHandle,\n    FileBrowserProps & { children?: ReactNode }\n>((props, ref) => {\n    const { instanceId, iconComponent, children } = props;\n    const disableDragAndDrop = getValueOrFallback(\n        props.disableDragAndDrop,\n        defaultConfig.disableDragAndDrop,\n        'boolean'\n    );\n    const disableDragAndDropProvider = getValueOrFallback(\n        props.disableDragAndDropProvider,\n        defaultConfig.disableDragAndDropProvider,\n        'boolean'\n    );\n    const darkMode = getValueOrFallback(\n        props.darkMode,\n        defaultConfig.darkMode,\n        'boolean'\n    );\n    const i18n = getValueOrFallback(props.i18n, defaultConfig.i18n);\n    const formatters = useMemo(() => ({ ...defaultFormatters, ...i18n?.formatters }), [\n        i18n,\n    ]);\n\n    const chonkyInstanceId = useStaticValue(() => instanceId ?? shortid.generate());\n    const store = useChonkyStore(chonkyInstanceId);\n\n    const isMobileBreakpoint = useIsMobileBreakpoint();\n    const theme = useMemo(() => {\n        const muiTheme = createMuiTheme({\n            palette: { type: darkMode ? 'dark' : 'light' },\n        });\n        const combinedTheme = merge(\n            muiTheme,\n            merge(lightTheme, darkMode ? darkThemeOverride : {})\n        );\n        return isMobileBreakpoint\n            ? merge(combinedTheme, mobileThemeOverride)\n            : combinedTheme;\n    }, [darkMode, isMobileBreakpoint]);\n\n    const chonkyComps = (\n        <>\n            <ChonkyBusinessLogic ref={ref} {...props} />\n            <ChonkyPresentationLayer>{children}</ChonkyPresentationLayer>\n        </>\n    );\n\n    return (\n        <IntlProvider locale=\"en\" defaultLocale=\"en\" {...i18n}>\n            <ChonkyFormattersContext.Provider value={formatters}>\n                <ReduxProvider store={store}>\n                    <ThemeProvider theme={theme}>\n                        <MuiThemeProvider theme={theme}>\n                            <ChonkyIconContext.Provider\n                                value={\n                                    iconComponent ??\n                                    defaultConfig.iconComponent ??\n                                    ChonkyIconPlaceholder\n                                }\n                            >\n                                {disableDragAndDrop || disableDragAndDropProvider ? (\n                                    chonkyComps\n                                ) : (\n                                    <DndProvider backend={HTML5Backend}>\n                                        {chonkyComps}\n                                    </DndProvider>\n                                )}\n                            </ChonkyIconContext.Provider>\n                        </MuiThemeProvider>\n                    </ThemeProvider>\n                </ReduxProvider>\n            </ChonkyFormattersContext.Provider>\n        </IntlProvider>\n    );\n});\nFileBrowser.displayName = 'FileBrowser';\n","import { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Nullable } from 'tsdef';\n\nimport { ChonkyActions } from '../../action-definitions/index';\nimport { selectFolderChain } from '../../redux/selectors';\nimport { thunkRequestFileAction } from '../../redux/thunks/dispatchers.thunks';\nimport { FileData } from '../../types/file.types';\nimport { FileHelper } from '../../util/file-helper';\n\nexport interface FolderChainItem {\n    file: Nullable<FileData>;\n    disabled: boolean;\n    onClick?: () => void;\n}\n\nexport const useFolderChainItems = (): FolderChainItem[] => {\n    const folderChain = useSelector(selectFolderChain);\n    const dispatch = useDispatch();\n\n    const folderChainItems = useMemo(() => {\n        const items: FolderChainItem[] = [];\n        if (!folderChain) return items;\n\n        for (let i = 0; i < folderChain.length; ++i) {\n            const file = folderChain[i];\n            items.push({\n                file,\n                disabled: !file,\n                onClick:\n                    !FileHelper.isOpenable(file) || i === folderChain.length - 1\n                        ? undefined\n                        : () =>\n                              dispatch(\n                                  thunkRequestFileAction(ChonkyActions.OpenFiles, {\n                                      targetFile: file,\n                                      files: [file],\n                                  })\n                              ),\n            });\n        }\n        return items;\n    }, [dispatch, folderChain]);\n    return folderChainItems;\n};\n","import { useCallback, useEffect, useMemo } from 'react';\nimport { DragSourceMonitor, DropTargetMonitor } from 'react-dnd';\nimport { getEmptyImage } from 'react-dnd-html5-backend';\nimport { useDispatch, useSelector, useStore } from 'react-redux';\nimport { ExcludeKeys, Nullable } from 'tsdef';\n\nimport { EssentialActions } from '../action-definitions/essential';\nimport { ChonkyActions } from '../action-definitions/index';\nimport {\n    selectCurrentFolder,\n    selectFolderChain,\n    selectInstanceId,\n    selectSelectedFiles,\n} from '../redux/selectors';\nimport { thunkRequestFileAction } from '../redux/thunks/dispatchers.thunks';\nimport { StartDragNDropPayload } from '../types/action-payloads.types';\nimport {\n    ChonkyDndDropResult,\n    ChonkyDndFileEntryItem,\n    ChonkyDndFileEntryType,\n} from '../types/dnd.types';\nimport { DndEntryState } from '../types/file-list.types';\nimport { FileData } from '../types/file.types';\nimport { useDragIfAvailable, useDropIfAvailable } from './dnd-fallback';\nimport { FileHelper } from './file-helper';\nimport { useInstanceVariable } from './hooks-helpers';\n\nexport const useFileDrag = (file: Nullable<FileData>) => {\n    // Prepare the dnd payload\n    const store = useStore();\n    const fileRef = useInstanceVariable(file);\n    const getDndStartPayload = useCallback<() => StartDragNDropPayload>(() => {\n        const reduxState = store.getState();\n        return {\n            sourceInstanceId: selectInstanceId(reduxState),\n            source: selectCurrentFolder(reduxState),\n            // We force non-null type below because by convention, if drag & drop for\n            // this file was possible, it must have been non-null.\n            draggedFile: fileRef.current!,\n            selectedFiles: selectSelectedFiles(reduxState),\n        };\n    }, [store, fileRef]);\n\n    // For drag source\n    const dispatch = useDispatch();\n    const canDrag = useCallback(() => FileHelper.isDraggable(fileRef.current), [\n        fileRef,\n    ]);\n    const onDragStart = useCallback((): ChonkyDndFileEntryItem => {\n        const item: ChonkyDndFileEntryItem = {\n            type: ChonkyDndFileEntryType,\n            payload: getDndStartPayload(),\n        };\n        dispatch(thunkRequestFileAction(ChonkyActions.StartDragNDrop, item.payload));\n        return item;\n    }, [dispatch, getDndStartPayload]);\n    const onDragEnd = useCallback(\n        (item: ChonkyDndFileEntryItem, monitor: DragSourceMonitor) => {\n            const dropResult = monitor.getDropResult() as ChonkyDndDropResult;\n            if (\n                !FileHelper.isDraggable(item.payload.draggedFile) ||\n                !dropResult ||\n                !dropResult.dropTarget\n            ) {\n                return;\n            }\n\n            dispatch(\n                thunkRequestFileAction(ChonkyActions.EndDragNDrop, {\n                    ...item.payload,\n                    destination: dropResult.dropTarget,\n                    copy: dropResult.dropEffect === 'copy',\n                })\n            );\n        },\n        [dispatch]\n    );\n\n    // Create refs for react-dnd hooks\n    const item = useMemo<ChonkyDndFileEntryItem>(\n        () => ({\n            type: ChonkyDndFileEntryType,\n            // Payload is actually added in `onDragStart`\n            payload: {} as StartDragNDropPayload,\n        }),\n        []\n    );\n    const collect = useCallback(monitor => ({ isDragging: monitor.isDragging() }), []);\n    const [{ isDragging: dndIsDragging }, drag, preview] = useDragIfAvailable({\n        item,\n        canDrag,\n        begin: onDragStart,\n        // @ts-ignore\n        end: onDragEnd,\n        collect,\n    });\n\n    useEffect(() => {\n        // Set drag preview to an empty image because `DnDFileListDragLayer` will\n        // provide its own preview.\n        preview(getEmptyImage(), { captureDraggingState: true });\n    }, [preview]);\n\n    return { dndIsDragging, drag };\n};\n\ninterface UseFileDropParams {\n    file: Nullable<FileData>;\n    forceDisableDrop?: boolean;\n    includeChildrenDrops?: boolean;\n}\n\nexport const useFileDrop = ({\n    file,\n    forceDisableDrop,\n    includeChildrenDrops,\n}: UseFileDropParams) => {\n    const folderChainRef = useInstanceVariable(useSelector(selectFolderChain));\n    const onDrop = useCallback(\n        (_item: ChonkyDndFileEntryItem, monitor) => {\n            if (!monitor.canDrop()) return;\n            const customDropResult: ExcludeKeys<ChonkyDndDropResult, 'dropEffect'> = {\n                dropTarget: file,\n            };\n            return customDropResult;\n        },\n        [file]\n    );\n    const canDrop = useCallback(\n        (item: ChonkyDndFileEntryItem, monitor: DropTargetMonitor) => {\n            if (\n                forceDisableDrop ||\n                !FileHelper.isDroppable(file) ||\n                (!monitor.isOver({ shallow: true }) && !includeChildrenDrops)\n            ) {\n                return false;\n            }\n            const { source, draggedFile, selectedFiles } = item.payload;\n\n            // We prevent folders from being dropped into themselves. We also prevent\n            // any folder from current folder chain being moved - we can't move the\n            // folder that we are currently in.\n            const prohibitedFileIds = new Set<string>();\n            prohibitedFileIds.add(file.id);\n            folderChainRef.current.map(folder => {\n                if (folder) prohibitedFileIds.add(folder.id);\n            });\n            const movedFiles: FileData[] = [draggedFile, ...selectedFiles];\n            for (const currFile of movedFiles) {\n                if (prohibitedFileIds.has(currFile.id)) return false;\n            }\n\n            // Finally, prohibit files from being moved into their parent folder\n            // (which is a no-op).\n            return file.id !== source?.id;\n        },\n        [forceDisableDrop, file, includeChildrenDrops, folderChainRef]\n    );\n    const collect = useCallback(\n        monitor => ({\n            isOver: monitor.isOver(),\n            isOverCurrent: monitor.isOver({ shallow: true }),\n            canDrop: monitor.canDrop(),\n        }),\n        []\n    );\n    const [\n        { isOver: dndIsOver, isOverCurrent: dndIsOverCurrent, canDrop: dndCanDrop },\n        drop,\n    ] = useDropIfAvailable({\n        accept: ChonkyDndFileEntryType,\n        drop: onDrop,\n        canDrop,\n        collect,\n    });\n    return { dndIsOver, dndIsOverCurrent, dndCanDrop, drop };\n};\n\nexport const useFileEntryDnD = (file: Nullable<FileData>) => {\n    const { dndIsDragging, drag } = useFileDrag(file);\n    const { dndIsOver, dndCanDrop, drop } = useFileDrop({ file });\n    const dndState = useMemo<DndEntryState>(\n        () => ({\n            dndIsDragging,\n            dndIsOver,\n            dndCanDrop,\n        }),\n        [dndCanDrop, dndIsDragging, dndIsOver]\n    );\n    return {\n        drop,\n        drag,\n        dndState,\n    };\n};\n\nexport const useDndHoverOpen = (file: Nullable<FileData>, dndState: DndEntryState) => {\n    const dispatch = useDispatch();\n    const currentFolderRef = useInstanceVariable(useSelector(selectCurrentFolder));\n    useEffect(() => {\n        let timeout: Nullable<any> = null;\n        if (\n            dndState.dndIsOver &&\n            FileHelper.isDndOpenable(file) &&\n            file.id !== currentFolderRef.current?.id\n        ) {\n            timeout = setTimeout(\n                () =>\n                    dispatch(\n                        thunkRequestFileAction(EssentialActions.OpenFiles, {\n                            targetFile: file,\n                            files: [file],\n                        })\n                    ),\n                // TODO: Make this timeout configurable\n                1500\n            );\n        }\n        return () => {\n            if (timeout) clearTimeout(timeout);\n        };\n    }, [dispatch, file, dndState.dndIsOver, currentFolderRef]);\n};\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React from 'react';\n\nimport { makeLocalChonkyStyles } from '../../util/styles';\n\nexport interface TextPlaceholderProps {\n    minLength: number;\n    maxLength: number;\n}\n\nconst getRandomInt = (min: number, max: number) => {\n    return min + Math.floor(Math.random() * Math.floor(max - min));\n};\nexport const TextPlaceholder: React.FC<TextPlaceholderProps> = React.memo(props => {\n    const { minLength, maxLength } = props;\n\n    const placeholderLength = getRandomInt(minLength, maxLength);\n    const whitespace = '&nbsp;'.repeat(placeholderLength);\n\n    const classes = useStyles();\n    return (\n        <span\n            className={classes.textPlaceholder}\n            dangerouslySetInnerHTML={{ __html: whitespace }}\n        />\n    );\n});\n\nconst useStyles = makeLocalChonkyStyles(() => ({\n    '@keyframes loading-placeholder': {\n        '0%': { opacity: 0.2 },\n        '50%': { opacity: 0.4 },\n        '100%': { opacity: 0.2 },\n    },\n    textPlaceholder: {\n        animationName: '$loading-placeholder',\n        animationIterationCount: 'infinite',\n        animationTimingFunction: 'linear',\n        animationDuration: '1.5s',\n        backgroundColor: '#ccc',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        borderRadius: 4,\n        maxWidth: '40%',\n        minWidth: 20,\n    },\n}));\n","import React, {\n    HTMLProps, useCallback, useContext, useEffect, useMemo, useRef, useState\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Nullable, Undefinable } from 'tsdef';\n\nimport { ChonkyActions } from '../../action-definitions/index';\nimport { selectThumbnailGenerator } from '../../redux/selectors';\nimport { thunkRequestFileAction } from '../../redux/thunks/dispatchers.thunks';\nimport { DndEntryState } from '../../types/file-list.types';\nimport { FileData } from '../../types/file.types';\nimport { ChonkyIconName } from '../../types/icons.types';\nimport { FileHelper } from '../../util/file-helper';\nimport { ChonkyIconContext, ColorsDark, ColorsLight, useIconData } from '../../util/icon-helper';\nimport { Logger } from '../../util/logger';\nimport { TextPlaceholder } from '../external/TextPlaceholder';\nimport { KeyboardClickEvent, MouseClickEvent } from '../internal/ClickableWrapper';\nimport { FileEntryState } from './GridEntryPreview';\n\nexport const useFileEntryHtmlProps = (file: Nullable<FileData>): HTMLProps<HTMLDivElement> => {\n    return useMemo(() => {\n        const dataProps: { [prop: string]: Undefinable<string> } = {\n            'data-test-id': 'file-entry',\n            'data-chonky-file-id': file ? file.id : undefined,\n        };\n\n        return {\n            role: 'listitem',\n            ...dataProps,\n        };\n    }, [file]);\n};\n\nexport const useFileEntryState = (file: Nullable<FileData>, selected: boolean, focused: boolean) => {\n    const iconData = useIconData(file);\n    const { thumbnailUrl, thumbnailLoading } = useThumbnailUrl(file);\n\n    return useMemo<FileEntryState>(() => {\n        const fileColor = thumbnailUrl ? ColorsDark[iconData.colorCode] : ColorsLight[iconData.colorCode];\n        const iconSpin = thumbnailLoading || !file;\n        const icon = thumbnailLoading ? ChonkyIconName.loading : iconData.icon;\n\n        return {\n            childrenCount: FileHelper.getChildrenCount(file),\n            icon: file && file.icon !== undefined ? file.icon : icon,\n            iconSpin: iconSpin,\n            thumbnailUrl: thumbnailUrl,\n            color: file && file.color !== undefined ? file.color : fileColor,\n            selected: selected,\n            focused: !!focused,\n        };\n    }, [file, focused, iconData, selected, thumbnailLoading, thumbnailUrl]);\n};\n\nexport const useDndIcon = (dndState: DndEntryState) => {\n    let dndIconName: Nullable<ChonkyIconName> = null;\n    if (dndState.dndIsOver) {\n        const showDropIcon = dndState.dndCanDrop;\n        dndIconName = showDropIcon ? ChonkyIconName.dndCanDrop : ChonkyIconName.dndCannotDrop;\n    } else if (dndState.dndIsDragging) {\n        dndIconName = ChonkyIconName.dndDragging;\n    }\n\n    return dndIconName;\n};\n\nexport const useModifierIconComponents = (file: Nullable<FileData>) => {\n    const modifierIcons: ChonkyIconName[] = useMemo(() => {\n        const modifierIcons: ChonkyIconName[] = [];\n        if (FileHelper.isHidden(file)) modifierIcons.push(ChonkyIconName.hidden);\n        if (FileHelper.isSymlink(file)) modifierIcons.push(ChonkyIconName.symlink);\n        if (FileHelper.isEncrypted(file)) modifierIcons.push(ChonkyIconName.lock);\n        return modifierIcons;\n    }, [file]);\n    const ChonkyIcon = useContext(ChonkyIconContext);\n    const modifierIconComponents = useMemo(\n        () => modifierIcons.map((icon, index) => <ChonkyIcon key={`file-modifier-${index}`} icon={icon} />),\n        // For some reason ESLint marks `ChonkyIcon` as an unnecessary dependency,\n        // but we expect it can change at runtime so we disable the check.\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [ChonkyIcon, modifierIcons]\n    );\n    return modifierIconComponents;\n};\n\nconst _extname = (fileName: string) => {\n    const parts = fileName.split('.');\n    if (parts.length) {\n        return `.${parts[parts.length - 1]}`;\n    }\n    return '';\n};\n\nexport const useFileNameComponent = (file: Nullable<FileData>) => {\n    return useMemo(() => {\n        if (!file) return <TextPlaceholder minLength={15} maxLength={20} />;\n\n        let name;\n        let extension = null;\n\n        const isDir = FileHelper.isDirectory(file);\n        if (isDir) {\n            name = file.name;\n        } else {\n            extension = file.ext ?? _extname(file.name);\n            name = file.name.substr(0, file.name.length - extension.length);\n        }\n\n        return (\n            <>\n                {name}\n                {extension && <span className=\"chonky-file-entry-description-title-extension\">{extension}</span>}\n            </>\n        );\n    }, [file]);\n};\n\nexport const useThumbnailUrl = (file: Nullable<FileData>) => {\n    const thumbnailGenerator = useSelector(selectThumbnailGenerator);\n    const [thumbnailUrl, setThumbnailUrl] = useState<Nullable<string>>(null);\n    const [thumbnailLoading, setThumbnailLoading] = useState<boolean>(false);\n    const loadingAttempts = useRef(0);\n\n    useEffect(() => {\n        let loadingCancelled = false;\n\n        if (file) {\n            if (thumbnailGenerator) {\n                if (loadingAttempts.current === 0) {\n                    setThumbnailLoading(true);\n                }\n                loadingAttempts.current++;\n                Promise.resolve()\n                    .then(() => thumbnailGenerator(file))\n                    .then((thumbnailUrl: any) => {\n                        if (loadingCancelled) return;\n                        setThumbnailLoading(false);\n\n                        if (thumbnailUrl && typeof thumbnailUrl === 'string') {\n                            setThumbnailUrl(thumbnailUrl);\n                        }\n                    })\n                    .catch(error => {\n                        if (!loadingCancelled) setThumbnailLoading(false);\n                        Logger.error(`User-defined \"thumbnailGenerator\" handler threw an error: ${error.message}`);\n                    });\n            } else if (file.thumbnailUrl) {\n                setThumbnailUrl(file.thumbnailUrl);\n            }\n        }\n\n        return () => {\n            loadingCancelled = true;\n        };\n    }, [file, setThumbnailUrl, setThumbnailLoading, thumbnailGenerator]);\n\n    return { thumbnailUrl, thumbnailLoading };\n};\n\nexport const useFileClickHandlers = (file: Nullable<FileData>, displayIndex: number) => {\n    const dispatch = useDispatch();\n\n    // Prepare base handlers\n    const onMouseClick = useCallback(\n        (event: MouseClickEvent, clickType: 'single' | 'double') => {\n            if (!file) return;\n\n            dispatch(\n                thunkRequestFileAction(ChonkyActions.MouseClickFile, {\n                    clickType,\n                    file,\n                    fileDisplayIndex: displayIndex,\n                    altKey: event.altKey,\n                    ctrlKey: event.ctrlKey,\n                    shiftKey: event.shiftKey,\n                })\n            );\n        },\n        [dispatch, file, displayIndex]\n    );\n    const onKeyboardClick = useCallback(\n        (event: KeyboardClickEvent) => {\n            if (!file) return;\n\n            dispatch(\n                thunkRequestFileAction(ChonkyActions.KeyboardClickFile, {\n                    file,\n                    fileDisplayIndex: displayIndex,\n                    enterKey: event.enterKey,\n                    spaceKey: event.spaceKey,\n                    altKey: event.altKey,\n                    ctrlKey: event.ctrlKey,\n                    shiftKey: event.shiftKey,\n                })\n            );\n        },\n        [dispatch, file, displayIndex]\n    );\n\n    // Prepare single/double click handlers\n    const onSingleClick = useCallback((event: MouseClickEvent) => onMouseClick(event, 'single'), [onMouseClick]);\n    const onDoubleClick = useCallback((event: MouseClickEvent) => onMouseClick(event, 'double'), [onMouseClick]);\n\n    return {\n        onSingleClick,\n        onDoubleClick,\n        onKeyboardClick,\n    };\n};\n","import { MaybePromise, Nullable } from 'tsdef';\n\nimport { FileActionState } from './action-handler.types';\nimport { FileViewConfig } from './file-view.types';\nimport { FileFilter, FileMap } from './file.types';\nimport { ChonkyIconName } from './icons.types';\nimport { ChonkyDispatch, RootState } from './redux.types';\nimport { FileSortKeySelector } from './sort.types';\n\nexport interface FileAction {\n    /**\n     * Unique file action ID. If you set the action ID to one of the built-in Chonky\n     * action action IDs, you custom action definition will override the built-in\n     * definition.\n     */\n    id: string;\n    /**\n     * When set to `true`, the action will only be active (dispatchable) when user\n     * selects one or more files. If `fileFilter` is defined, it will be applied to\n     * selection before checking if its empty.\n     */\n    requiresSelection?: boolean; // Requires selection of 1+ files\n    /**\n     * A predicate that determines whether a file should be included in the selection\n     * for this action.\n     */\n    fileFilter?: FileFilter;\n    /**\n     * List of hotkeys that should trigger this action, defined using `hotkey-js`\n     * notation.\n     * @see https://www.npmjs.com/package/hotkeys-js\n     */\n    hotkeys?: string[] | readonly string[];\n    /**\n     * When button is defined and `toolbar` or `contextMenu` is set to `true`, a\n     * button will be added to the relevant UI component. Clicking on this button\n     * will active this action. The appearance of the button will change based on\n     * the action definition and the current Chonky state.\n     */\n    button?: FileActionButton;\n    /**\n     * When `sortKeySelector` is specified, the action becomes a sorting toggle. When\n     * this action is activated, it will sort files using the key selector, toggling\n     * between Ascending and Descending orders.\n     */\n    sortKeySelector?: FileSortKeySelector;\n    /**\n     * When `fileViewConfig` is specified, triggering this action will apply the\n     * provided config to Chonky's file view.\n     */\n    fileViewConfig?: FileViewConfig;\n    /**\n     * When `option` is specified, the action becomes an option toggle. When the action\n     * is activated, the boolean value of the option will be toggled.\n     */\n    option?: FileActionOption;\n    /**\n     * When selection transform is defined, activating this action will update the file\n     * selection. If the transform function returns `null`, selection will be left\n     * untouched.\n     */\n    selectionTransform?: FileSelectionTransform;\n    /**\n     * When effect is defined, it will be called right before dispatching the action to\n     * the user defined action handler. If the effect function returns a promise, Chonky\n     * will wait for the promise to resolve or fail before dispatching the action to the\n     * handler. If this function returns `true`, the file action will NOT be dispatched\n     * the the handler.\n     */\n    effect?: FileActionEffect;\n    /**\n     * When customVisibility is defined, it will change the display state of the file action\n     * The function must return the visibility as one of the CustomVisibilityState values:\n     *  - Hidden\n     *  - Disabled\n     *  - Default\n     *  - Active\n     */\n    customVisibility?: () => CustomVisibilityState;\n    /**\n     * Field used to infer the type of action payload. It is used solely for Typescript\n     * type inference and action validation.\n     */\n    __payloadType?: any;\n    /**\n     * Field used to infer the type of extra state for this action. It is used solely\n     * for Typescript type inference and action validation.\n     */\n    __extraStateType?: any;\n}\n\nexport interface FileActionButton {\n    name: string; // Button name\n    toolbar?: boolean; // Whether to show the button in the toolbar\n    contextMenu?: boolean; // Whether to show the button in the context menu\n    group?: string; // Button group (dropdown in toolbar or section in context menu)\n    tooltip?: string; // Help tooltip text\n    icon?: ChonkyIconName | string | any; // Icon name\n    iconOnly?: boolean; // Whether to only display the icon\n}\n\nexport interface FileActionOption {\n    id: string; // Unique option ID\n    defaultValue: boolean; // Whether the option is enabled by default (required)\n}\n\nexport type FileSelectionTransform = (data: {\n    prevSelection: Set<string>;\n    fileIds: ReadonlyArray<string>;\n    fileMap: Readonly<FileMap>;\n    hiddenFileIds: Set<string>;\n}) => Nullable<Set<string>>;\n\nexport type FileActionEffect<Action extends FileAction = any> = (data: {\n    action: Action;\n    payload: Action['__payloadType'];\n    state: FileActionState<{}>; // extra state is empty on purpose\n    reduxDispatch: ChonkyDispatch;\n    getReduxState: () => RootState;\n}) => MaybePromise<undefined | boolean | void>;\n\nexport type FileActionMap = { [actonId: string]: FileAction };\n\nexport enum CustomVisibilityState {\n    Hidden, \n    Disabled, \n    Default,\n    Active\n};\n","import { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Nullable } from 'tsdef';\n\nimport { ChonkyActions } from '../action-definitions/index';\nimport {\n    selectFileActionData,\n    selectFileViewConfig,\n    selectOptionValue,\n    selectParentFolder,\n    selectSelectedFilesForActionCount,\n    selectSortActionId,\n    selectSortOrder,\n} from '../redux/selectors';\nimport { useParamSelector } from '../redux/store';\nimport { thunkRequestFileAction } from '../redux/thunks/dispatchers.thunks';\nimport { ChonkyIconName } from '../types/icons.types';\nimport { CustomVisibilityState } from '../types/action.types';\nimport { SortOrder } from '../types/sort.types';\nimport { FileHelper } from './file-helper';\n\nexport const useFileActionTrigger = (fileActionId: string) => {\n    const dispatch = useDispatch();\n    const fileAction = useParamSelector(selectFileActionData, fileActionId);\n    return useCallback(() => dispatch(thunkRequestFileAction(fileAction, undefined)), [\n        dispatch,\n        fileAction,\n    ]);\n};\n\nexport const useFileActionProps = (\n    fileActionId: string\n): { icon: Nullable<ChonkyIconName | string>; active: boolean; disabled: boolean } => {\n    const parentFolder = useSelector(selectParentFolder);\n    const fileViewConfig = useSelector(selectFileViewConfig);\n\n    const sortActionId = useSelector(selectSortActionId);\n    const sortOrder = useSelector(selectSortOrder);\n\n    const action = useParamSelector(selectFileActionData, fileActionId);\n    // @ts-ignore\n    const optionValue = useParamSelector(selectOptionValue, action?.option?.id);\n\n    const actionSelectionSize = useParamSelector(\n        selectSelectedFilesForActionCount,\n        fileActionId\n    );\n\n    const actionSelectionEmpty = actionSelectionSize === 0;\n\n    return useMemo(() => {\n        if (!action) return { icon: null, active: false, disabled: true };\n\n        let icon = action.button?.icon ?? null;\n        if (action.sortKeySelector) {\n            if (sortActionId === action.id) {\n                if (sortOrder === SortOrder.ASC) {\n                    icon = ChonkyIconName.sortAsc;\n                } else {\n                    icon = ChonkyIconName.sortDesc;\n                }\n            } else {\n                icon = ChonkyIconName.placeholder;\n            }\n        } else if (action.option) {\n            if (optionValue) {\n                icon = ChonkyIconName.toggleOn;\n            } else {\n                icon = ChonkyIconName.toggleOff;\n            }\n        }\n\n        const isSortButtonAndCurrentSort = action.id === sortActionId;\n        const isFileViewButtonAndCurrentView = action.fileViewConfig === fileViewConfig;\n        const isOptionAndEnabled = action.option ? !!optionValue : false;\n\n        let customDisabled = false;\n        let customActive = false;\n        if (action.customVisibility !== undefined) {\n            customDisabled = action.customVisibility() === CustomVisibilityState.Disabled;\n            customActive = action.customVisibility() === CustomVisibilityState.Active;\n        }\n        const active =\n            isSortButtonAndCurrentSort ||\n            isFileViewButtonAndCurrentView ||\n            isOptionAndEnabled ||\n            customActive;\n        \n        let disabled: boolean = (!!action.requiresSelection && actionSelectionEmpty) || customDisabled;\n\n        if (action.id === ChonkyActions.OpenParentFolder.id) {\n            // We treat `open_parent_folder` file action as a special case as it\n            // requires the parent folder to be present to work...\n            disabled = disabled || !FileHelper.isOpenable(parentFolder);\n        }\n\n        return { icon, active, disabled };\n    }, [\n        parentFolder,\n        fileViewConfig,\n        sortActionId,\n        sortOrder,\n        action,\n        optionValue,\n        actionSelectionEmpty,\n    ]);\n};\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport Button from '@material-ui/core/Button';\nimport React, { useContext } from 'react';\nimport { Nullable } from 'tsdef';\n\nimport { selectFileActionData } from '../../redux/selectors';\nimport { useParamSelector } from '../../redux/store';\nimport { ChonkyIconName } from '../../types/icons.types';\nimport { CustomVisibilityState } from '../../types/action.types';\nimport { useFileActionProps, useFileActionTrigger } from '../../util/file-actions';\nimport { useLocalizedFileActionStrings } from '../../util/i18n';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { c, important, makeGlobalChonkyStyles } from '../../util/styles';\n\nexport interface ToolbarButtonProps {\n    className?: string;\n    text: string;\n    tooltip?: string;\n    active?: boolean;\n    icon?: Nullable<ChonkyIconName | string>;\n    iconOnly?: boolean;\n    onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n    disabled?: boolean;\n    dropdown?: boolean;\n}\n\nexport const ToolbarButton: React.FC<ToolbarButtonProps> = React.memo(props => {\n    const {\n        className: externalClassName,\n        text,\n        tooltip,\n        active,\n        icon,\n        iconOnly,\n        onClick,\n        disabled,\n        dropdown,\n    } = props;\n    const classes = useStyles();\n    const ChonkyIcon = useContext(ChonkyIconContext);\n\n    const iconComponent =\n        icon || iconOnly ? (\n            <div className={iconOnly ? '' : classes.iconWithText}>\n                <ChonkyIcon\n                    icon={icon ? icon : ChonkyIconName.fallbackIcon}\n                    fixedWidth={true}\n                />\n            </div>\n        ) : null;\n\n    const className = c({\n        [externalClassName ?? '']: true,\n        [classes.baseButton]: true,\n        [classes.iconOnlyButton]: iconOnly,\n        [classes.activeButton]: !!active,\n    });\n    return (\n        <Button\n            className={className}\n            onClick={onClick}\n            title={tooltip ? tooltip : text}\n            disabled={disabled || !onClick}\n        >\n            {iconComponent}\n            {text && !iconOnly && <span>{text}</span>}\n            {dropdown && (\n                <div className={classes.iconDropdown}>\n                    <ChonkyIcon\n                        icon={icon ? icon : ChonkyIconName.dropdown}\n                        fixedWidth={true}\n                    />\n                </div>\n            )}\n        </Button>\n    );\n});\n\nconst useStyles = makeGlobalChonkyStyles(theme => ({\n    baseButton: {\n        fontSize: important(theme.toolbar.fontSize),\n        textTransform: important('none'),\n        letterSpacing: important(0),\n        minWidth: important('auto'),\n        lineHeight: theme.toolbar.lineHeight,\n        height: theme.toolbar.size,\n        paddingBottom: important(0),\n        paddingTop: important(0),\n    },\n    iconWithText: {\n        marginRight: 8,\n    },\n    iconOnlyButton: {\n        width: theme.toolbar.size,\n        textAlign: 'center',\n    },\n    iconDropdown: {\n        fontSize: '0.7em',\n        marginLeft: 2,\n        marginTop: 1,\n    },\n    activeButton: {\n        color: important(theme.colors.textActive),\n    },\n}));\n\nexport interface SmartToolbarButtonProps {\n    fileActionId: string;\n}\n\nexport const SmartToolbarButton: React.FC<SmartToolbarButtonProps> = React.memo(\n    props => {\n        const { fileActionId } = props;\n\n        const action = useParamSelector(selectFileActionData, fileActionId);\n        const triggerAction = useFileActionTrigger(fileActionId);\n        const { icon, active, disabled } = useFileActionProps(fileActionId);\n        const { buttonName, buttonTooltip } = useLocalizedFileActionStrings(action);\n\n        if (!action) return null;\n        const { button } = action;\n        if (!button) return null;\n        if (action.customVisibility !== undefined && action.customVisibility() === CustomVisibilityState.Hidden) return null;\n\n        return (\n            <ToolbarButton\n                text={buttonName}\n                tooltip={buttonTooltip}\n                icon={icon}\n                iconOnly={button.iconOnly}\n                active={active}\n                onClick={triggerAction}\n                disabled={disabled}\n            />\n        );\n    }\n);\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { useContext, useMemo } from 'react';\n\nimport { DndEntryState } from '../../types/file-list.types';\nimport { ChonkyIconName } from '../../types/icons.types';\nimport { useDndHoverOpen, useFileDrop } from '../../util/dnd';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { c, important, makeLocalChonkyStyles } from '../../util/styles';\nimport { useDndIcon } from '../file-list/FileEntry-hooks';\nimport { FolderChainItem } from './FileNavbar-hooks';\nimport { ToolbarButton } from './ToolbarButton';\n\nexport interface FolderChainButtonProps {\n    first: boolean;\n    current: boolean;\n    item: FolderChainItem;\n}\n\nexport const FolderChainButton: React.FC<FolderChainButtonProps> = React.memo(\n    ({ first, current, item }) => {\n        const { file, disabled, onClick } = item;\n        const { dndIsOver, dndCanDrop, drop } = useFileDrop({\n            file,\n            forceDisableDrop: !file || current,\n        });\n        const dndState = useMemo<DndEntryState>(\n            () => ({\n                dndIsOver,\n                dndCanDrop,\n                dndIsDragging: false,\n            }),\n            [dndCanDrop, dndIsOver]\n        );\n        useDndHoverOpen(file, dndState);\n        const dndIconName = useDndIcon(dndState);\n        const ChonkyIcon = useContext(ChonkyIconContext);\n\n        const classes = useStyles(dndState);\n        const className = c({\n            [classes.baseBreadcrumb]: true,\n            [classes.disabledBreadcrumb]: disabled,\n            [classes.currentBreadcrumb]: current,\n        });\n        const text = file ? file.name : 'Loading...';\n        const icon =\n            first && file?.folderChainIcon === undefined\n                ? ChonkyIconName.folder\n                : file?.folderChainIcon;\n\n        return (\n            <div className={classes.buttonContainer} ref={file ? drop : null}>\n                {file && dndIconName && (\n                    <div className={classes.dndIndicator}>\n                        <ChonkyIcon icon={dndIconName} fixedWidth={true} />\n                    </div>\n                )}\n                <ToolbarButton\n                    icon={icon}\n                    className={className}\n                    text={text}\n                    disabled={disabled}\n                    onClick={onClick}\n                />\n            </div>\n        );\n    }\n);\n\nconst useStyles = makeLocalChonkyStyles(theme => ({\n    buttonContainer: {\n        position: 'relative',\n    },\n    baseBreadcrumb: {\n        color: (dndState: DndEntryState) => {\n            let color = theme.palette.text.primary;\n            if (dndState.dndIsOver) {\n                color = dndState.dndCanDrop\n                    ? theme.dnd.canDropColor\n                    : theme.dnd.cannotDropColor;\n            }\n            return important(color);\n        },\n    },\n    disabledBreadcrumb: {\n        // Constant function here is on purpose. Without the function, the color here\n        // does not override the `baseBreadcrumb` color from above.\n        color: () => important(theme.palette.text.disabled),\n    },\n    currentBreadcrumb: {\n        textDecoration: important('underline'),\n    },\n    dndIndicator: {\n        color: (dndState: DndEntryState) =>\n            dndState.dndCanDrop ? theme.dnd.canDropColor : theme.dnd.cannotDropColor,\n        backgroundColor: (dndState: DndEntryState) =>\n            dndState.dndCanDrop ? theme.dnd.canDropMask : theme.dnd.cannotDropMask,\n        lineHeight: `calc(${theme.toolbar.lineHeight} - 6px)`,\n        transform: 'translateX(-50%) translateY(-50%)',\n        borderRadius: theme.toolbar.buttonRadius,\n        height: theme.toolbar.size - 6,\n        width: theme.toolbar.size - 6,\n        boxSizing: 'border-box',\n        position: 'absolute',\n        textAlign: 'center',\n        left: '50%',\n        top: '50%',\n        zIndex: 5,\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport Box from '@material-ui/core/Box';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport React, { ReactElement, useMemo } from 'react';\n\nimport { ChonkyActions } from '../../action-definitions/index';\nimport { important, makeGlobalChonkyStyles } from '../../util/styles';\nimport { useFolderChainItems } from './FileNavbar-hooks';\nimport { FolderChainButton } from './FolderChainButton';\nimport { SmartToolbarButton } from './ToolbarButton';\n\nexport interface FileNavbarProps {}\n\nexport const FileNavbar: React.FC<FileNavbarProps> = React.memo(() => {\n    const classes = useStyles();\n    const folderChainItems = useFolderChainItems();\n\n    const folderChainComponents = useMemo(() => {\n        const components: ReactElement[] = [];\n        for (let i = 0; i < folderChainItems.length; ++i) {\n            const key = `folder-chain-${i}`;\n            const component = (\n                <FolderChainButton\n                    key={key}\n                    first={i === 0}\n                    current={i === folderChainItems.length - 1}\n                    item={folderChainItems[i]}\n                />\n            );\n            components.push(component);\n        }\n        return components;\n    }, [folderChainItems]);\n\n    return (\n        <Box className={classes.navbarWrapper}>\n            <Box className={classes.navbarContainer}>\n                <SmartToolbarButton fileActionId={ChonkyActions.OpenParentFolder.id} />\n                <Breadcrumbs\n                    className={classes.navbarBreadcrumbs}\n                    classes={{ separator: classes.separator }}\n                >\n                    {folderChainComponents}\n                </Breadcrumbs>\n            </Box>\n        </Box>\n    );\n});\n\nconst useStyles = makeGlobalChonkyStyles(theme => ({\n    navbarWrapper: {\n        paddingBottom: theme.margins.rootLayoutMargin,\n    },\n    navbarContainer: {\n        display: 'flex',\n    },\n    upDirectoryButton: {\n        fontSize: important(theme.toolbar.fontSize),\n        height: theme.toolbar.size,\n        width: theme.toolbar.size,\n        padding: '0px !important',\n    },\n    navbarBreadcrumbs: {\n        fontSize: important(theme.toolbar.fontSize),\n        flexGrow: 100,\n    },\n    separator: {\n        marginRight: important(4),\n        marginLeft: important(4),\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport React, { useCallback, useContext } from 'react';\nimport { Nullable } from 'tsdef';\n\nimport { selectFileActionData } from '../../redux/selectors';\nimport { useParamSelector } from '../../redux/store';\nimport { ChonkyIconName } from '../../types/icons.types';\nimport { CustomVisibilityState } from '../../types/action.types';\nimport { useFileActionProps, useFileActionTrigger } from '../../util/file-actions';\nimport { useLocalizedFileActionStrings } from '../../util/i18n';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { c, important, makeGlobalChonkyStyles } from '../../util/styles';\n\nexport interface ToolbarDropdownButtonProps {\n    text: string;\n    active?: boolean;\n    icon?: Nullable<ChonkyIconName | string>;\n    onClick?: () => void;\n    disabled?: boolean;\n}\n\nexport const ToolbarDropdownButton = React.forwardRef(\n    (props: ToolbarDropdownButtonProps, ref: React.Ref<HTMLLIElement>) => {\n        const { text, active, icon, onClick, disabled } = props;\n        const classes = useStyles();\n        const ChonkyIcon = useContext(ChonkyIconContext);\n\n        const className = c({\n            [classes.baseButton]: true,\n            [classes.activeButton]: active,\n        });\n        return (\n            <MenuItem\n                ref={ref}\n                className={className}\n                onClick={onClick}\n                disabled={disabled}\n            >\n                {icon && (\n                    <ListItemIcon className={classes.icon}>\n                        <ChonkyIcon icon={icon} fixedWidth={true} />\n                    </ListItemIcon>\n                )}\n                <ListItemText primaryTypographyProps={{ className: classes.text }}>\n                    {text}\n                </ListItemText>\n            </MenuItem>\n        );\n    }\n);\n\nconst useStyles = makeGlobalChonkyStyles(theme => ({\n    baseButton: {\n        lineHeight: important(theme.toolbar.lineHeight),\n        height: important(theme.toolbar.size),\n        minHeight: important('auto'),\n        minWidth: important('auto'),\n        padding: important(20),\n    },\n    icon: {\n        fontSize: important(theme.toolbar.fontSize),\n        minWidth: important('auto'),\n        color: important('inherit'),\n        marginRight: 8,\n    },\n    text: {\n        fontSize: important(theme.toolbar.fontSize),\n    },\n    activeButton: {\n        color: important(theme.colors.textActive),\n    },\n}));\n\nexport interface SmartToolbarDropdownButtonProps {\n    fileActionId: string;\n    onClickFollowUp?: () => void;\n}\n\nexport const SmartToolbarDropdownButton = React.forwardRef(\n    (props: SmartToolbarDropdownButtonProps, ref: React.Ref<HTMLLIElement>) => {\n        const { fileActionId, onClickFollowUp } = props;\n\n        const action = useParamSelector(selectFileActionData, fileActionId);\n        const triggerAction = useFileActionTrigger(fileActionId);\n        const { icon, active, disabled } = useFileActionProps(fileActionId);\n        const { buttonName } = useLocalizedFileActionStrings(action);\n\n        // Combine external click handler with internal one\n        const handleClick = useCallback(() => {\n            triggerAction();\n            if (onClickFollowUp) onClickFollowUp();\n        }, [onClickFollowUp, triggerAction]);\n\n        if (!action) return null;\n        const { button } = action;\n        if (!button) return null;\n        if (action.customVisibility !== undefined && action.customVisibility() === CustomVisibilityState.Hidden) return null;\n\n        return (\n            <ToolbarDropdownButton\n                ref={ref}\n                text={buttonName}\n                icon={icon}\n                onClick={handleClick}\n                active={active}\n                disabled={disabled}\n            />\n        );\n    }\n);\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport Menu from '@material-ui/core/Menu';\nimport React, { useCallback, useMemo } from 'react';\n\nimport { FileActionGroup } from '../../types/action-menus.types';\nimport { useLocalizedFileActionGroup } from '../../util/i18n';\nimport { important, makeGlobalChonkyStyles } from '../../util/styles';\nimport { ToolbarButton } from './ToolbarButton';\nimport { SmartToolbarDropdownButton } from './ToolbarDropdownButton';\n\nexport type ToolbarDropdownProps = FileActionGroup;\n\nexport const ToolbarDropdown: React.FC<ToolbarDropdownProps> = React.memo(props => {\n    const { name, fileActionIds } = props;\n    const [anchor, setAnchor] = React.useState<null | HTMLElement>(null);\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent<HTMLButtonElement>) => setAnchor(event.currentTarget),\n        [setAnchor]\n    );\n    const handleClose = useCallback(() => setAnchor(null), [setAnchor]);\n\n    const menuItemComponents = useMemo(\n        () =>\n            fileActionIds.map(id => (\n                <SmartToolbarDropdownButton\n                    key={`menu-item-${id}`}\n                    fileActionId={id}\n                    onClickFollowUp={handleClose}\n                />\n            )),\n        [fileActionIds, handleClose]\n    );\n\n    const localizedName = useLocalizedFileActionGroup(name);\n    const classes = useStyles();\n    return (\n        <>\n            <ToolbarButton text={localizedName} onClick={handleClick} dropdown={true} />\n            <Menu\n                autoFocus\n                keepMounted\n                elevation={2}\n                anchorEl={anchor}\n                onClose={handleClose}\n                open={Boolean(anchor)}\n                transitionDuration={150}\n                classes={{ list: classes.dropdownList }}\n            >\n                {menuItemComponents}\n            </Menu>\n        </>\n    );\n});\n\nconst useStyles = makeGlobalChonkyStyles(() => ({\n    dropdownList: {\n        paddingBottom: important(0),\n        paddingTop: important(0),\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport { selectHiddenFileCount, selectors, selectSelectionSize } from '../../redux/selectors';\nimport { getI18nId, I18nNamespace } from '../../util/i18n';\nimport { important, makeGlobalChonkyStyles } from '../../util/styles';\n\nexport interface ToolbarInfoProps {}\n\nexport const ToolbarInfo: React.FC<ToolbarInfoProps> = React.memo(() => {\n    const classes = useStyles();\n\n    const displayFileIds = useSelector(selectors.getDisplayFileIds);\n    const selectionSize = useSelector(selectSelectionSize);\n    const hiddenCount = useSelector(selectHiddenFileCount);\n\n    const intl = useIntl();\n    const fileCountString = intl.formatMessage(\n        {\n            id: getI18nId(I18nNamespace.Toolbar, 'visibleFileCount'),\n            defaultMessage: `{fileCount, plural,\n                =0 {# items}\n                one {# item}\n                other {# items}\n            }`,\n        },\n        { fileCount: displayFileIds.length }\n    );\n    const selectedString = intl.formatMessage(\n        {\n            id: getI18nId(I18nNamespace.Toolbar, 'selectedFileCount'),\n            defaultMessage: `{fileCount, plural,\n                =0 {}\n                other {# selected}\n            }`,\n        },\n        { fileCount: selectionSize }\n    );\n    const hiddenString = intl.formatMessage(\n        {\n            id: getI18nId(I18nNamespace.Toolbar, 'hiddenFileCount'),\n            defaultMessage: `{fileCount, plural,\n                =0 {}\n                other {# hidden}\n            }`,\n        },\n        { fileCount: hiddenCount }\n    );\n\n    return (\n        <div className={classes.infoContainer}>\n            <Typography className={classes.infoText} variant=\"body1\">\n                {fileCountString}\n                {(selectedString || hiddenString) && (\n                    <span className={classes.extraInfoSpan}>\n                        (\n                        <span className={classes.selectionSizeText}>\n                            {selectedString}\n                        </span>\n                        {selectedString && hiddenString && ', '}\n                        <span className={classes.hiddenCountText}>{hiddenString}</span>)\n                    </span>\n                )}\n            </Typography>\n        </div>\n    );\n});\n\nconst useStyles = makeGlobalChonkyStyles(theme => ({\n    infoContainer: {\n        height: theme.toolbar.size,\n        display: 'flex',\n    },\n    infoText: {\n        lineHeight: important(theme.toolbar.lineHeight),\n        fontSize: important(theme.toolbar.fontSize),\n        marginLeft: important(12),\n        height: theme.toolbar.size,\n    },\n    extraInfoSpan: {\n        marginRight: important(8),\n        marginLeft: important(8),\n        opacity: 0.8,\n    },\n    selectionSizeText: {\n        color: theme.colors.textActive,\n    },\n    hiddenCountText: {},\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\n\nimport { reduxActions } from '../../redux/reducers';\nimport { selectSearchString } from '../../redux/selectors';\nimport { ChonkyIconName } from '../../types/icons.types';\nimport { useDebounce } from '../../util/hooks-helpers';\nimport { getI18nId, I18nNamespace } from '../../util/i18n';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { important, makeGlobalChonkyStyles } from '../../util/styles';\n\nexport interface ToolbarSearchProps {}\n\nexport const ToolbarSearch: React.FC<ToolbarSearchProps> = React.memo(() => {\n    const intl = useIntl();\n    const searchPlaceholderString = intl.formatMessage({\n        id: getI18nId(I18nNamespace.Toolbar, 'searchPlaceholder'),\n        defaultMessage: 'Search',\n    });\n\n    const classes = useStyles();\n    const ChonkyIcon = useContext(ChonkyIconContext);\n\n    const searchInputRef = useRef<HTMLInputElement>();\n\n    const dispatch = useDispatch();\n    const reduxSearchString = useSelector(selectSearchString);\n\n    const [localSearchString, setLocalSearchString] = useState(reduxSearchString);\n    const [debouncedLocalSearchString] = useDebounce(localSearchString, 300);\n    const [showLoadingIndicator, setShowLoadingIndicator] = useState(false);\n\n    useEffect(() => {\n        dispatch(\n            reduxActions.setFocusSearchInput(() => {\n                if (searchInputRef.current) searchInputRef.current.focus();\n            })\n        );\n        return () => {\n            dispatch(reduxActions.setFocusSearchInput(null));\n        };\n    }, [dispatch]);\n\n    useEffect(() => {\n        setShowLoadingIndicator(false);\n        dispatch(reduxActions.setSearchString(debouncedLocalSearchString));\n    }, [debouncedLocalSearchString, dispatch]);\n\n    const handleChange = useCallback((event: React.FormEvent<HTMLInputElement>) => {\n        setShowLoadingIndicator(true);\n        setLocalSearchString(event.currentTarget.value);\n    }, []);\n    const handleKeyUp = useCallback(\n        (event: React.KeyboardEvent<HTMLInputElement>) => {\n            // Remove focus from the search input field when user presses escape.\n            // Note: We use KeyUp instead of KeyPress because some browser plugins can\n            //       intercept KeyPress events with Escape key.\n            //       @see https://stackoverflow.com/a/37461974\n            if (event.key === 'Escape') {\n                setLocalSearchString('');\n                dispatch(reduxActions.setSearchString(''));\n                if (searchInputRef.current) searchInputRef.current.blur();\n            }\n        },\n        [dispatch]\n    );\n\n    return (\n        <TextField\n            className={classes.searchFieldContainer}\n            size=\"small\"\n            variant=\"outlined\"\n            value={localSearchString}\n            placeholder={searchPlaceholderString}\n            onChange={handleChange as any}\n            inputRef={searchInputRef}\n            InputProps={{\n                onKeyUp: handleKeyUp,\n                startAdornment: (\n                    <InputAdornment className={classes.searchIcon} position=\"start\">\n                        <ChonkyIcon\n                            icon={showLoadingIndicator ? ChonkyIconName.loading : ChonkyIconName.search}\n                            spin={showLoadingIndicator}\n                        />\n                    </InputAdornment>\n                ),\n                className: classes.searchFieldInput,\n            }}\n            inputProps={{ className: classes.searchFieldInputInner }}\n        />\n    );\n});\n\nconst useStyles = makeGlobalChonkyStyles(theme => ({\n    searchFieldContainer: {\n        height: theme.toolbar.size,\n        width: 150,\n    },\n    searchIcon: {\n        fontSize: '0.9em',\n        opacity: 0.75,\n    },\n    searchFieldInput: {\n        lineHeight: important(0),\n        padding: important(0),\n        margin: important(0),\n        fontSize: important(theme.toolbar.fontSize),\n        borderRadius: theme.toolbar.buttonRadius,\n        height: theme.toolbar.size - 4,\n        paddingLeft: important(8),\n        marginTop: 2,\n    },\n    searchFieldInputInner: {\n        lineHeight: important(`${theme.toolbar.size - 4}px`),\n        fontSize: important(theme.toolbar.fontSize),\n        height: important(theme.toolbar.size - 4),\n        padding: important([0, 8, 0, 0]),\n        margin: important(0),\n        '-webkit-appearance': 'none',\n    },\n}));\n","import React, { ReactElement, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { selectToolbarItems } from '../../redux/selectors';\nimport { makeGlobalChonkyStyles } from '../../util/styles';\nimport { SmartToolbarButton } from './ToolbarButton';\nimport { ToolbarDropdown } from './ToolbarDropdown';\nimport { ToolbarInfo } from './ToolbarInfo';\nimport { ToolbarSearch } from './ToolbarSearch';\n\nexport interface FileToolbarProps {}\n\nexport const FileToolbar: React.FC<FileToolbarProps> = React.memo(() => {\n    const classes = useStyles();\n    const toolbarItems = useSelector(selectToolbarItems);\n\n    const toolbarItemComponents = useMemo(() => {\n        const components: ReactElement[] = [];\n        for (let i = 0; i < toolbarItems.length; ++i) {\n            const item = toolbarItems[i];\n\n            const key = `toolbar-item-${typeof item === 'string' ? item : item.name}`;\n            const component =\n                typeof item === 'string' ? (\n                    <SmartToolbarButton key={key} fileActionId={item} />\n                ) : (\n                    <ToolbarDropdown\n                        key={key}\n                        name={item.name}\n                        fileActionIds={item.fileActionIds}\n                    />\n                );\n            components.push(component);\n        }\n        return components;\n    }, [toolbarItems]);\n\n    return (\n        <div className={classes.toolbarWrapper}>\n            <div className={classes.toolbarContainer}>\n                <div className={classes.toolbarLeft}>\n                    <ToolbarSearch />\n                    <ToolbarInfo />\n                </div>\n                <div className={classes.toolbarRight}>{toolbarItemComponents}</div>\n            </div>\n        </div>\n    );\n});\n\nconst useStyles = makeGlobalChonkyStyles(theme => ({\n    toolbarWrapper: {},\n    toolbarContainer: {\n        flexWrap: 'wrap-reverse',\n        display: 'flex',\n    },\n    toolbarLeft: {\n        paddingBottom: theme.margins.rootLayoutMargin,\n        flexWrap: 'nowrap',\n        flexGrow: 10000,\n        display: 'flex',\n    },\n    toolbarLeftFiller: {\n        flexGrow: 10000,\n    },\n    toolbarRight: {\n        paddingBottom: theme.margins.rootLayoutMargin,\n        flexWrap: 'nowrap',\n        display: 'flex',\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { CSSProperties, useContext } from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { ChonkyIconName } from '../../types/icons.types';\nimport { getI18nId, I18nNamespace } from '../../util/i18n';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { makeGlobalChonkyStyles } from '../../util/styles';\n\nexport interface FileListEmptyProps {\n    width: number;\n    height: number;\n}\n\nexport const FileListEmpty: React.FC<FileListEmptyProps> = props => {\n    const { width, height } = props;\n    const classes = useStyles();\n    const ChonkyIcon = useContext(ChonkyIconContext);\n    const style: CSSProperties = {\n        width,\n        height,\n    };\n\n    const intl = useIntl();\n    const emptyString = intl.formatMessage({\n        id: getI18nId(I18nNamespace.FileList, 'nothingToShow'),\n        defaultMessage: 'Nothing to show',\n    });\n\n    return (\n        <div className={classes.fileListEmpty} style={style}>\n            <div className={classes.fileListEmptyContent}>\n                <ChonkyIcon icon={ChonkyIconName.folderOpen} />\n                &nbsp; {emptyString}\n            </div>\n        </div>\n    );\n};\n\nconst useStyles = makeGlobalChonkyStyles(theme => ({\n    fileListEmpty: {\n        color: theme.palette.text.disabled,\n        position: 'relative',\n        textAlign: 'center',\n        fontSize: '1.2em',\n    },\n    fileListEmptyContent: {\n        transform: 'translateX(-50%) translateY(-50%)',\n        position: 'absolute',\n        left: '50%',\n        top: '50%',\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { useCallback, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Nilable, Nullable } from 'tsdef';\n\nimport { selectDoubleClickDelay } from '../../redux/selectors';\nimport {\n    KeyboardClickEvent,\n    KeyboardClickEventHandler,\n    MouseClickEvent,\n    MouseClickEventHandler,\n} from './ClickableWrapper';\n\nexport const useClickHandler = (\n    onSingleClick: Nilable<MouseClickEventHandler>,\n    onDoubleClick: Nilable<MouseClickEventHandler>\n) => {\n    const doubleClickDelay = useSelector(selectDoubleClickDelay);\n\n    const counter = useRef({\n        clickCount: 0,\n        clickTimeout: null as Nullable<number>,\n    });\n\n    return useCallback(\n        (event: React.MouseEvent) => {\n            const mouseClickEvent: MouseClickEvent = {\n                altKey: event.altKey,\n                ctrlKey: event.ctrlKey || event.metaKey,\n                shiftKey: event.shiftKey,\n\n            };\n\n            counter.current.clickCount++;\n            if (counter.current.clickCount === 1) {\n                if (onSingleClick) {\n                    event.preventDefault();\n                    onSingleClick(mouseClickEvent);\n                }\n                counter.current.clickCount = 1;\n                // @ts-ignore\n                counter.current.clickTimeout = setTimeout(\n                    () => (counter.current.clickCount = 0),\n                    doubleClickDelay\n                );\n            } else if (counter.current.clickCount === 2) {\n                if (onDoubleClick) {\n                    event.preventDefault();\n                    onDoubleClick(mouseClickEvent);\n                }\n                if (typeof counter.current.clickTimeout === 'number') {\n                    clearTimeout(counter.current.clickTimeout);\n                    counter.current.clickTimeout = null;\n                    counter.current.clickCount = 0;\n                }\n            }\n        },\n        [doubleClickDelay, onSingleClick, onDoubleClick, counter]\n    );\n};\n\nexport const useKeyDownHandler = (onKeyboardClick?: KeyboardClickEventHandler) => {\n    return useCallback(\n        (event: React.KeyboardEvent) => {\n            if (!onKeyboardClick) return;\n\n            const keyboardClickEvent: KeyboardClickEvent = {\n                enterKey: event.nativeEvent.code === 'Enter',\n                spaceKey: event.nativeEvent.code === 'Space',\n                altKey: event.altKey,\n                ctrlKey: event.ctrlKey,\n                shiftKey: event.shiftKey,\n            };\n\n            if (keyboardClickEvent.spaceKey || keyboardClickEvent.enterKey) {\n                event.preventDefault();\n                event.stopPropagation();\n                onKeyboardClick(keyboardClickEvent);\n            }\n        },\n        [onKeyboardClick]\n    );\n};\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { useCallback } from 'react';\nimport { AnyObjectWithStringKeys } from 'tsdef';\n\nimport { useClickHandler, useKeyDownHandler } from './ClickableWrapper-hooks';\n\nexport interface MouseClickEvent {\n    altKey: boolean;\n    ctrlKey: boolean;\n    shiftKey: boolean;\n}\nexport type MouseClickEventHandler = (event: MouseClickEvent) => void;\n\nexport interface KeyboardClickEvent {\n    enterKey: boolean;\n    spaceKey: boolean;\n    altKey: boolean;\n    ctrlKey: boolean;\n    shiftKey: boolean;\n}\nexport type KeyboardClickEventHandler = (event: KeyboardClickEvent) => void;\n\nexport interface ClickableWrapperProps {\n    wrapperTag: any;\n    passthroughProps?: any;\n\n    onSingleClick?: MouseClickEventHandler;\n    onDoubleClick?: MouseClickEventHandler;\n    onKeyboardClick?: KeyboardClickEventHandler;\n    setFocused?: (focused: boolean) => void;\n}\n\nexport const ClickableWrapper: React.FC<ClickableWrapperProps> = props => {\n    const {\n        children,\n        wrapperTag: WrapperTag,\n        passthroughProps,\n        onSingleClick,\n        onDoubleClick,\n        onKeyboardClick,\n        setFocused,\n    } = props;\n\n    const handleClick = useClickHandler(onSingleClick, onDoubleClick);\n    const handleKeyDown = useKeyDownHandler(onKeyboardClick);\n\n    const compProps: AnyObjectWithStringKeys = {\n        onFocus: useCallback(() => setFocused && setFocused(true), [setFocused]),\n        onBlur: useCallback(() => setFocused && setFocused(false), [setFocused]),\n    };\n\n    if (onSingleClick || onDoubleClick || onKeyboardClick) {\n        compProps.onClick = handleClick;\n        compProps.onKeyDown = handleKeyDown;\n        compProps.tabIndex = 0;\n    }\n\n    const mergedProps = { ...compProps, ...passthroughProps };\n    return <WrapperTag {...mergedProps}>{children}</WrapperTag>;\n};\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React from 'react';\nimport { Nullable } from 'tsdef';\n\nimport { FileData } from '../../types/file.types';\nimport { makeLocalChonkyStyles } from '../../util/styles';\nimport { useFileNameComponent, useModifierIconComponents } from './FileEntry-hooks';\n\nexport interface FileEntryNameProps {\n    file: Nullable<FileData>;\n    className?: string;\n}\n\nexport const FileEntryName: React.FC<FileEntryNameProps> = React.memo(({ file, className }) => {\n    const modifierIconComponents = useModifierIconComponents(file);\n    const fileNameComponent = useFileNameComponent(file);\n\n    const classes = useStyles();\n    return (\n        <span className={className} title={file ? file.name : undefined}>\n            {modifierIconComponents.length > 0 && (\n                <span className={classes.modifierIcons}>{modifierIconComponents}</span>\n            )}\n            {fileNameComponent}\n        </span>\n    );\n});\nFileEntryName.displayName = 'FileEntryName';\n\nconst useStyles = makeLocalChonkyStyles(theme => ({\n    modifierIcons: {\n        color: theme.palette.text.hint,\n        position: 'relative',\n        fontSize: '0.775em',\n        paddingRight: 5,\n    },\n}));\n","import React, { useContext } from 'react';\n\nimport { FileEntryProps } from '../../types/file-list.types';\nimport { useLocalizedFileEntryStrings } from '../../util/i18n';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { makeLocalChonkyStyles } from '../../util/styles';\nimport { TextPlaceholder } from '../external/TextPlaceholder';\nimport { useFileEntryHtmlProps, useFileEntryState } from './FileEntry-hooks';\nimport { FileEntryName } from './FileEntryName';\nimport { FileEntryState } from './GridEntryPreview';\n\nexport const CompactEntry: React.FC<FileEntryProps> = React.memo(\n    // @ts-ignore\n    ({ file, selected, focused, dndState }) => {\n        const entryState: FileEntryState = useFileEntryState(file, selected, focused);\n\n        const { fileModDateString, fileSizeString } = useLocalizedFileEntryStrings(\n            file\n        );\n\n        const classes = useStyles(entryState);\n        const ChonkyIcon = useContext(ChonkyIconContext);\n        const fileEntryHtmlProps = useFileEntryHtmlProps(file);\n        return (\n            <div className={classes.listFileEntry} {...fileEntryHtmlProps}>\n                <div className={classes.listFileEntryIcon}>\n                    <ChonkyIcon\n                        icon={entryState.icon}\n                        spin={entryState.iconSpin}\n                        fixedWidth={true}\n                    />\n                </div>\n                <div className={classes.listFileEntryDescription}>\n                    <div\n                        className={classes.listFileEntryName}\n                        title={file ? file.name : undefined}\n                    >\n                        <FileEntryName file={file} />\n                    </div>\n                    <div className={classes.listFileEntryProperties}>\n                        <div className={classes.listFileEntryProperty}>\n                            {file ? (\n                                fileModDateString ?? <span>—</span>\n                            ) : (\n                                <TextPlaceholder minLength={5} maxLength={15} />\n                            )}\n                        </div>\n                        <div className={classes.listFileEntryProperty}>\n                            {file ? (\n                                fileSizeString ?? <span>—</span>\n                            ) : (\n                                <TextPlaceholder minLength={10} maxLength={20} />\n                            )}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"chonky-file-entry-outline\"></div>\n                <div className=\"chonky-file-entry-selection\"></div>\n            </div>\n        );\n    }\n);\n\nconst useStyles = makeLocalChonkyStyles(theme => ({\n    listFileEntry: {\n        fontSize: theme.listFileEntry.fontSize,\n        alignItems: 'center',\n        position: 'relative',\n        display: 'flex',\n        height: '100%',\n    },\n    listFileEntryIcon: {\n        backgroundColor: (state: FileEntryState) => state.color,\n        boxShadow: 'inset rgba(255, 255, 255, 0.5) 0 0 0 999px',\n        borderRadius: theme.listFileEntry.iconBorderRadius,\n        fontSize: theme.listFileEntry.iconFontSize,\n        color: '#fff',\n        padding: 8,\n    },\n    listFileEntryDescription: {\n        flexDirection: 'column',\n        display: 'flex',\n        flexGrow: 1,\n    },\n    listFileEntryName: {\n        padding: [0, 8, 4, 8],\n    },\n    listFileEntryProperties: {\n        fontSize: theme.listFileEntry.propertyFontSize,\n        flexDirection: 'row',\n        display: 'flex',\n    },\n    listFileEntryProperty: {\n        padding: [0, 8],\n        opacity: 0.4,\n    },\n}));\n","import React from 'react';\nimport { Nullable } from 'tsdef';\n\nimport { DndEntryState } from '../../types/file-list.types';\nimport { FileData } from '../../types/file.types';\nimport { useDndHoverOpen, useFileEntryDnD } from '../../util/dnd';\nimport { FileHelper } from '../../util/file-helper';\nimport { makeLocalChonkyStyles } from '../../util/styles';\n\nexport interface DnDFileEntryProps {\n    file: Nullable<FileData>;\n    children: (dndState: DndEntryState) => React.ReactElement;\n}\n\nexport const DnDFileEntry = React.memo(({ file, children }: DnDFileEntryProps) => {\n    const { drop, drag, dndState } = useFileEntryDnD(file);\n\n    useDndHoverOpen(file, dndState);\n    const classes = useStyles();\n    return (\n        <div ref={drop} className={classes.fillParent}>\n            <div\n                ref={FileHelper.isDraggable(file) ? drag : null}\n                className={classes.fillParent}\n            >\n                {children(dndState)}\n            </div>\n        </div>\n    );\n});\n\nexport const useStyles = makeLocalChonkyStyles(() => ({\n    fillParent: {\n        height: '100%',\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport c from 'classnames';\nimport React from 'react';\nimport { Nullable } from 'tsdef';\n\nimport { makeGlobalChonkyStyles } from '../../util/styles';\n\nexport interface FileThumbnailProps {\n    className: string;\n    thumbnailUrl: Nullable<string>;\n}\n\nexport const FileThumbnail: React.FC<FileThumbnailProps> = React.memo(props => {\n    const { className, thumbnailUrl } = props;\n\n    const thumbnailStyle: React.CSSProperties = thumbnailUrl ? { backgroundImage: `url('${thumbnailUrl}')` } : {};\n\n    const classes = useStyles();\n    return <div className={c([className, classes.fileThumbnail])} style={thumbnailStyle} />;\n});\nFileThumbnail.displayName = 'FileThumbnail';\n\nconst useStyles = makeGlobalChonkyStyles(() => ({\n    fileThumbnail: {\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        backgroundSize: 'contain',\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { useContext } from 'react';\n\nimport { DndEntryState } from '../../types/file-list.types';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { c, makeLocalChonkyStyles } from '../../util/styles';\nimport { useDndIcon } from './FileEntry-hooks';\n\nexport interface DnDIndicatorProps {\n    className: string;\n    dndState: DndEntryState;\n}\n\nexport const GridEntryDndIndicator: React.FC<DnDIndicatorProps> = React.memo(props => {\n    const { className: externalClassName, dndState } = props;\n    const dndIconName = useDndIcon(dndState);\n    const classes = useStyles(dndState);\n    const ChonkyIcon = useContext(ChonkyIconContext);\n    if (!dndIconName) return null;\n    const className = c({\n        [classes.dndIndicator]: true,\n        [externalClassName]: true,\n    });\n    return (\n        <div className={className}>\n            <ChonkyIcon icon={dndIconName} />\n        </div>\n    );\n});\n\nconst useStyles = makeLocalChonkyStyles(theme => ({\n    dndIndicator: {\n        color: (dndState: DndEntryState) =>\n            dndState.dndIsOver\n                ? dndState.dndCanDrop\n                    ? theme.dnd.canDropColor\n                    : theme.dnd.cannotDropColor\n                : '#000',\n        boxSizing: 'border-box',\n        position: 'absolute',\n        fontSize: '1.2em',\n        opacity: 0.6,\n        padding: 6,\n        '&:before': {\n            borderBottom: '50px solid transparent',\n            borderLeft: '50px solid #fff',\n            position: 'absolute',\n            content: '\"\"',\n            zIndex: -1,\n            left: 0,\n            top: 0,\n        },\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { useContext, useEffect } from 'react';\nimport { Nullable } from 'tsdef';\n\nimport { DndEntryState } from '../../types/file-list.types';\nimport { ChonkyIconName } from '../../types/icons.types';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { c, important, makeLocalChonkyStyles } from '../../util/styles';\nimport { FileThumbnail } from './FileThumbnail';\nimport { GridEntryDndIndicator } from './GridEntryDndIndicator';\n\nexport type FileEntryState = {\n    childrenCount: Nullable<number>;\n    color: string;\n    icon: ChonkyIconName | string;\n    thumbnailUrl: Nullable<string>;\n    iconSpin: boolean;\n    selected: boolean;\n    focused: boolean;\n};\n\nexport interface FileEntryPreviewProps {\n    className?: string;\n    entryState: FileEntryState;\n    dndState: DndEntryState;\n}\n\nexport const GridEntryPreviewFolder: React.FC<FileEntryPreviewProps> = React.memo(props => {\n    const { className: externalClassName, entryState, dndState } = props;\n\n    const folderClasses = useFolderStyles(entryState);\n    const fileClasses = useFileStyles(entryState);\n    const commonClasses = useCommonEntryStyles(entryState);\n    const className = c({\n        [folderClasses.previewFile]: true,\n        [externalClassName || '']: !!externalClassName,\n    });\n    return (\n        <div className={className}>\n            <div className={folderClasses.folderBackSideMid}>\n                <div className={folderClasses.folderBackSideTop} />\n                <div className={folderClasses.folderFrontSide}>\n                    <GridEntryDndIndicator className={fileClasses.dndIndicator} dndState={dndState} />\n                    <div className={c([fileClasses.fileIcon, folderClasses.fileIcon])}>{entryState.childrenCount}</div>\n                    <div className={commonClasses.selectionIndicator}></div>\n                    <FileThumbnail className={fileClasses.thumbnail} thumbnailUrl={entryState.thumbnailUrl} />\n                </div>\n            </div>\n        </div>\n    );\n});\nGridEntryPreviewFolder.displayName = 'GridEntryPreviewFolder';\n\nconst useFolderStyles = makeLocalChonkyStyles(theme => ({\n    previewFile: {\n        borderRadius: theme.gridFileEntry.borderRadius,\n        position: 'relative',\n        overflow: 'hidden',\n    },\n    folderBackSideTop: {\n        backgroundColor: (state: FileEntryState) => state.color,\n        boxShadow: (state: FileEntryState) => {\n            let color = theme.gridFileEntry.folderBackColorTint;\n            if (state.focused) color = 'rgba(0, 0, 0, 0.3)';\n            else if (state.selected) color = 'rgba(0, 153, 255, .4)';\n            return `inset ${color} 0 0 0 999px`;\n        },\n        borderTopLeftRadius: theme.gridFileEntry.borderRadius,\n        borderTopRightRadius: 10,\n        position: 'absolute',\n        right: '60%',\n        height: 13,\n        top: -10,\n        left: 0,\n        '&:after': {\n            borderRightColor: theme.palette.background.paper,\n            borderTopColor: theme.palette.background.paper,\n            borderBottomColor: 'transparent',\n            borderLeftColor: 'transparent',\n            borderWidth: [0, 15, 10, 0],\n            borderStyle: 'solid',\n            position: 'absolute',\n            display: 'block',\n            content: '\"\"',\n            right: 0,\n            top: 0,\n        },\n    },\n    folderBackSideMid: {\n        backgroundColor: (state: FileEntryState) => state.color,\n        boxShadow: (state: FileEntryState) => {\n            let color = theme.gridFileEntry.folderBackColorTint;\n            if (state.focused) color = 'rgba(0, 0, 0, 0.3)';\n            else if (state.selected) color = 'rgba(0, 153, 255, .4)';\n            return `inset ${color} 0 0 0 999px`;\n        },\n        borderTopRightRadius: theme.gridFileEntry.borderRadius,\n        position: 'absolute',\n        bottom: 0,\n        right: 0,\n        left: 0,\n        top: 10,\n    },\n    folderFrontSide: {\n        boxShadow: (state: FileEntryState) => {\n            const shadows: string[] = [];\n            if (state.focused) shadows.push('inset rgba(0, 0, 0, 1) 0 0 0 3px');\n            if (state.selected) shadows.push('inset rgba(0, 153, 255, .65) 0 0 0 3px');\n            shadows.push(`inset ${theme.gridFileEntry.folderFrontColorTint} 0 0 0 999px`);\n            return shadows.join(', ');\n        },\n        backgroundColor: (state: FileEntryState) => state.color,\n        borderRadius: theme.gridFileEntry.borderRadius,\n        position: 'absolute',\n        overflow: 'hidden',\n        bottom: 0,\n        right: 0,\n        left: 0,\n        top: 10,\n    },\n    fileIcon: {\n        fontSize: important(theme.gridFileEntry.childrenCountSize),\n    },\n}));\n\nexport const GridEntryPreviewFile: React.FC<FileEntryPreviewProps> = React.memo(props => {\n    const { className: externalClassName, entryState, dndState } = props;\n\n    const fileClasses = useFileStyles(entryState);\n    const commonClasses = useCommonEntryStyles(entryState);\n    const ChonkyIcon = useContext(ChonkyIconContext);\n    const className = c({\n        [fileClasses.previewFile]: true,\n        [externalClassName || '']: !!externalClassName,\n    });\n    return (\n        <div className={className}>\n            <GridEntryDndIndicator className={fileClasses.dndIndicator} dndState={dndState} />\n            <div className={fileClasses.fileIcon}>\n                <ChonkyIcon icon={entryState.icon} spin={entryState.iconSpin} />\n            </div>\n            <div className={commonClasses.selectionIndicator}></div>\n            <FileThumbnail className={fileClasses.thumbnail} thumbnailUrl={entryState.thumbnailUrl} />\n        </div>\n    );\n});\nGridEntryPreviewFile.displayName = 'GridEntryPreviewFile';\n\nconst useFileStyles = makeLocalChonkyStyles(theme => ({\n    previewFile: {\n        boxShadow: (state: FileEntryState) => {\n            const shadows: string[] = [];\n            if (state.selected) shadows.push('inset rgba(0,153,255, .65) 0 0 0 3px');\n            if (state.focused) shadows.push('inset rgba(0, 0, 0, 1) 0 0 0 3px');\n            shadows.push(`inset ${theme.gridFileEntry.fileColorTint} 0 0 0 999px`);\n            return shadows.join(', ');\n        },\n        backgroundColor: (state: FileEntryState) => state.color,\n        borderRadius: theme.gridFileEntry.borderRadius,\n        position: 'relative',\n        overflow: 'hidden',\n    },\n    dndIndicator: {\n        zIndex: 14,\n    },\n    fileIcon: {\n        transform: 'translateX(-50%) translateY(-50%)',\n        fontSize: theme.gridFileEntry.iconSize,\n        opacity: (state: FileEntryState) => (state.thumbnailUrl && !state.focused ? 0 : 1),\n        color: (state: FileEntryState) =>\n            state.focused ? theme.gridFileEntry.iconColorFocused : theme.gridFileEntry.iconColor,\n        position: 'absolute',\n        left: '50%',\n        zIndex: 12,\n        top: '50%',\n    },\n    thumbnail: {\n        borderRadius: theme.gridFileEntry.borderRadius,\n        position: 'absolute',\n        zIndex: 6,\n        bottom: 5,\n        right: 5,\n        left: 5,\n        top: 5,\n    },\n}));\n\nexport const useCommonEntryStyles = makeLocalChonkyStyles(() => ({\n    selectionIndicator: {\n        display: (state: FileEntryState) => (state.selected ? 'block' : 'none'),\n        background:\n            'repeating-linear-gradient(' +\n            '45deg,' +\n            'rgba(0,153,255,.14),' +\n            'rgba(0,153,255,.14) 10px,' +\n            'rgba(0,153,255,.25) 0,' +\n            'rgba(0,153,255,.25) 20px' +\n            ')',\n        backgroundColor: 'rgba(0, 153, 255, .14)',\n        position: 'absolute',\n        height: '100%',\n        width: '100%',\n        zIndex: 10,\n    },\n    focusIndicator: {\n        display: (state: FileEntryState) => (state.focused ? 'block' : 'none'),\n        boxShadow: 'inset rgba(0, 0, 0, 1) 0 0 0 2px',\n        position: 'absolute',\n        height: '100%',\n        width: '100%',\n        zIndex: 11,\n    },\n}));\n","import React from 'react';\n\nimport { FileEntryProps } from '../../types/file-list.types';\nimport { FileHelper } from '../../util/file-helper';\nimport { c, makeLocalChonkyStyles } from '../../util/styles';\nimport { useFileEntryHtmlProps, useFileEntryState } from './FileEntry-hooks';\nimport { FileEntryName } from './FileEntryName';\nimport { FileEntryState, GridEntryPreviewFile, GridEntryPreviewFolder } from './GridEntryPreview';\n\nexport const GridEntry: React.FC<FileEntryProps> = React.memo(({ file, selected, focused, dndState }) => {\n    const isDirectory = FileHelper.isDirectory(file);\n    const entryState = useFileEntryState(file, selected, focused);\n\n    const classes = useFileEntryStyles(entryState);\n    const fileEntryHtmlProps = useFileEntryHtmlProps(file);\n    const entryClassName = c({\n        [classes.gridFileEntry]: true,\n    });\n    return (\n        <div className={entryClassName} {...fileEntryHtmlProps}>\n            {isDirectory ? (\n                <GridEntryPreviewFolder\n                    className={classes.gridFileEntryPreview}\n                    entryState={entryState}\n                    dndState={dndState}\n                />\n            ) : (\n                <GridEntryPreviewFile\n                    className={classes.gridFileEntryPreview}\n                    entryState={entryState}\n                    dndState={dndState}\n                />\n            )}\n            <div className={classes.gridFileEntryNameContainer}>\n                <FileEntryName className={classes.gridFileEntryName} file={file} />\n            </div>\n        </div>\n    );\n});\nGridEntry.displayName = 'GridEntry';\n\nconst useFileEntryStyles = makeLocalChonkyStyles(theme => ({\n    gridFileEntry: {\n        flexDirection: 'column',\n        display: 'flex',\n        height: '100%',\n    },\n    gridFileEntryPreview: {\n        flexGrow: 1,\n    },\n    gridFileEntryNameContainer: {\n        fontSize: theme.gridFileEntry.fontSize,\n        wordBreak: 'break-word',\n        textAlign: 'center',\n        paddingTop: 5,\n    },\n    gridFileEntryName: {\n        backgroundColor: (state: FileEntryState) => (state.selected ? 'rgba(0,153,255, .25)' : 'transparent'),\n        textDecoration: (state: FileEntryState) => (state.focused ? 'underline' : 'none'),\n        borderRadius: 3,\n        padding: [2, 4],\n    },\n}));\n","import React, { useContext, useMemo } from 'react';\n\nimport { DndEntryState, FileEntryProps } from '../../types/file-list.types';\nimport { useLocalizedFileEntryStrings } from '../../util/i18n';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { c, makeLocalChonkyStyles } from '../../util/styles';\nimport { TextPlaceholder } from '../external/TextPlaceholder';\nimport {\n    useDndIcon,\n    useFileEntryHtmlProps,\n    useFileEntryState,\n} from './FileEntry-hooks';\nimport { FileEntryName } from './FileEntryName';\nimport { FileEntryState, useCommonEntryStyles } from './GridEntryPreview';\n\ninterface StyleState {\n    entryState: FileEntryState;\n    dndState: DndEntryState;\n}\n\nexport const ListEntry: React.FC<FileEntryProps> = React.memo(\n    ({ file, selected, focused, dndState }) => {\n        const entryState: FileEntryState = useFileEntryState(file, selected, focused);\n        const dndIconName = useDndIcon(dndState);\n\n        const { fileModDateString, fileSizeString } = useLocalizedFileEntryStrings(\n            file\n        );\n        const styleState = useMemo<StyleState>(\n            () => ({\n                entryState,\n                dndState,\n            }),\n            [dndState, entryState]\n        );\n        const classes = useStyles(styleState);\n        const commonClasses = useCommonEntryStyles(entryState);\n        const ChonkyIcon = useContext(ChonkyIconContext);\n        const fileEntryHtmlProps = useFileEntryHtmlProps(file);\n        return (\n            <div className={classes.listFileEntry} {...fileEntryHtmlProps}>\n                <div className={commonClasses.focusIndicator}></div>\n                <div\n                    className={c([\n                        commonClasses.selectionIndicator,\n                        classes.listFileEntrySelection,\n                    ])}\n                ></div>\n                <div className={classes.listFileEntryIcon}>\n                    <ChonkyIcon\n                        icon={dndIconName ?? entryState.icon}\n                        spin={dndIconName ? false : entryState.iconSpin}\n                        fixedWidth={true}\n                    />\n                </div>\n                <div\n                    className={classes.listFileEntryName}\n                    title={file ? file.name : undefined}\n                >\n                    <FileEntryName file={file} />\n                </div>\n                <div className={classes.listFileEntryProperty}>\n                    {file ? (\n                        fileModDateString ?? <span>—</span>\n                    ) : (\n                        <TextPlaceholder minLength={5} maxLength={15} />\n                    )}\n                </div>\n                <div className={classes.listFileEntryProperty}>\n                    {file ? (\n                        fileSizeString ?? <span>—</span>\n                    ) : (\n                        <TextPlaceholder minLength={10} maxLength={20} />\n                    )}\n                </div>\n            </div>\n        );\n    }\n);\n\nconst useStyles = makeLocalChonkyStyles(theme => ({\n    listFileEntry: {\n        boxShadow: `inset ${theme.palette.divider} 0 -1px 0`,\n        fontSize: theme.listFileEntry.fontSize,\n        color: ({ dndState }: StyleState) =>\n            dndState.dndIsOver\n                ? dndState.dndCanDrop\n                    ? theme.dnd.canDropColor\n                    : theme.dnd.cannotDropColor\n                : 'inherit',\n        alignItems: 'center',\n        position: 'relative',\n        display: 'flex',\n        height: '100%',\n    },\n    listFileEntrySelection: {\n        opacity: 0.6,\n    },\n    listFileEntryIcon: {\n        color: ({ entryState, dndState }: StyleState) =>\n            dndState.dndIsOver\n                ? dndState.dndCanDrop\n                    ? theme.dnd.canDropColor\n                    : theme.dnd.cannotDropColor\n                : entryState.color,\n        fontSize: theme.listFileEntry.iconFontSize,\n        boxSizing: 'border-box',\n        padding: [2, 4],\n        zIndex: 20,\n    },\n    listFileEntryName: {\n        textOverflow: 'ellipsis',\n        boxSizing: 'border-box',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        flex: '1 1 300px',\n        paddingLeft: 8,\n        zIndex: 20,\n    },\n    listFileEntryProperty: {\n        fontSize: theme.listFileEntry.propertyFontSize,\n        boxSizing: 'border-box',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        flex: '0 1 150px',\n        padding: [2, 8],\n        zIndex: 20,\n    },\n}));\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Nullable } from 'tsdef';\n\nimport { selectFileData, selectIsDnDDisabled, selectIsFileSelected } from '../../redux/selectors';\nimport { useParamSelector } from '../../redux/store';\nimport { DndEntryState, FileEntryProps } from '../../types/file-list.types';\nimport { FileViewMode } from '../../types/file-view.types';\nimport { FileHelper } from '../../util/file-helper';\nimport { makeGlobalChonkyStyles } from '../../util/styles';\nimport { ClickableWrapper, ClickableWrapperProps } from '../internal/ClickableWrapper';\nimport { CompactEntry } from './CompactEntry';\nimport { DnDFileEntry } from './DnDFileEntry';\nimport { useFileClickHandlers } from './FileEntry-hooks';\nimport { GridEntry } from './GridEntry';\nimport { ListEntry } from './ListEntry';\n\nexport interface SmartFileEntryProps {\n    fileId: Nullable<string>;\n    displayIndex: number;\n    fileViewMode: FileViewMode;\n}\n\nconst disabledDndState: DndEntryState = {\n    dndIsDragging: false,\n    dndIsOver: false,\n    dndCanDrop: false,\n};\n\nexport const SmartFileEntry: React.FC<SmartFileEntryProps> = React.memo(({ fileId, displayIndex, fileViewMode }) => {\n    const classes = useStyles();\n\n    // Basic properties\n    const file = useParamSelector(selectFileData, fileId);\n    const selected = useParamSelector(selectIsFileSelected, fileId);\n    const dndDisabled = useSelector(selectIsDnDDisabled);\n\n    // Clickable wrapper properties\n    const fileClickHandlers = useFileClickHandlers(file, displayIndex);\n    const [focused, setFocused] = useState(false);\n    const clickableWrapperProps: ClickableWrapperProps = {\n        wrapperTag: 'div',\n        passthroughProps: { className: classes.fileEntryClickableWrapper },\n        ...(FileHelper.isClickable(file) ? fileClickHandlers : undefined),\n        setFocused,\n    };\n\n    // File entry properties\n    const fileEntryProps: Omit<FileEntryProps, 'dndState'> = {\n        file,\n        selected,\n        focused,\n    };\n\n    let EntryComponent: React.FC<FileEntryProps>;\n    if (fileViewMode === FileViewMode.List) EntryComponent = ListEntry;\n    else if (fileViewMode === FileViewMode.Compact) EntryComponent = CompactEntry;\n    else EntryComponent = GridEntry;\n\n    return dndDisabled ? (\n        <ClickableWrapper {...clickableWrapperProps}>\n            <EntryComponent {...fileEntryProps} dndState={disabledDndState} />\n        </ClickableWrapper>\n    ) : (\n        <DnDFileEntry file={file}>\n            {dndState => (\n                <ClickableWrapper {...clickableWrapperProps}>\n                    <EntryComponent {...fileEntryProps} dndState={dndState} />\n                </ClickableWrapper>\n            )}\n        </DnDFileEntry>\n    );\n});\nSmartFileEntry.displayName = 'SmartFileEntry';\n\nconst useStyles = makeGlobalChonkyStyles(() => ({\n    fileEntryClickableWrapper: {\n        // We disable default browser outline because Chonky provides its own outline\n        // (which doesn't compromise accessibility, hopefully)\n        outline: 'none !important',\n        position: 'relative',\n        height: '100%',\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { CSSProperties, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { VariableSizeGrid } from 'react-window';\n\nimport { ChonkyActions } from '../../action-definitions';\nimport { selectFileViewConfig, selectors } from '../../redux/selectors';\nimport { FileViewConfigGrid } from '../../types/file-view.types';\nimport { RootState } from '../../types/redux.types';\nimport { useInstanceVariable } from '../../util/hooks-helpers';\nimport { makeGlobalChonkyStyles, useIsMobileBreakpoint } from '../../util/styles';\nimport { SmartFileEntry } from './FileEntry';\n\nexport interface FileListGridProps {\n    width: number;\n    height: number;\n}\n\ninterface GridConfig {\n    rowCount: number;\n    columnCount: number;\n    gutter: number;\n    rowHeight: number;\n    columnWidth: number;\n}\n\nexport const isMobileDevice = () => {\n    // noinspection JSDeprecatedSymbols\n    return typeof window.orientation !== 'undefined' || navigator.userAgent.indexOf('IEMobile') !== -1;\n};\n\nexport const getGridConfig = (\n    width: number,\n    fileCount: number,\n    viewConfig: FileViewConfigGrid,\n    isMobileBreakpoint: boolean\n): GridConfig => {\n    const gutter = isMobileBreakpoint ? 5 : 8;\n    const scrollbar = isMobileDevice() ? 0 : 18;\n\n    let columnCount: number;\n    let columnWidth: number;\n    if (isMobileBreakpoint) {\n        columnCount = 2;\n        columnWidth = (width - gutter - scrollbar) / columnCount;\n    } else {\n        columnWidth = viewConfig.entryWidth;\n        columnCount = Math.max(1, Math.floor((width - scrollbar) / (columnWidth + gutter)));\n    }\n\n    const rowCount = Math.ceil(fileCount / columnCount);\n\n    return {\n        rowCount,\n        columnCount,\n        gutter,\n        rowHeight: viewConfig.entryHeight,\n        columnWidth,\n    };\n};\n\nexport const GridContainer: React.FC<FileListGridProps> = React.memo(props => {\n    const { width, height } = props;\n\n    const viewConfig = useSelector(selectFileViewConfig) as FileViewConfigGrid;\n    const displayFileIds = useSelector(selectors.getDisplayFileIds);\n    const fileCount = useMemo(() => displayFileIds.length, [displayFileIds]);\n\n    const gridRef = useRef<VariableSizeGrid>();\n    const isMobileBreakpoint = useIsMobileBreakpoint();\n\n    // Whenever the grid config changes at runtime, we call a method on the\n    // `VariableSizeGrid` handle to reset column width/row height cache.\n    // !!! Note that we deliberately update the `gridRef` firsts and update the React\n    //     state AFTER that. This is needed to avoid file entries jumping up/down.\n    const [gridConfig, setGridConfig] = useState(getGridConfig(width, fileCount, viewConfig, isMobileBreakpoint));\n    const gridConfigRef = useRef(gridConfig);\n    useEffect(() => {\n        const oldConf = gridConfigRef.current;\n        const newConf = getGridConfig(width, fileCount, viewConfig, isMobileBreakpoint);\n\n        gridConfigRef.current = newConf;\n        if (gridRef.current) {\n            if (oldConf.rowCount !== newConf.rowCount) {\n                gridRef.current.resetAfterRowIndex(Math.min(oldConf.rowCount, newConf.rowCount) - 1);\n            }\n            if (oldConf.columnCount !== newConf.columnCount) {\n                gridRef.current.resetAfterColumnIndex(Math.min(oldConf.columnCount, newConf.rowCount) - 1);\n            }\n            if (oldConf.columnWidth !== newConf.columnWidth) {\n                gridRef.current.resetAfterIndices({ columnIndex: 0, rowIndex: 0 });\n            }\n        }\n\n        setGridConfig(newConf);\n    }, [setGridConfig, gridConfigRef, isMobileBreakpoint, width, viewConfig, fileCount]);\n\n    const sizers = useMemo(() => {\n        const gc = gridConfigRef;\n        return {\n            getColumnWidth: (index: number) =>\n                gc.current.columnWidth! + (index === gc.current.columnCount - 1 ? 0 : gc.current.gutter),\n            getRowHeight: (index: number) =>\n                gc.current.rowHeight + (index === gc.current.rowCount - 1 ? 0 : gc.current.gutter),\n        };\n    }, [gridConfigRef]);\n\n    const displayFileIdsRef = useInstanceVariable(useSelector(selectors.getDisplayFileIds));\n    const getItemKey = useCallback(\n        (data: { columnIndex: number; rowIndex: number; data: any }) => {\n            const index = data.rowIndex * gridConfigRef.current.columnCount + data.columnIndex;\n\n            return displayFileIdsRef.current[index] ?? `loading-file-${index}`;\n        },\n        [gridConfigRef, displayFileIdsRef]\n    );\n\n    const cellRenderer = useCallback(\n        (data: { rowIndex: number; columnIndex: number; style: CSSProperties }) => {\n            const gc = gridConfigRef;\n            const index = data.rowIndex * gc.current.columnCount + data.columnIndex;\n            const fileId = displayFileIds[index];\n            if (displayFileIds[index] === undefined) return null;\n\n            const styleWithGutter: CSSProperties = {\n                ...data.style,\n                paddingRight: data.columnIndex === gc.current.columnCount - 1 ? 0 : gc.current.gutter,\n                paddingBottom: data.rowIndex === gc.current.rowCount - 1 ? 0 : gc.current.gutter,\n                boxSizing: 'border-box',\n            };\n\n            return (\n                <div style={styleWithGutter}>\n                    <SmartFileEntry fileId={fileId ?? null} displayIndex={index} fileViewMode={viewConfig.mode} />\n                </div>\n            );\n        },\n        [displayFileIds, viewConfig.mode]\n    );\n\n    const classes = useStyles();\n    const gridComponent = useMemo(() => {\n        return (\n            <VariableSizeGrid\n                ref={gridRef as any}\n                className={classes.gridContainer}\n                estimatedRowHeight={gridConfig.rowHeight + gridConfig.gutter}\n                rowHeight={sizers.getRowHeight}\n                estimatedColumnWidth={gridConfig.columnWidth + gridConfig.gutter}\n                columnWidth={sizers.getColumnWidth}\n                columnCount={gridConfig.columnCount}\n                height={height}\n                rowCount={gridConfig.rowCount}\n                width={width}\n                itemKey={getItemKey}\n            >\n                {cellRenderer}\n            </VariableSizeGrid>\n        );\n    }, [\n        classes.gridContainer,\n        gridConfig.rowHeight,\n        gridConfig.gutter,\n        gridConfig.columnWidth,\n        gridConfig.columnCount,\n        gridConfig.rowCount,\n        sizers.getRowHeight,\n        sizers.getColumnWidth,\n        height,\n        width,\n        getItemKey,\n        cellRenderer,\n    ]);\n\n    return gridComponent;\n});\n\nconst useStyles = makeGlobalChonkyStyles(() => ({\n    gridContainer: {},\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { CSSProperties, useCallback, useMemo, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { FixedSizeList } from 'react-window';\n\nimport { selectFileViewConfig, selectors } from '../../redux/selectors';\nimport { FileViewMode } from '../../types/file-view.types';\nimport { useInstanceVariable } from '../../util/hooks-helpers';\nimport { makeLocalChonkyStyles } from '../../util/styles';\nimport { SmartFileEntry } from './FileEntry';\n\nexport interface FileListListProps {\n    width: number;\n    height: number;\n}\n\nexport const ListContainer: React.FC<FileListListProps> = React.memo(props => {\n    const { width, height } = props;\n\n    const viewConfig = useSelector(selectFileViewConfig);\n\n    const listRef = useRef<FixedSizeList>();\n\n    const displayFileIds = useSelector(selectors.getDisplayFileIds);\n    const displayFileIdsRef = useInstanceVariable(displayFileIds);\n    const getItemKey = useCallback(\n        (index: number) => displayFileIdsRef.current[index] ?? `loading-file-${index}`,\n        [displayFileIdsRef]\n    );\n\n    const classes = useStyles();\n    const listComponent = useMemo(() => {\n        // When entry size is null, we use List view\n        const rowRenderer = (data: { index: number; style: CSSProperties }) => {\n            return (\n                <div style={data.style}>\n                    <SmartFileEntry\n                        fileId={displayFileIds[data.index] ?? null}\n                        displayIndex={data.index}\n                        fileViewMode={FileViewMode.List}\n                    />\n                </div>\n            );\n        };\n\n        return (\n            <FixedSizeList\n                ref={listRef as any}\n                className={classes.listContainer}\n                itemSize={viewConfig.entryHeight}\n                height={height}\n                itemCount={displayFileIds.length}\n                width={width}\n                itemKey={getItemKey}\n            >\n                {rowRenderer}\n            </FixedSizeList>\n        );\n    }, [\n        classes.listContainer,\n        viewConfig.entryHeight,\n        height,\n        displayFileIds,\n        width,\n        getItemKey,\n    ]);\n\n    return listComponent;\n});\n\nconst useStyles = makeLocalChonkyStyles(theme => ({\n    listContainer: {\n        borderTop: `solid 1px ${theme.palette.divider}`,\n    },\n}));\n","import React, { UIEvent, useCallback, useContext, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport AutoSizer from 'react-virtualized-auto-sizer';\n\nimport { ChonkyActions } from '../../action-definitions/index';\nimport { selectCurrentFolder, selectFileViewConfig, selectors } from '../../redux/selectors';\nimport { FileViewMode } from '../../types/file-view.types';\nimport { ChonkyIconName } from '../../types/icons.types';\nimport { useFileDrop } from '../../util/dnd';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport {\n    c, getStripeGradient, makeGlobalChonkyStyles, makeLocalChonkyStyles\n} from '../../util/styles';\nimport { FileListEmpty } from './FileListEmpty';\nimport { GridContainer } from './GridContainer';\nimport { ListContainer } from './ListContainer';\n\nexport interface FileListProps {\n    onScroll?: (e: UIEvent<HTMLDivElement>) => void;\n}\n\ninterface StyleState {\n    dndCanDrop: boolean;\n    dndIsOverCurrent: boolean;\n}\n\nexport const FileList: React.FC<FileListProps> = React.memo((props: FileListProps) => {\n    const displayFileIds = useSelector(selectors.getDisplayFileIds);\n    const viewConfig = useSelector(selectFileViewConfig);\n\n    const currentFolder = useSelector(selectCurrentFolder);\n    const { drop, dndCanDrop, dndIsOverCurrent } = useFileDrop({ file: currentFolder });\n    const styleState = useMemo<StyleState>(() => ({ dndCanDrop, dndIsOverCurrent }), [dndCanDrop, dndIsOverCurrent]);\n\n    const localClasses = useLocalStyles(styleState);\n    const classes = useStyles(viewConfig);\n    const { onScroll } = props;\n\n    // In Chonky v0.x, this field was user-configurable. In Chonky v1.x+, we hardcode\n    // this to `true` to simplify configuration. Users can just wrap Chonky in their\n    // own `div` if they want to have finer control over the height.\n    const fillParentContainer = true;\n\n    const listRenderer = useCallback(\n        ({ width, height }: { width: number; height: number }) => {\n            if (displayFileIds.length === 0) {\n                return <FileListEmpty width={width} height={viewConfig.entryHeight} />;\n            } else if (viewConfig.mode === FileViewMode.List) {\n                return <ListContainer width={width} height={height} />;\n            } else {\n                return <GridContainer width={width} height={height} />;\n            }\n        },\n        [displayFileIds, viewConfig]\n    );\n\n    const ChonkyIcon = useContext(ChonkyIconContext);\n    return (\n        <div onScroll={onScroll} ref={drop} className={c([classes.fileListWrapper, localClasses.fileListWrapper])} role=\"list\">\n            <div className={localClasses.dndDropZone}>\n                <div className={localClasses.dndDropZoneIcon}>\n                    <ChonkyIcon icon={dndCanDrop ? ChonkyIconName.dndCanDrop : ChonkyIconName.dndCannotDrop} />\n                </div>\n            </div>\n            <AutoSizer disableHeight={!fillParentContainer}>{listRenderer}</AutoSizer>\n        </div>\n    );\n});\nFileList.displayName = 'FileList';\n\nconst useLocalStyles = makeLocalChonkyStyles(theme => ({\n    fileListWrapper: {\n        minHeight: ChonkyActions.EnableGridView.fileViewConfig.entryHeight + 2,\n        background: (state: StyleState) =>\n            state.dndIsOverCurrent && state.dndCanDrop\n                ? state.dndCanDrop\n                    ? getStripeGradient(theme.dnd.fileListCanDropMaskOne, theme.dnd.fileListCanDropMaskTwo)\n                    : getStripeGradient(theme.dnd.fileListCannotDropMaskOne, theme.dnd.fileListCannotDropMaskTwo)\n                : 'none',\n    },\n    dndDropZone: {\n        display: (state: StyleState) =>\n            // When we cannot drop, we don't show an indicator at all\n            state.dndIsOverCurrent && state.dndCanDrop ? 'block' : 'none',\n        borderRadius: theme.gridFileEntry.borderRadius,\n        pointerEvents: 'none',\n        position: 'absolute',\n        height: '100%',\n        width: '100%',\n        zIndex: 2,\n    },\n    dndDropZoneIcon: {\n        backgroundColor: (state: StyleState) => (state.dndCanDrop ? theme.dnd.canDropMask : theme.dnd.cannotDropMask),\n        color: (state: StyleState) => (state.dndCanDrop ? theme.dnd.canDropColor : theme.dnd.cannotDropColor),\n        borderRadius: theme.gridFileEntry.borderRadius,\n        transform: 'translateX(-50%) translateY(-50%)',\n        position: 'absolute',\n        textAlign: 'center',\n        lineHeight: '60px',\n        fontSize: '2em',\n        left: '50%',\n        height: 60,\n        top: '50%',\n        width: 60,\n    },\n}));\n\nconst useStyles = makeGlobalChonkyStyles(() => ({\n    fileListWrapper: {\n        height: '100%',\n        maxHeight: '100%',\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { ReactElement, useEffect, useMemo } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Menu from '@material-ui/core/Menu';\n\nimport { reduxActions } from '../../redux/reducers';\nimport { selectContextMenuConfig, selectContextMenuItems } from '../../redux/selectors';\nimport { getI18nId, I18nNamespace } from '../../util/i18n';\nimport { important, makeGlobalChonkyStyles } from '../../util/styles';\nimport { useContextMenuDismisser } from './FileContextMenu-hooks';\nimport { SmartToolbarDropdownButton } from './ToolbarDropdownButton';\n\nexport interface FileContextMenuProps {}\n\nexport const FileContextMenu: React.FC<FileContextMenuProps> = React.memo(() => {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(reduxActions.setContextMenuMounted(true));\n        return () => {\n            dispatch(reduxActions.setContextMenuMounted(false));\n        };\n    }, [dispatch]);\n\n    const intl = useIntl();\n    const browserMenuShortcutString = intl.formatMessage(\n        {\n            id: getI18nId(I18nNamespace.FileContextMenu, 'browserMenuShortcut'),\n            defaultMessage: 'Browser menu: {shortcut}',\n        },\n        { shortcut: <strong>Alt + Right Click</strong> }\n    );\n\n    const contextMenuConfig = useSelector(selectContextMenuConfig);\n    const contextMenuItems = useSelector(selectContextMenuItems);\n\n    const hideContextMenu = useContextMenuDismisser();\n    const contextMenuItemComponents = useMemo(() => {\n        const components: ReactElement[] = [];\n        for (let i = 0; i < contextMenuItems.length; ++i) {\n            const item = contextMenuItems[i];\n\n            if (typeof item === 'string') {\n                components.push(\n                    <SmartToolbarDropdownButton\n                        key={`context-menu-item-${item}`}\n                        fileActionId={item}\n                        onClickFollowUp={hideContextMenu}\n                    />\n                );\n            } else {\n                item.fileActionIds.map(id =>\n                    components.push(\n                        <SmartToolbarDropdownButton\n                            key={`context-menu-item-${item.name}-${id}`}\n                            fileActionId={id}\n                            onClickFollowUp={hideContextMenu}\n                        />\n                    )\n                );\n            }\n        }\n        return components;\n    }, [contextMenuItems, hideContextMenu]);\n\n    const anchorPosition = useMemo(\n        () => (contextMenuConfig ? { top: contextMenuConfig.mouseY, left: contextMenuConfig.mouseX } : undefined),\n        [contextMenuConfig]\n    );\n\n    const classes = useStyles();\n    return (\n        <Menu\n            elevation={2}\n            disablePortal\n            onClose={hideContextMenu}\n            transitionDuration={150}\n            open={!!contextMenuConfig}\n            anchorPosition={anchorPosition}\n            anchorReference=\"anchorPosition\"\n            classes={{ list: classes.contextMenuList }}\n        >\n            {contextMenuItemComponents}\n            <ListSubheader component=\"div\" className={classes.browserMenuTooltip}>\n                {browserMenuShortcutString}\n            </ListSubheader>\n        </Menu>\n    );\n});\n\nconst useStyles = makeGlobalChonkyStyles(() => ({\n    contextMenuList: {\n        paddingBottom: important(0),\n        paddingTop: important(0),\n    },\n    browserMenuTooltip: {\n        lineHeight: important('30px'),\n        fontSize: important('0.7em'),\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React from 'react';\n\nimport { FileBrowserHandle, FileBrowserProps } from '../../types/file-browser.types';\nimport { FileList } from '../file-list/FileList';\nimport { FileBrowser } from './FileBrowser';\nimport { FileContextMenu } from './FileContextMenu';\nimport { FileNavbar } from './FileNavbar';\nimport { FileToolbar } from './FileToolbar';\n\nexport const FullFileBrowser = React.memo(\n    React.forwardRef<FileBrowserHandle, FileBrowserProps>((props, ref) => {\n        const { onScroll } = props\n        return (\n            <FileBrowser ref={ref} {...props}>\n                <FileNavbar />\n                <FileToolbar />\n                <FileList onScroll={onScroll}/>\n                <FileContextMenu/>\n            </FileBrowser>\n        );\n    })\n);\nFullFileBrowser.displayName = 'FullFileBrowser';\n","/**\n *\n */\n\nimport { useCallback, useMemo, useState } from 'react';\n\nimport { ChonkyActions } from '../action-definitions';\nimport { FileActionData } from '../types/action-handler.types';\nimport { FileAction } from '../types/action.types';\nimport { FileArray, FileData } from '../types/file.types';\nimport { FileHelper } from '../util/file-helper';\n\nexport interface CustomFileData extends FileData {\n    parentId?: string;\n    childrenIds?: string[];\n}\nexport interface CustomFileMap<FT extends CustomFileData> {\n    [fileId: string]: FT;\n}\nexport interface FileMapParams<FT extends CustomFileData> {\n    baseFileMap: CustomFileMap<FT>;\n    initialFolderId: string;\n}\n\nexport const useFolderChain = <FT extends CustomFileData>(\n    fileMap: CustomFileMap<FT>,\n    currentFolderId: string\n): FileArray<FT> => {\n    return useMemo(() => {\n        const currentFolder = fileMap[currentFolderId];\n\n        const folderChain = [currentFolder];\n\n        let parentId = currentFolder.parentId;\n        while (parentId) {\n            const parentFile = fileMap[parentId];\n            if (parentFile) {\n                folderChain.unshift(parentFile);\n                parentId = parentFile.parentId;\n            } else {\n                break;\n            }\n        }\n\n        return folderChain;\n    }, [currentFolderId, fileMap]);\n};\n\nexport const useFiles = <FT extends CustomFileData>(\n    fileMap: CustomFileMap<FT>,\n    currentFolderId: string\n): FileArray<FT> => {\n    return useMemo(() => {\n        const currentFolder = fileMap[currentFolderId];\n        const childrenIds = currentFolder.childrenIds!;\n        const files = childrenIds.map((fileId: string) => fileMap[fileId]);\n        return files;\n    }, [currentFolderId, fileMap]);\n};\n\nexport const useFileMapMethods = <FT extends CustomFileData>(\n    baseFileMap: CustomFileMap<FT>,\n    initialFolderId: string\n) => {\n    const [fileMap, setFileMap] = useState(baseFileMap);\n    const [currentFolderId, setCurrentFolderId] = useState(initialFolderId);\n    const resetFileMap = useCallback(() => {\n        setFileMap(baseFileMap);\n        setCurrentFolderId(initialFolderId);\n    }, [baseFileMap, initialFolderId]);\n    const moveFiles = useCallback(\n        (files: FT[], source: FT, destination: FT) =>\n            setFileMap(currentFileMap => {\n                const newFileMap = { ...currentFileMap };\n                const moveFileIds = new Set(files.map(f => f.id));\n\n                // Delete files from their source folder.\n                const newSourceChildrenIds = source.childrenIds!.filter(id => !moveFileIds.has(id));\n                newFileMap[source.id] = {\n                    ...source,\n                    childrenIds: newSourceChildrenIds,\n                    childrenCount: newSourceChildrenIds.length,\n                };\n\n                // Add the files to their destination folder.\n                const newDestinationChildrenIds = [...destination.childrenIds!, ...files.map(f => f.id)];\n                newFileMap[destination.id] = {\n                    ...destination,\n                    childrenIds: newDestinationChildrenIds,\n                    childrenCount: newDestinationChildrenIds.length,\n                };\n\n                // Finally, update the parent folder ID on the files from source folder\n                // ID to the destination folder ID.\n                files.forEach(file => {\n                    newFileMap[file.id] = {\n                        ...file,\n                        parentId: destination.id,\n                    };\n                });\n\n                return newFileMap;\n            }),\n        []\n    );\n\n    const methods = useMemo(\n        () => ({\n            setFileMap,\n            setCurrentFolderId,\n            resetFileMap,\n            moveFiles,\n        }),\n        [setFileMap, setCurrentFolderId, resetFileMap, moveFiles]\n    );\n    return {\n        fileMap,\n        currentFolderId,\n        methods,\n    };\n};\nexport type FileMethods = ReturnType<typeof useFileMapMethods>['methods'];\n\nexport const useFileActionHandler = (methods: FileMethods) => {\n    return useCallback(\n        (data: FileActionData<FileAction>) => {\n            if (data.id === ChonkyActions.OpenFiles.id) {\n                const { targetFile, files } = data.payload;\n                const fileToOpen = targetFile ?? files[0];\n                if (fileToOpen && FileHelper.isDirectory(fileToOpen)) {\n                    methods.setCurrentFolderId(fileToOpen.id);\n                }\n            } else if (data.id === ChonkyActions.MoveFiles.id) {\n                methods.moveFiles(data.payload.files, data.payload.source!, data.payload.destination);\n            }\n        },\n        [methods]\n    );\n};\n\nexport const useFileMap = <FT extends CustomFileData = CustomFileData>({\n    baseFileMap,\n    initialFolderId,\n}: FileMapParams<FT>) => {\n    const { fileMap, currentFolderId, methods } = useFileMapMethods(baseFileMap, initialFolderId);\n    const folderChain = useFolderChain(fileMap, currentFolderId);\n    const files = useFiles(fileMap, currentFolderId);\n    const fileActionHandler = useFileActionHandler(methods as FileMethods);\n\n    const data = {\n        fileMap,\n        currentFolderId,\n        folderChain,\n        files,\n    };\n    return { data, methods, fileActionHandler };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}