{"ast":null,"code":"import _objectSpread from \"/Users/Junhaeng/Desktop/cocktail/cocktail-party/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/Junhaeng/Desktop/cocktail/cocktail-party/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/Junhaeng/Desktop/cocktail/cocktail-party/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/**\n *  @since 4.0.0\n *\n * (Single) Region plugin class\n *\n * Must be turned into an observer before instantiating. This is done in\n * `RegionsPlugin` (main plugin class).\n *\n * @extends {Observer}\n */\nexport var Region = /*#__PURE__*/function () {\n  function Region(params, regionsUtils, ws) {\n    var _params$showTooltip,\n      _this = this;\n    _classCallCheck(this, Region);\n    this.wavesurfer = ws;\n    this.wrapper = ws.drawer.wrapper;\n    this.util = ws.util;\n    this.style = this.util.style;\n    this.regionsUtil = regionsUtils;\n    this.vertical = ws.drawer.params.vertical;\n    this.id = params.id == null ? ws.util.getId() : params.id;\n    this.start = Number(params.start) || 0;\n    this.end = params.end == null ?\n    // small marker-like region\n    this.start + 4 / this.wrapper.scrollWidth * this.wavesurfer.getDuration() : Number(params.end);\n    this.resize = params.resize === undefined ? true : Boolean(params.resize);\n    this.drag = params.drag === undefined ? true : Boolean(params.drag);\n    this.contentEditable = Boolean(params.contentEditable);\n    this.removeButton = Boolean(params.removeButton);\n    // reflect resize and drag state of region for region-updated listener\n    this.isResizing = false;\n    this.isDragging = false;\n    this.loop = Boolean(params.loop);\n    this.color = params.color || 'rgba(0, 0, 0, 0.1)';\n    // The left and right handleStyle properties can be set to 'none' for\n    // no styling or can be assigned an object containing CSS properties.\n    this.handleStyle = params.handleStyle || {\n      left: {},\n      right: {}\n    };\n    this.handleLeftEl = null;\n    this.handleRightEl = null;\n    this.data = params.data || {};\n    this.attributes = params.attributes || {};\n    this.showTooltip = (_params$showTooltip = params.showTooltip) !== null && _params$showTooltip !== void 0 ? _params$showTooltip : true;\n    this.maxLength = params.maxLength;\n    // It assumes the minLength parameter value, or the regionsMinLength parameter value, if the first one not provided\n    this.minLength = params.minLength;\n    this._onRedraw = function () {\n      return _this.updateRender();\n    };\n    this.scroll = params.scroll !== false && ws.params.scrollParent;\n    this.scrollSpeed = params.scrollSpeed || 1;\n    this.scrollThreshold = params.scrollThreshold || 10;\n    // Determines whether the context menu is prevented from being opened.\n    this.preventContextMenu = params.preventContextMenu === undefined ? false : Boolean(params.preventContextMenu);\n\n    // select channel ID to set region\n    var channelIdx = params.channelIdx == null ? -1 : parseInt(params.channelIdx);\n    this.channelIdx = channelIdx;\n    this.regionHeight = '100%';\n    this.marginTop = '0px';\n    if (channelIdx !== -1) {\n      var channelCount = this.wavesurfer.backend.buffer != null ? this.wavesurfer.backend.buffer.numberOfChannels : -1;\n      if (channelCount >= 0 && channelIdx < channelCount) {\n        this.regionHeight = Math.floor(1 / channelCount * 100) + '%';\n        this.marginTop = this.wavesurfer.getHeight() * channelIdx + 'px';\n      }\n    }\n    this.formatTimeCallback = params.formatTimeCallback;\n    this.edgeScrollWidth = params.edgeScrollWidth;\n    this.bindInOut();\n    this.render();\n    this.wavesurfer.on('zoom', this._onRedraw);\n    this.wavesurfer.on('redraw', this._onRedraw);\n    this.wavesurfer.fireEvent('region-created', this);\n  }\n\n  /* Update region params. */\n  _createClass(Region, [{\n    key: \"update\",\n    value: function update(params, eventParams) {\n      if (params.start != null) {\n        this.start = Number(params.start);\n      }\n      if (params.end != null) {\n        this.end = Number(params.end);\n      }\n      if (params.loop != null) {\n        this.loop = Boolean(params.loop);\n      }\n      if (params.color != null) {\n        this.color = params.color;\n      }\n      if (params.handleStyle != null) {\n        this.handleStyle = params.handleStyle;\n      }\n      if (params.data != null) {\n        this.data = params.data;\n      }\n      if (params.resize != null) {\n        this.resize = Boolean(params.resize);\n        this.updateHandlesResize(this.resize);\n      }\n      if (params.drag != null) {\n        this.drag = Boolean(params.drag);\n      }\n      if (params.maxLength != null) {\n        this.maxLength = Number(params.maxLength);\n      }\n      if (params.minLength != null) {\n        this.minLength = Number(params.minLength);\n      }\n      if (params.attributes != null) {\n        this.attributes = params.attributes;\n      }\n      this.updateRender();\n      this.fireEvent('update');\n      this.wavesurfer.fireEvent('region-updated', this, eventParams);\n    }\n\n    /* Remove a single region. */\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      if (this.element) {\n        this.element.remove();\n        this.element = null;\n        this.fireEvent('remove');\n        this.wavesurfer.un('zoom', this._onRedraw);\n        this.wavesurfer.un('redraw', this._onRedraw);\n        this.wavesurfer.fireEvent('region-removed', this);\n      }\n    }\n\n    /**\n     * Play the audio region.\n     * @param {number} start Optional offset to start playing at\n     */\n  }, {\n    key: \"play\",\n    value: function play(start) {\n      var s = start || this.start;\n      this.wavesurfer.play(s, this.end);\n      this.fireEvent('play');\n      this.wavesurfer.fireEvent('region-play', this);\n    }\n\n    /**\n     * Play the audio region in a loop.\n     * @param {number} start Optional offset to start playing at\n     * */\n  }, {\n    key: \"playLoop\",\n    value: function playLoop(start) {\n      this.loop = true;\n      this.play(start);\n    }\n\n    /**\n     * Set looping on/off.\n     * @param {boolean} loop True if should play in loop\n     */\n  }, {\n    key: \"setLoop\",\n    value: function setLoop(loop) {\n      this.loop = loop;\n    }\n\n    /* Render a region as a DOM element. */\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.element = this.util.withOrientation(this.wrapper.appendChild(document.createElement('region')), this.vertical);\n      this.element.className = 'wavesurfer-region';\n      if (this.showTooltip) {\n        this.element.title = this.formatTime(this.start, this.end);\n      }\n      this.element.setAttribute('data-id', this.id);\n      for (var attrname in this.attributes) {\n        this.element.setAttribute('data-region-' + attrname, this.attributes[attrname]);\n      }\n      this.style(this.element, {\n        position: 'absolute',\n        zIndex: 3,\n        height: this.regionHeight,\n        top: this.marginTop\n      });\n\n      /* Button Remove Region */\n      if (this.removeButton) {\n        var removeButtonEl = document.createElement('div');\n        removeButtonEl.className = 'remove-region-button';\n        removeButtonEl.textContent = 'тип';\n        this.removeButtonEl = this.element.appendChild(removeButtonEl);\n        var css = {\n          zIndex: 4,\n          position: 'absolute',\n          bottom: 0,\n          right: '4px',\n          cursor: 'pointer',\n          fontSize: '20px',\n          lineHeight: '21px',\n          color: 'grey'\n        };\n        this.style(this.removeButtonEl, css);\n      }\n\n      /* Edit content */\n      if (this.contentEditable) {\n        var contentEl = document.createElement('div');\n        contentEl.className = 'region-content';\n        contentEl.contentEditable = 'true';\n        contentEl.innerText = this.data.text || '';\n        this.contentEl = this.element.appendChild(contentEl);\n        var _css = {\n          zIndex: 4,\n          padding: '2px 5px',\n          cursor: 'text'\n        };\n        this.style(this.contentEl, _css);\n      }\n\n      /* Resize handles */\n      if (this.resize) {\n        this.handleLeftEl = this.util.withOrientation(this.element.appendChild(document.createElement('handle')), this.vertical);\n        this.handleRightEl = this.util.withOrientation(this.element.appendChild(document.createElement('handle')), this.vertical);\n        this.handleLeftEl.className = 'wavesurfer-handle wavesurfer-handle-start';\n        this.handleRightEl.className = 'wavesurfer-handle wavesurfer-handle-end';\n\n        // Default CSS properties for both handles.\n        var _css2 = {\n          cursor: this.vertical ? 'row-resize' : 'col-resize',\n          position: 'absolute',\n          top: '0px',\n          width: '2px',\n          height: '100%',\n          backgroundColor: 'rgba(0, 0, 0, 1)'\n        };\n\n        // Merge CSS properties per handle.\n        var handleLeftCss = this.handleStyle.left !== 'none' ? Object.assign({\n          left: '0px'\n        }, _css2, this.handleStyle.left) : null;\n        var handleRightCss = this.handleStyle.right !== 'none' ? Object.assign({\n          right: '0px'\n        }, _css2, this.handleStyle.right) : null;\n        if (handleLeftCss) {\n          this.style(this.handleLeftEl, handleLeftCss);\n        }\n        if (handleRightCss) {\n          this.style(this.handleRightEl, handleRightCss);\n        }\n      }\n      this.updateRender();\n      this.bindEvents();\n    }\n  }, {\n    key: \"formatTime\",\n    value: function formatTime(start, end) {\n      if (this.formatTimeCallback) {\n        return this.formatTimeCallback(start, end);\n      }\n      return (start == end ? [start] : [start, end]).map(function (time) {\n        return [Math.floor(time % 3600 / 60),\n        // minutes\n        ('00' + Math.floor(time % 60)).slice(-2) // seconds\n        ].join(':');\n      }).join('-');\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth() {\n      return this.wavesurfer.drawer.width / this.wavesurfer.params.pixelRatio;\n    }\n\n    /* Update element's position, width, color. */\n  }, {\n    key: \"updateRender\",\n    value: function updateRender() {\n      // duration varies during loading process, so don't overwrite important data\n      var dur = this.wavesurfer.getDuration();\n      var width = this.getWidth();\n      var startLimited = this.start;\n      var endLimited = this.end;\n      if (startLimited < 0) {\n        startLimited = 0;\n        endLimited = endLimited - startLimited;\n      }\n      if (endLimited > dur) {\n        endLimited = dur;\n        startLimited = dur - (endLimited - startLimited);\n      }\n      if (this.minLength != null) {\n        endLimited = Math.max(startLimited + this.minLength, endLimited);\n      }\n      if (this.maxLength != null) {\n        endLimited = Math.min(startLimited + this.maxLength, endLimited);\n      }\n      if (this.element != null) {\n        // Calculate the left and width values of the region such that\n        // no gaps appear between regions.\n        var left = Math.round(startLimited / dur * width);\n        var regionWidth = Math.round(endLimited / dur * width) - left;\n        this.style(this.element, {\n          left: left + 'px',\n          width: regionWidth + 'px',\n          backgroundColor: this.color,\n          cursor: this.drag ? 'move' : 'default'\n        });\n        for (var attrname in this.attributes) {\n          this.element.setAttribute('data-region-' + attrname, this.attributes[attrname]);\n        }\n        if (this.showTooltip) {\n          this.element.title = this.formatTime(this.start, this.end);\n        }\n      }\n    }\n\n    /* Bind audio events. */\n  }, {\n    key: \"bindInOut\",\n    value: function bindInOut() {\n      var _this2 = this;\n      this.firedIn = false;\n      this.firedOut = false;\n      var onProcess = function onProcess(time) {\n        var start = Math.round(_this2.start * 10) / 10;\n        var end = Math.round(_this2.end * 10) / 10;\n        time = Math.round(time * 10) / 10;\n        if (!_this2.firedOut && _this2.firedIn && (start > time || end <= time)) {\n          _this2.firedOut = true;\n          _this2.firedIn = false;\n          _this2.fireEvent('out');\n          _this2.wavesurfer.fireEvent('region-out', _this2);\n        }\n        if (!_this2.firedIn && start <= time && end > time) {\n          _this2.firedIn = true;\n          _this2.firedOut = false;\n          _this2.fireEvent('in');\n          _this2.wavesurfer.fireEvent('region-in', _this2);\n        }\n      };\n      this.wavesurfer.backend.on('audioprocess', onProcess);\n      this.on('remove', function () {\n        _this2.wavesurfer.backend.un('audioprocess', onProcess);\n      });\n\n      /* Loop playback. */\n      this.on('out', function () {\n        if (_this2.loop) {\n          var realTime = _this2.wavesurfer.getCurrentTime();\n          if (realTime >= _this2.start && realTime <= _this2.end) {\n            _this2.wavesurfer.play(_this2.start);\n          }\n        }\n      });\n    }\n\n    /* Bind DOM events. */\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      var _this3 = this;\n      var preventContextMenu = this.preventContextMenu;\n      this.element.addEventListener('mouseenter', function (e) {\n        _this3.fireEvent('mouseenter', e);\n        _this3.wavesurfer.fireEvent('region-mouseenter', _this3, e);\n      });\n      this.element.addEventListener('mouseleave', function (e) {\n        _this3.fireEvent('mouseleave', e);\n        _this3.wavesurfer.fireEvent('region-mouseleave', _this3, e);\n      });\n      this.element.addEventListener('click', function (e) {\n        e.preventDefault();\n        _this3.fireEvent('click', e);\n        _this3.wavesurfer.fireEvent('region-click', _this3, e);\n      });\n      this.element.addEventListener('dblclick', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n        _this3.fireEvent('dblclick', e);\n        _this3.wavesurfer.fireEvent('region-dblclick', _this3, e);\n      });\n      this.element.addEventListener('contextmenu', function (e) {\n        if (preventContextMenu) {\n          e.preventDefault();\n        }\n        _this3.fireEvent('contextmenu', e);\n        _this3.wavesurfer.fireEvent('region-contextmenu', _this3, e);\n      });\n\n      /* Drag or resize on mousemove. */\n      if (this.drag || this.resize) {\n        this.bindDragEvents();\n      }\n\n      /* Edit content */\n      if (this.contentEditable) {\n        this.contentEl.addEventListener('blur', this.onContentBlur.bind(this));\n        this.contentEl.addEventListener('click', this.onContentClick.bind(this));\n      }\n      /* Remove button */\n      if (this.removeButton) {\n        this.removeButtonEl.addEventListener('click', this.onRemove.bind(this));\n      }\n    }\n  }, {\n    key: \"bindDragEvents\",\n    value: function bindDragEvents() {\n      var _this4 = this;\n      var container = this.wavesurfer.drawer.container;\n      var scrollSpeed = this.scrollSpeed;\n      var startTime;\n      var touchId;\n      var drag;\n      var maxScroll;\n      var resize;\n      var updated = false;\n      var scrollDirection;\n      var wrapperRect;\n      var regionLeftHalfTime;\n      var regionRightHalfTime;\n\n      // Scroll when the user is dragging within the threshold\n      var edgeScroll = function edgeScroll(event) {\n        var orientedEvent = _this4.util.withOrientation(event, _this4.vertical);\n        var duration = _this4.wavesurfer.getDuration();\n        if (!scrollDirection || !drag && !resize) {\n          return;\n        }\n        var x = orientedEvent.clientX;\n        var distanceBetweenCursorAndWrapperEdge = 0;\n        var regionHalfTimeWidth = 0;\n        var adjustment = 0;\n\n        // Get the currently selected time according to the mouse position\n        var time = _this4.regionsUtil.getRegionSnapToGridValue(_this4.wavesurfer.drawer.handleEvent(event) * duration);\n        if (drag) {\n          // Considering the point of contact with the region while edgescrolling\n          if (scrollDirection === -1) {\n            regionHalfTimeWidth = regionLeftHalfTime * _this4.wavesurfer.params.minPxPerSec;\n            distanceBetweenCursorAndWrapperEdge = x - wrapperRect.left;\n          } else {\n            regionHalfTimeWidth = regionRightHalfTime * _this4.wavesurfer.params.minPxPerSec;\n            distanceBetweenCursorAndWrapperEdge = wrapperRect.right - x;\n          }\n        } else {\n          // Considering minLength while edgescroll\n          var minLength = _this4.minLength;\n          if (!minLength) {\n            minLength = 0;\n          }\n          if (resize === 'start') {\n            if (time > _this4.end - minLength) {\n              time = _this4.end - minLength;\n              adjustment = scrollSpeed * scrollDirection;\n            }\n            if (time < 0) {\n              time = 0;\n            }\n          } else if (resize === 'end') {\n            if (time < _this4.start + minLength) {\n              time = _this4.start + minLength;\n              adjustment = scrollSpeed * scrollDirection;\n            }\n            if (time > duration) {\n              time = duration;\n            }\n          }\n        }\n\n        // Don't edgescroll if region has reached min or max limit\n        var wrapperScrollLeft = _this4.wrapper.scrollLeft;\n        if (scrollDirection === -1) {\n          if (Math.round(wrapperScrollLeft) === 0) {\n            return;\n          }\n          if (Math.round(wrapperScrollLeft - regionHalfTimeWidth + distanceBetweenCursorAndWrapperEdge) <= 0) {\n            return;\n          }\n        } else {\n          if (Math.round(wrapperScrollLeft) === maxScroll) {\n            return;\n          }\n          if (Math.round(wrapperScrollLeft + regionHalfTimeWidth - distanceBetweenCursorAndWrapperEdge) >= maxScroll) {\n            return;\n          }\n        }\n\n        // Update scroll position\n        var scrollLeft = wrapperScrollLeft - adjustment + scrollSpeed * scrollDirection;\n        if (scrollDirection === -1) {\n          var calculatedLeft = Math.max(0 + regionHalfTimeWidth - distanceBetweenCursorAndWrapperEdge, scrollLeft);\n          _this4.wrapper.scrollLeft = scrollLeft = calculatedLeft;\n        } else {\n          var calculatedRight = Math.min(maxScroll - regionHalfTimeWidth + distanceBetweenCursorAndWrapperEdge, scrollLeft);\n          _this4.wrapper.scrollLeft = scrollLeft = calculatedRight;\n        }\n        var delta = time - startTime;\n        startTime = time;\n\n        // Continue dragging or resizing\n        drag ? _this4.onDrag(delta) : _this4.onResize(delta, resize);\n\n        // Repeat\n        window.requestAnimationFrame(function () {\n          edgeScroll(event);\n        });\n      };\n      var onDown = function onDown(event) {\n        var duration = _this4.wavesurfer.getDuration();\n        if (event.touches && event.touches.length > 1) {\n          return;\n        }\n        touchId = event.targetTouches ? event.targetTouches[0].identifier : null;\n\n        // stop the event propagation, if this region is resizable or draggable\n        // and the event is therefore handled here.\n        if (_this4.drag || _this4.resize) {\n          event.stopPropagation();\n        }\n\n        // Store the selected startTime we begun dragging or resizing\n        startTime = _this4.regionsUtil.getRegionSnapToGridValue(_this4.wavesurfer.drawer.handleEvent(event, true) * duration);\n\n        // Store the selected point of contact when we begin dragging\n        regionLeftHalfTime = startTime - _this4.start;\n        regionRightHalfTime = _this4.end - startTime;\n\n        // Store for scroll calculations\n        maxScroll = _this4.wrapper.scrollWidth - _this4.wrapper.clientWidth;\n        wrapperRect = _this4.util.withOrientation(_this4.wrapper.getBoundingClientRect(), _this4.vertical);\n        _this4.isResizing = false;\n        _this4.isDragging = false;\n        if (event.target.tagName.toLowerCase() === 'handle') {\n          _this4.isResizing = true;\n          resize = event.target.classList.contains('wavesurfer-handle-start') ? 'start' : 'end';\n        } else {\n          _this4.isDragging = true;\n          drag = true;\n          resize = false;\n        }\n      };\n      var onUp = function onUp(event) {\n        if (event.touches && event.touches.length > 1) {\n          return;\n        }\n        if (drag || resize) {\n          _this4.isDragging = false;\n          _this4.isResizing = false;\n          drag = false;\n          scrollDirection = null;\n          resize = false;\n        }\n        if (updated) {\n          updated = false;\n          _this4.util.preventClick();\n          _this4.fireEvent('update-end', event);\n          _this4.wavesurfer.fireEvent('region-update-end', _this4, event);\n        }\n      };\n      var onMove = function onMove(event) {\n        var duration = _this4.wavesurfer.getDuration();\n        var orientedEvent = _this4.util.withOrientation(event, _this4.vertical);\n        var delta = null;\n        if (event.touches && event.touches.length > 1) {\n          return;\n        }\n        if (event.targetTouches && event.targetTouches[0].identifier != touchId) {\n          return;\n        }\n        if (!drag && !resize) {\n          return;\n        }\n        var oldTime = startTime;\n        var time = _this4.regionsUtil.getRegionSnapToGridValue(_this4.wavesurfer.drawer.handleEvent(event) * duration);\n        if (drag) {\n          // To maintain relative cursor start point while dragging\n          var maxEnd = _this4.wavesurfer.getDuration();\n          if (time > maxEnd - regionRightHalfTime) {\n            time = maxEnd - regionRightHalfTime;\n          }\n          if (time - regionLeftHalfTime < 0) {\n            time = regionLeftHalfTime;\n          }\n        }\n        if (resize) {\n          // To maintain relative cursor start point while resizing\n          // we have to handle for minLength\n          var minLength = _this4.minLength;\n          if (!minLength) {\n            minLength = 0;\n          }\n          if (resize === 'start') {\n            if (time > _this4.end - minLength) {\n              time = _this4.end - minLength;\n            }\n            if (time < 0) {\n              time = 0;\n            }\n          } else if (resize === 'end') {\n            if (time < _this4.start + minLength) {\n              // Calculate the end time based on the min length of the region.\n              time = _this4.start + minLength;\n              delta = time - (_this4.end + (time - startTime));\n            }\n            if (time > duration) {\n              time = duration;\n            }\n          }\n        }\n        if (!delta) {\n          delta = time - startTime;\n        }\n        startTime = time;\n\n        // Drag\n        if (_this4.drag && drag) {\n          updated = updated || !!delta;\n          _this4.onDrag(delta);\n        }\n\n        // Resize\n        if (_this4.resize && resize) {\n          updated = updated || !!delta;\n          _this4.onResize(delta, resize);\n        }\n        if (_this4.scroll && container.clientWidth < _this4.wrapper.scrollWidth) {\n          // Triggering edgescroll from within edgeScrollWidth\n          var x = orientedEvent.clientX;\n\n          // Check direction\n          if (x < wrapperRect.left + _this4.edgeScrollWidth) {\n            scrollDirection = -1;\n          } else if (x > wrapperRect.right - _this4.edgeScrollWidth) {\n            scrollDirection = 1;\n          } else {\n            scrollDirection = null;\n          }\n          if (scrollDirection) {\n            edgeScroll(event);\n          }\n        }\n      };\n      this.element.addEventListener('mousedown', onDown);\n      this.element.addEventListener('touchstart', onDown);\n      document.body.addEventListener('mousemove', onMove);\n      document.body.addEventListener('touchmove', onMove, {\n        passive: false\n      });\n      document.addEventListener('mouseup', onUp);\n      document.body.addEventListener('touchend', onUp);\n      this.on('remove', function () {\n        document.removeEventListener('mouseup', onUp);\n        document.body.removeEventListener('touchend', onUp);\n        document.body.removeEventListener('mousemove', onMove);\n        document.body.removeEventListener('touchmove', onMove);\n      });\n      this.wavesurfer.on('destroy', function () {\n        document.removeEventListener('mouseup', onUp);\n        document.body.removeEventListener('touchend', onUp);\n      });\n    }\n  }, {\n    key: \"onDrag\",\n    value: function onDrag(delta) {\n      var maxEnd = this.wavesurfer.getDuration();\n      if (this.end + delta > maxEnd) {\n        delta = maxEnd - this.end;\n      }\n      if (this.start + delta < 0) {\n        delta = this.start * -1;\n      }\n      var eventParams = {\n        direction: this._getDragDirection(delta),\n        action: 'drag'\n      };\n      this.update({\n        start: this.start + delta,\n        end: this.end + delta\n      }, eventParams);\n    }\n\n    /**\n     * Returns the direction of dragging region based on delta\n     * Negative delta means region is moving to the left\n     * Positive - to the right\n     * For zero delta the direction is not defined\n     * @param {number} delta Drag offset\n     * @returns {string|null} Direction 'left', 'right' or null\n     */\n  }, {\n    key: \"_getDragDirection\",\n    value: function _getDragDirection(delta) {\n      if (delta < 0) {\n        return 'left';\n      }\n      if (delta > 0) {\n        return 'right';\n      }\n      return null;\n    }\n\n    /**\n     * @example\n     * onResize(-5, 'start') // Moves the start point 5 seconds back\n     * onResize(0.5, 'end') // Moves the end point 0.5 seconds forward\n     *\n     * @param {number} delta How much to add or subtract, given in seconds\n     * @param {string} direction 'start 'or 'end'\n     */\n  }, {\n    key: \"onResize\",\n    value: function onResize(delta, direction) {\n      var duration = this.wavesurfer.getDuration();\n      var eventParams = {\n        action: 'resize',\n        direction: direction === 'start' ? 'left' : 'right'\n      };\n      if (direction === 'start') {\n        // Check if changing the start by the given delta would result in the region being smaller than minLength\n        if (delta > 0 && this.end - (this.start + delta) < this.minLength) {\n          delta = this.end - this.minLength - this.start;\n        }\n\n        // Check if changing the start by the given delta would result in the region being larger than maxLength\n        if (delta < 0 && this.end - (this.start + delta) > this.maxLength) {\n          delta = this.end - this.start - this.maxLength;\n        }\n        if (delta < 0 && this.start + delta < 0) {\n          delta = this.start * -1;\n        }\n        this.update({\n          start: Math.min(this.start + delta, this.end),\n          end: Math.max(this.start + delta, this.end)\n        }, eventParams);\n      } else {\n        // Check if changing the end by the given delta would result in the region being smaller than minLength\n        if (delta < 0 && this.end + delta - this.start < this.minLength) {\n          delta = this.start + this.minLength - this.end;\n        }\n\n        // Check if changing the end by the given delta would result in the region being larger than maxLength\n        if (delta > 0 && this.end + delta - this.start > this.maxLength) {\n          delta = this.maxLength - (this.end - this.start);\n        }\n        if (delta > 0 && this.end + delta > duration) {\n          delta = duration - this.end;\n        }\n        this.update({\n          start: Math.min(this.end + delta, this.start),\n          end: Math.max(this.end + delta, this.start)\n        }, eventParams);\n      }\n    }\n  }, {\n    key: \"onContentBlur\",\n    value: function onContentBlur(event) {\n      var _ref = this.data || {},\n        oldText = _ref.text;\n      var text = event.target.innerText;\n      var data = _objectSpread(_objectSpread({}, this.data), {}, {\n        text: text\n      });\n      var eventParams = {\n        action: 'contentEdited',\n        oldText: oldText,\n        text: text\n      };\n      this.update({\n        data: data\n      }, eventParams);\n    }\n  }, {\n    key: \"onContentClick\",\n    value: function onContentClick(event) {\n      event.stopPropagation();\n    }\n  }, {\n    key: \"onRemove\",\n    value: function onRemove(event) {\n      event.stopPropagation();\n      this.remove();\n    }\n  }, {\n    key: \"updateHandlesResize\",\n    value: function updateHandlesResize(resize) {\n      var cursorStyle;\n      if (resize) {\n        cursorStyle = this.vertical ? 'row-resize' : 'col-resize';\n      } else {\n        cursorStyle = 'auto';\n      }\n      this.handleLeftEl && this.style(this.handleLeftEl, {\n        cursor: cursorStyle\n      });\n      this.handleRightEl && this.style(this.handleRightEl, {\n        cursor: cursorStyle\n      });\n    }\n  }]);\n  return Region;\n}();","map":{"version":3,"names":["Region","params","regionsUtils","ws","_params$showTooltip","_this","_classCallCheck","wavesurfer","wrapper","drawer","util","style","regionsUtil","vertical","id","getId","start","Number","end","scrollWidth","getDuration","resize","undefined","Boolean","drag","contentEditable","removeButton","isResizing","isDragging","loop","color","handleStyle","left","right","handleLeftEl","handleRightEl","data","attributes","showTooltip","maxLength","minLength","_onRedraw","updateRender","scroll","scrollParent","scrollSpeed","scrollThreshold","preventContextMenu","channelIdx","parseInt","regionHeight","marginTop","channelCount","backend","buffer","numberOfChannels","Math","floor","getHeight","formatTimeCallback","edgeScrollWidth","bindInOut","render","on","fireEvent","_createClass","key","value","update","eventParams","updateHandlesResize","remove","element","un","play","s","playLoop","setLoop","withOrientation","appendChild","document","createElement","className","title","formatTime","setAttribute","attrname","position","zIndex","height","top","removeButtonEl","textContent","css","bottom","cursor","fontSize","lineHeight","contentEl","innerText","text","padding","width","backgroundColor","handleLeftCss","Object","assign","handleRightCss","bindEvents","map","time","slice","join","getWidth","pixelRatio","dur","startLimited","endLimited","max","min","round","regionWidth","_this2","firedIn","firedOut","onProcess","realTime","getCurrentTime","_this3","addEventListener","e","preventDefault","stopPropagation","bindDragEvents","onContentBlur","bind","onContentClick","onRemove","_this4","container","startTime","touchId","maxScroll","updated","scrollDirection","wrapperRect","regionLeftHalfTime","regionRightHalfTime","edgeScroll","event","orientedEvent","duration","x","clientX","distanceBetweenCursorAndWrapperEdge","regionHalfTimeWidth","adjustment","getRegionSnapToGridValue","handleEvent","minPxPerSec","wrapperScrollLeft","scrollLeft","calculatedLeft","calculatedRight","delta","onDrag","onResize","window","requestAnimationFrame","onDown","touches","length","targetTouches","identifier","clientWidth","getBoundingClientRect","target","tagName","toLowerCase","classList","contains","onUp","preventClick","onMove","oldTime","maxEnd","body","passive","removeEventListener","direction","_getDragDirection","action","_ref","oldText","_objectSpread","cursorStyle"],"sources":["/Users/Junhaeng/Desktop/cocktail/cocktail-party/node_modules/wavesurfer.js/src/plugin/regions/region.js"],"sourcesContent":["/**\n *  @since 4.0.0\n *\n * (Single) Region plugin class\n *\n * Must be turned into an observer before instantiating. This is done in\n * `RegionsPlugin` (main plugin class).\n *\n * @extends {Observer}\n */\nexport class Region {\n    constructor(params, regionsUtils, ws) {\n        this.wavesurfer = ws;\n        this.wrapper = ws.drawer.wrapper;\n        this.util = ws.util;\n        this.style = this.util.style;\n        this.regionsUtil = regionsUtils;\n        this.vertical = ws.drawer.params.vertical;\n\n        this.id = params.id == null ? ws.util.getId() : params.id;\n        this.start = Number(params.start) || 0;\n        this.end =\n            params.end == null\n                ? // small marker-like region\n                this.start +\n                (4 / this.wrapper.scrollWidth) * this.wavesurfer.getDuration()\n                : Number(params.end);\n        this.resize =\n            params.resize === undefined ? true : Boolean(params.resize);\n        this.drag = params.drag === undefined ? true : Boolean(params.drag);\n        this.contentEditable = Boolean(params.contentEditable);\n        this.removeButton = Boolean(params.removeButton);\n        // reflect resize and drag state of region for region-updated listener\n        this.isResizing = false;\n        this.isDragging = false;\n        this.loop = Boolean(params.loop);\n        this.color = params.color || 'rgba(0, 0, 0, 0.1)';\n        // The left and right handleStyle properties can be set to 'none' for\n        // no styling or can be assigned an object containing CSS properties.\n        this.handleStyle = params.handleStyle || {\n            left: {},\n            right: {}\n        };\n        this.handleLeftEl = null;\n        this.handleRightEl = null;\n        this.data = params.data || {};\n        this.attributes = params.attributes || {};\n        this.showTooltip = params.showTooltip ?? true;\n\n        this.maxLength = params.maxLength;\n        // It assumes the minLength parameter value, or the regionsMinLength parameter value, if the first one not provided\n        this.minLength = params.minLength;\n        this._onRedraw = () => this.updateRender();\n\n        this.scroll = params.scroll !== false && ws.params.scrollParent;\n        this.scrollSpeed = params.scrollSpeed || 1;\n        this.scrollThreshold = params.scrollThreshold || 10;\n        // Determines whether the context menu is prevented from being opened.\n        this.preventContextMenu =\n            params.preventContextMenu === undefined\n                ? false\n                : Boolean(params.preventContextMenu);\n\n        // select channel ID to set region\n        let channelIdx =\n            params.channelIdx == null ? -1 : parseInt(params.channelIdx);\n        this.channelIdx = channelIdx;\n        this.regionHeight = '100%';\n        this.marginTop = '0px';\n\n        if (channelIdx !== -1) {\n            let channelCount =\n                this.wavesurfer.backend.buffer != null\n                    ? this.wavesurfer.backend.buffer.numberOfChannels\n                    : -1;\n            if (channelCount >= 0 && channelIdx < channelCount) {\n                this.regionHeight = Math.floor((1 / channelCount) * 100) + '%';\n                this.marginTop =\n                    this.wavesurfer.getHeight() * channelIdx + 'px';\n            }\n        }\n\n        this.formatTimeCallback = params.formatTimeCallback;\n        this.edgeScrollWidth = params.edgeScrollWidth;\n        this.bindInOut();\n        this.render();\n        this.wavesurfer.on('zoom', this._onRedraw);\n        this.wavesurfer.on('redraw', this._onRedraw);\n        this.wavesurfer.fireEvent('region-created', this);\n    }\n\n    /* Update region params. */\n    update(params, eventParams) {\n        if (params.start != null) {\n            this.start = Number(params.start);\n        }\n        if (params.end != null) {\n            this.end = Number(params.end);\n        }\n        if (params.loop != null) {\n            this.loop = Boolean(params.loop);\n        }\n        if (params.color != null) {\n            this.color = params.color;\n        }\n        if (params.handleStyle != null) {\n            this.handleStyle = params.handleStyle;\n        }\n        if (params.data != null) {\n            this.data = params.data;\n        }\n        if (params.resize != null) {\n            this.resize = Boolean(params.resize);\n            this.updateHandlesResize(this.resize);\n        }\n        if (params.drag != null) {\n            this.drag = Boolean(params.drag);\n        }\n        if (params.maxLength != null) {\n            this.maxLength = Number(params.maxLength);\n        }\n        if (params.minLength != null) {\n            this.minLength = Number(params.minLength);\n        }\n        if (params.attributes != null) {\n            this.attributes = params.attributes;\n        }\n\n        this.updateRender();\n        this.fireEvent('update');\n        this.wavesurfer.fireEvent('region-updated', this, eventParams);\n    }\n\n    /* Remove a single region. */\n    remove() {\n        if (this.element) {\n            this.element.remove();\n            this.element = null;\n            this.fireEvent('remove');\n            this.wavesurfer.un('zoom', this._onRedraw);\n            this.wavesurfer.un('redraw', this._onRedraw);\n            this.wavesurfer.fireEvent('region-removed', this);\n        }\n    }\n\n    /**\n     * Play the audio region.\n     * @param {number} start Optional offset to start playing at\n     */\n    play(start) {\n        const s = start || this.start;\n        this.wavesurfer.play(s, this.end);\n        this.fireEvent('play');\n        this.wavesurfer.fireEvent('region-play', this);\n    }\n\n    /**\n     * Play the audio region in a loop.\n     * @param {number} start Optional offset to start playing at\n     * */\n    playLoop(start) {\n        this.loop = true;\n        this.play(start);\n    }\n\n    /**\n     * Set looping on/off.\n     * @param {boolean} loop True if should play in loop\n     */\n    setLoop(loop) {\n        this.loop = loop;\n    }\n\n    /* Render a region as a DOM element. */\n    render() {\n        this.element = this.util.withOrientation(\n            this.wrapper.appendChild(document.createElement('region')),\n            this.vertical\n        );\n\n        this.element.className = 'wavesurfer-region';\n        if (this.showTooltip) {\n            this.element.title = this.formatTime(this.start, this.end);\n        }\n        this.element.setAttribute('data-id', this.id);\n\n        for (const attrname in this.attributes) {\n            this.element.setAttribute(\n                'data-region-' + attrname,\n                this.attributes[attrname]\n            );\n        }\n\n        this.style(this.element, {\n            position: 'absolute',\n            zIndex: 3,\n            height: this.regionHeight,\n            top: this.marginTop\n        });\n\n        /* Button Remove Region */\n        if (this.removeButton){\n            const removeButtonEl = document.createElement('div');\n            removeButtonEl.className = 'remove-region-button';\n            removeButtonEl.textContent = 'тип';\n            this.removeButtonEl = this.element.appendChild(removeButtonEl);\n            const css = {\n                zIndex: 4,\n                position: 'absolute',\n                bottom: 0,\n                right: '4px',\n                cursor:'pointer',\n                fontSize: '20px',\n                lineHeight: '21px',\n                color: 'grey'\n            };\n            this.style(this.removeButtonEl, css);\n        }\n\n        /* Edit content */\n        if (this.contentEditable){\n            const contentEl = document.createElement('div');\n            contentEl.className = 'region-content';\n            contentEl.contentEditable = 'true';\n            contentEl.innerText = this.data.text || '';\n            this.contentEl = this.element.appendChild(contentEl);\n            const css = {\n                zIndex: 4,\n                padding: '2px 5px',\n                cursor:'text'};\n            this.style(this.contentEl, css);\n        }\n\n        /* Resize handles */\n        if (this.resize) {\n            this.handleLeftEl = this.util.withOrientation(\n                this.element.appendChild(document.createElement('handle')),\n                this.vertical\n            );\n            this.handleRightEl = this.util.withOrientation(\n                this.element.appendChild(document.createElement('handle')),\n                this.vertical\n            );\n\n            this.handleLeftEl.className = 'wavesurfer-handle wavesurfer-handle-start';\n            this.handleRightEl.className = 'wavesurfer-handle wavesurfer-handle-end';\n\n            // Default CSS properties for both handles.\n            const css = {\n                cursor: this.vertical ? 'row-resize' : 'col-resize',\n                position: 'absolute',\n                top: '0px',\n                width: '2px',\n                height: '100%',\n                backgroundColor: 'rgba(0, 0, 0, 1)'\n            };\n\n            // Merge CSS properties per handle.\n            const handleLeftCss =\n                this.handleStyle.left !== 'none'\n                    ? Object.assign(\n                        { left: '0px' },\n                        css,\n                        this.handleStyle.left\n                    )\n                    : null;\n            const handleRightCss =\n                this.handleStyle.right !== 'none'\n                    ? Object.assign(\n                        { right: '0px' },\n                        css,\n                        this.handleStyle.right\n                    )\n                    : null;\n\n            if (handleLeftCss) {\n                this.style(this.handleLeftEl, handleLeftCss);\n            }\n\n            if (handleRightCss) {\n                this.style(this.handleRightEl, handleRightCss);\n            }\n        }\n\n        this.updateRender();\n        this.bindEvents();\n    }\n\n    formatTime(start, end) {\n        if (this.formatTimeCallback) {\n            return this.formatTimeCallback(start, end);\n        }\n        return (start == end ? [start] : [start, end])\n            .map((time) =>\n                [\n                    Math.floor((time % 3600) / 60), // minutes\n                    ('00' + Math.floor(time % 60)).slice(-2) // seconds\n                ].join(':')\n            )\n            .join('-');\n    }\n\n    getWidth() {\n        return this.wavesurfer.drawer.width / this.wavesurfer.params.pixelRatio;\n    }\n\n    /* Update element's position, width, color. */\n    updateRender() {\n        // duration varies during loading process, so don't overwrite important data\n        const dur = this.wavesurfer.getDuration();\n        const width = this.getWidth();\n\n        let startLimited = this.start;\n        let endLimited = this.end;\n        if (startLimited < 0) {\n            startLimited = 0;\n            endLimited = endLimited - startLimited;\n        }\n        if (endLimited > dur) {\n            endLimited = dur;\n            startLimited = dur - (endLimited - startLimited);\n        }\n\n        if (this.minLength != null) {\n            endLimited = Math.max(startLimited + this.minLength, endLimited);\n        }\n\n        if (this.maxLength != null) {\n            endLimited = Math.min(startLimited + this.maxLength, endLimited);\n        }\n\n        if (this.element != null) {\n            // Calculate the left and width values of the region such that\n            // no gaps appear between regions.\n            const left = Math.round((startLimited / dur) * width);\n            const regionWidth = Math.round((endLimited / dur) * width) - left;\n\n            this.style(this.element, {\n                left: left + 'px',\n                width: regionWidth + 'px',\n                backgroundColor: this.color,\n                cursor: this.drag ? 'move' : 'default'\n            });\n\n            for (const attrname in this.attributes) {\n                this.element.setAttribute(\n                    'data-region-' + attrname,\n                    this.attributes[attrname]\n                );\n            }\n\n            if (this.showTooltip) {\n                this.element.title = this.formatTime(this.start, this.end);\n            }\n        }\n    }\n\n    /* Bind audio events. */\n    bindInOut() {\n        this.firedIn = false;\n        this.firedOut = false;\n\n        const onProcess = (time) => {\n            let start = Math.round(this.start * 10) / 10;\n            let end = Math.round(this.end * 10) / 10;\n            time = Math.round(time * 10) / 10;\n\n            if (\n                !this.firedOut &&\n                this.firedIn &&\n                (start > time || end <= time)\n            ) {\n                this.firedOut = true;\n                this.firedIn = false;\n                this.fireEvent('out');\n                this.wavesurfer.fireEvent('region-out', this);\n            }\n            if (!this.firedIn && start <= time && end > time) {\n                this.firedIn = true;\n                this.firedOut = false;\n                this.fireEvent('in');\n                this.wavesurfer.fireEvent('region-in', this);\n            }\n        };\n\n        this.wavesurfer.backend.on('audioprocess', onProcess);\n\n        this.on('remove', () => {\n            this.wavesurfer.backend.un('audioprocess', onProcess);\n        });\n\n        /* Loop playback. */\n        this.on('out', () => {\n            if (this.loop) {\n                const realTime = this.wavesurfer.getCurrentTime();\n                if (realTime >= this.start && realTime <= this.end) {\n                    this.wavesurfer.play(this.start);\n                }\n            }\n        });\n    }\n\n    /* Bind DOM events. */\n    bindEvents() {\n        const preventContextMenu = this.preventContextMenu;\n\n        this.element.addEventListener('mouseenter', (e) => {\n            this.fireEvent('mouseenter', e);\n            this.wavesurfer.fireEvent('region-mouseenter', this, e);\n        });\n\n        this.element.addEventListener('mouseleave', (e) => {\n            this.fireEvent('mouseleave', e);\n            this.wavesurfer.fireEvent('region-mouseleave', this, e);\n        });\n\n        this.element.addEventListener('click', (e) => {\n            e.preventDefault();\n            this.fireEvent('click', e);\n            this.wavesurfer.fireEvent('region-click', this, e);\n        });\n\n        this.element.addEventListener('dblclick', (e) => {\n            e.stopPropagation();\n            e.preventDefault();\n            this.fireEvent('dblclick', e);\n            this.wavesurfer.fireEvent('region-dblclick', this, e);\n        });\n\n        this.element.addEventListener('contextmenu', (e) => {\n            if (preventContextMenu) {\n                e.preventDefault();\n            }\n            this.fireEvent('contextmenu', e);\n            this.wavesurfer.fireEvent('region-contextmenu', this, e);\n        });\n\n        /* Drag or resize on mousemove. */\n        if (this.drag || this.resize) {\n            this.bindDragEvents();\n        }\n\n        /* Edit content */\n        if (this.contentEditable){\n            this.contentEl.addEventListener('blur', this.onContentBlur.bind(this));\n            this.contentEl.addEventListener('click', this.onContentClick.bind(this));\n        }\n        /* Remove button */\n        if (this.removeButton){\n            this.removeButtonEl.addEventListener('click', this.onRemove.bind(this));\n        }\n    }\n\n    bindDragEvents() {\n        const container = this.wavesurfer.drawer.container;\n        const scrollSpeed = this.scrollSpeed;\n        let startTime;\n        let touchId;\n        let drag;\n        let maxScroll;\n        let resize;\n        let updated = false;\n        let scrollDirection;\n        let wrapperRect;\n        let regionLeftHalfTime;\n        let regionRightHalfTime;\n\n        // Scroll when the user is dragging within the threshold\n        const edgeScroll = (event) => {\n            let orientedEvent = this.util.withOrientation(event, this.vertical);\n            const duration = this.wavesurfer.getDuration();\n            if (!scrollDirection || (!drag && !resize)) {\n                return;\n            }\n\n            const x = orientedEvent.clientX;\n            let distanceBetweenCursorAndWrapperEdge = 0;\n            let regionHalfTimeWidth = 0;\n            let adjustment = 0;\n\n            // Get the currently selected time according to the mouse position\n            let time = this.regionsUtil.getRegionSnapToGridValue(\n                this.wavesurfer.drawer.handleEvent(event) * duration\n            );\n\n            if (drag) {\n                // Considering the point of contact with the region while edgescrolling\n                if (scrollDirection === -1) {\n                    regionHalfTimeWidth = regionLeftHalfTime * this.wavesurfer.params.minPxPerSec;\n                    distanceBetweenCursorAndWrapperEdge = x - wrapperRect.left;\n                } else {\n                    regionHalfTimeWidth = regionRightHalfTime * this.wavesurfer.params.minPxPerSec;\n                    distanceBetweenCursorAndWrapperEdge = wrapperRect.right - x;\n                }\n            } else {\n                // Considering minLength while edgescroll\n                let minLength = this.minLength;\n                if (!minLength) {\n                    minLength = 0;\n                }\n\n                if (resize === 'start') {\n                    if (time > this.end - minLength) {\n                        time = this.end - minLength;\n                        adjustment = scrollSpeed * scrollDirection;\n                    }\n\n                    if (time < 0) {\n                        time = 0;\n                    }\n                } else if (resize === 'end') {\n                    if (time < this.start + minLength) {\n                        time = this.start + minLength;\n                        adjustment = scrollSpeed * scrollDirection;\n                    }\n\n                    if (time > duration) {\n                        time = duration;\n                    }\n                }\n            }\n\n            // Don't edgescroll if region has reached min or max limit\n            const wrapperScrollLeft = this.wrapper.scrollLeft;\n\n            if (scrollDirection === -1) {\n                if (Math.round(wrapperScrollLeft) === 0) {\n                    return;\n                }\n\n                if (Math.round(wrapperScrollLeft - regionHalfTimeWidth + distanceBetweenCursorAndWrapperEdge) <= 0) {\n                    return;\n                }\n            } else {\n                if (Math.round(wrapperScrollLeft) === maxScroll) {\n                    return;\n                }\n\n                if (Math.round(wrapperScrollLeft + regionHalfTimeWidth - distanceBetweenCursorAndWrapperEdge) >= maxScroll) {\n                    return;\n                }\n            }\n\n            // Update scroll position\n            let scrollLeft = wrapperScrollLeft - adjustment + scrollSpeed * scrollDirection;\n\n            if (scrollDirection === -1) {\n                const calculatedLeft = Math.max(0 + regionHalfTimeWidth - distanceBetweenCursorAndWrapperEdge, scrollLeft);\n                this.wrapper.scrollLeft = scrollLeft = calculatedLeft;\n            } else {\n                const calculatedRight = Math.min(maxScroll - regionHalfTimeWidth + distanceBetweenCursorAndWrapperEdge, scrollLeft);\n                this.wrapper.scrollLeft = scrollLeft = calculatedRight;\n            }\n\n            const delta = time - startTime;\n            startTime = time;\n\n            // Continue dragging or resizing\n            drag ? this.onDrag(delta) : this.onResize(delta, resize);\n\n            // Repeat\n            window.requestAnimationFrame(() => {\n                edgeScroll(event);\n            });\n        };\n\n        const onDown = (event) => {\n            const duration = this.wavesurfer.getDuration();\n            if (event.touches && event.touches.length > 1) {\n                return;\n            }\n            touchId = event.targetTouches ? event.targetTouches[0].identifier : null;\n\n            // stop the event propagation, if this region is resizable or draggable\n            // and the event is therefore handled here.\n            if (this.drag || this.resize) {\n                event.stopPropagation();\n            }\n\n            // Store the selected startTime we begun dragging or resizing\n            startTime = this.regionsUtil.getRegionSnapToGridValue(\n                this.wavesurfer.drawer.handleEvent(event, true) * duration\n            );\n\n            // Store the selected point of contact when we begin dragging\n            regionLeftHalfTime = startTime - this.start;\n            regionRightHalfTime = this.end - startTime;\n\n            // Store for scroll calculations\n            maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n\n            wrapperRect = this.util.withOrientation(\n                this.wrapper.getBoundingClientRect(),\n                this.vertical\n            );\n\n            this.isResizing = false;\n            this.isDragging = false;\n            if (event.target.tagName.toLowerCase() === 'handle') {\n                this.isResizing = true;\n                resize = event.target.classList.contains('wavesurfer-handle-start')\n                    ? 'start'\n                    : 'end';\n            } else {\n                this.isDragging = true;\n                drag = true;\n                resize = false;\n            }\n        };\n        const onUp = (event) => {\n            if (event.touches && event.touches.length > 1) {\n                return;\n            }\n\n            if (drag || resize) {\n                this.isDragging = false;\n                this.isResizing = false;\n                drag = false;\n                scrollDirection = null;\n                resize = false;\n            }\n\n            if (updated) {\n                updated = false;\n                this.util.preventClick();\n                this.fireEvent('update-end', event);\n                this.wavesurfer.fireEvent('region-update-end', this, event);\n            }\n        };\n        const onMove = (event) => {\n            const duration = this.wavesurfer.getDuration();\n            let orientedEvent = this.util.withOrientation(event, this.vertical);\n            let delta = null;\n\n            if (event.touches && event.touches.length > 1) {\n                return;\n            }\n            if (event.targetTouches && event.targetTouches[0].identifier != touchId) {\n                return;\n            }\n            if (!drag && !resize) {\n                return;\n            }\n\n            const oldTime = startTime;\n            let time = this.regionsUtil.getRegionSnapToGridValue(\n                this.wavesurfer.drawer.handleEvent(event) * duration\n            );\n\n            if (drag) {\n                // To maintain relative cursor start point while dragging\n                const maxEnd = this.wavesurfer.getDuration();\n                if (time > maxEnd - regionRightHalfTime) {\n                    time = maxEnd - regionRightHalfTime;\n                }\n\n                if (time - regionLeftHalfTime < 0) {\n                    time = regionLeftHalfTime;\n                }\n            }\n\n            if (resize) {\n                // To maintain relative cursor start point while resizing\n                // we have to handle for minLength\n                let minLength = this.minLength;\n                if (!minLength) {\n                    minLength = 0;\n                }\n\n                if (resize === 'start') {\n                    if (time > this.end - minLength) {\n                        time = this.end - minLength;\n                    }\n\n                    if (time < 0) {\n                        time = 0;\n                    }\n                } else if (resize === 'end') {\n                    if (time < this.start + minLength) {\n                        // Calculate the end time based on the min length of the region.\n                        time = this.start + minLength;\n                        delta = time - (this.end + (time - startTime));\n                    }\n\n                    if (time > duration) {\n                        time = duration;\n                    }\n                }\n            }\n\n            if (!delta) {\n                delta = time - startTime;\n            }\n\n            startTime = time;\n\n            // Drag\n            if (this.drag && drag) {\n                updated = updated || !!delta;\n                this.onDrag(delta);\n            }\n\n            // Resize\n            if (this.resize && resize) {\n                updated = updated || !!delta;\n                this.onResize(delta, resize);\n            }\n\n            if (\n                this.scroll && container.clientWidth < this.wrapper.scrollWidth\n            ) {\n                // Triggering edgescroll from within edgeScrollWidth\n                let x = orientedEvent.clientX;\n\n                // Check direction\n                if (x < wrapperRect.left + this.edgeScrollWidth) {\n                    scrollDirection = -1;\n                } else if (x > wrapperRect.right - this.edgeScrollWidth) {\n                    scrollDirection = 1;\n                } else {\n                    scrollDirection = null;\n                }\n\n                if (scrollDirection) {\n                    edgeScroll(event);\n                }\n            }\n        };\n\n        this.element.addEventListener('mousedown', onDown);\n        this.element.addEventListener('touchstart', onDown);\n\n        document.body.addEventListener('mousemove', onMove);\n        document.body.addEventListener('touchmove', onMove, {passive: false});\n\n        document.addEventListener('mouseup', onUp);\n        document.body.addEventListener('touchend', onUp);\n\n        this.on('remove', () => {\n            document.removeEventListener('mouseup', onUp);\n            document.body.removeEventListener('touchend', onUp);\n            document.body.removeEventListener('mousemove', onMove);\n            document.body.removeEventListener('touchmove', onMove);\n        });\n\n        this.wavesurfer.on('destroy', () => {\n            document.removeEventListener('mouseup', onUp);\n            document.body.removeEventListener('touchend', onUp);\n        });\n    }\n\n    onDrag(delta) {\n        const maxEnd = this.wavesurfer.getDuration();\n        if (this.end + delta > maxEnd) {\n            delta = maxEnd - this.end;\n        }\n\n        if (this.start + delta < 0) {\n            delta = this.start * -1;\n        }\n\n        const eventParams = {\n            direction: this._getDragDirection(delta),\n            action: 'drag'\n        };\n\n        this.update({\n            start: this.start + delta,\n            end: this.end + delta\n        }, eventParams);\n    }\n\n    /**\n     * Returns the direction of dragging region based on delta\n     * Negative delta means region is moving to the left\n     * Positive - to the right\n     * For zero delta the direction is not defined\n     * @param {number} delta Drag offset\n     * @returns {string|null} Direction 'left', 'right' or null\n     */\n    _getDragDirection(delta) {\n        if (delta < 0) {\n            return 'left';\n        }\n        if (delta > 0) {\n            return 'right';\n        }\n        return null;\n    }\n\n    /**\n     * @example\n     * onResize(-5, 'start') // Moves the start point 5 seconds back\n     * onResize(0.5, 'end') // Moves the end point 0.5 seconds forward\n     *\n     * @param {number} delta How much to add or subtract, given in seconds\n     * @param {string} direction 'start 'or 'end'\n     */\n    onResize(delta, direction) {\n        const duration = this.wavesurfer.getDuration();\n        const eventParams = {\n            action: 'resize',\n            direction: direction === 'start' ? 'left' : 'right'\n        };\n\n        if (direction === 'start') {\n            // Check if changing the start by the given delta would result in the region being smaller than minLength\n            if (delta > 0 && this.end - (this.start + delta) < this.minLength) {\n                delta = this.end - this.minLength - this.start;\n            }\n\n            // Check if changing the start by the given delta would result in the region being larger than maxLength\n            if (delta < 0 && this.end - (this.start + delta) > this.maxLength) {\n                delta = this.end - this.start - this.maxLength;\n            }\n\n            if (delta < 0 && (this.start + delta) < 0) {\n                delta = this.start * -1;\n            }\n\n            this.update({\n                start: Math.min(this.start + delta, this.end),\n                end: Math.max(this.start + delta, this.end)\n            }, eventParams);\n        } else {\n            // Check if changing the end by the given delta would result in the region being smaller than minLength\n            if (delta < 0 && this.end + delta - this.start < this.minLength) {\n                delta = this.start + this.minLength - this.end;\n            }\n\n            // Check if changing the end by the given delta would result in the region being larger than maxLength\n            if (delta > 0 && this.end + delta - this.start > this.maxLength) {\n                delta = this.maxLength - (this.end - this.start);\n            }\n\n            if (delta > 0 && (this.end + delta) > duration) {\n                delta = duration - this.end;\n            }\n\n            this.update({\n                start: Math.min(this.end + delta, this.start),\n                end: Math.max(this.end + delta, this.start)\n            }, eventParams);\n        }\n    }\n\n    onContentBlur(event){\n        const {text: oldText} = this.data || {};\n        const text = event.target.innerText;\n        const data = {...this.data, text };\n        const eventParams = {action: 'contentEdited', oldText, text};\n        this.update({data}, eventParams);\n    }\n\n    onContentClick(event){\n        event.stopPropagation();\n    }\n\n    onRemove(event){\n        event.stopPropagation();\n        this.remove();\n    }\n\n    updateHandlesResize(resize) {\n        let cursorStyle;\n        if (resize) {\n            cursorStyle = this.vertical ? 'row-resize' : 'col-resize';\n        } else {\n            cursorStyle = 'auto';\n        }\n\n        this.handleLeftEl && this.style(this.handleLeftEl, { cursor: cursorStyle });\n        this.handleRightEl && this.style(this.handleRightEl, { cursor: cursorStyle });\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}