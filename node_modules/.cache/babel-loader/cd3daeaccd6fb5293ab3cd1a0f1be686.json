{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar Logger_1 = require(\"./Logger\");\nvar logger = new Logger_1.ConsoleLogger('Parser');\nexports.parseMobileHubConfig = function (config) {\n  var amplifyConfig = {};\n  // Analytics\n  if (config['aws_mobile_analytics_app_id']) {\n    var Analytics = {\n      AWSPinpoint: {\n        appId: config['aws_mobile_analytics_app_id'],\n        region: config['aws_mobile_analytics_app_region']\n      }\n    };\n    amplifyConfig.Analytics = Analytics;\n  }\n  // Auth\n  if (config['aws_cognito_identity_pool_id'] || config['aws_user_pools_id']) {\n    amplifyConfig.Auth = {\n      userPoolId: config['aws_user_pools_id'],\n      userPoolWebClientId: config['aws_user_pools_web_client_id'],\n      region: config['aws_cognito_region'],\n      identityPoolId: config['aws_cognito_identity_pool_id'],\n      identityPoolRegion: config['aws_cognito_region'],\n      mandatorySignIn: config['aws_mandatory_sign_in'] === 'enable',\n      signUpVerificationMethod: config['aws_cognito_sign_up_verification_method'] || 'code'\n    };\n  }\n  // Storage\n  var storageConfig;\n  if (config['aws_user_files_s3_bucket']) {\n    storageConfig = {\n      AWSS3: {\n        bucket: config['aws_user_files_s3_bucket'],\n        region: config['aws_user_files_s3_bucket_region'],\n        dangerouslyConnectToHttpEndpointForTesting: config['aws_user_files_s3_dangerously_connect_to_http_endpoint_for_testing']\n      }\n    };\n  } else {\n    storageConfig = config ? config.Storage || config : {};\n  }\n  // Logging\n  if (config['Logging']) {\n    amplifyConfig.Logging = __assign(__assign({}, config['Logging']), {\n      region: config['aws_project_region']\n    });\n  }\n  // Geo\n  if (config['geo']) {\n    amplifyConfig.Geo = Object.assign({}, config.geo);\n    if (config.geo['amazon_location_service']) {\n      amplifyConfig.Geo = {\n        AmazonLocationService: config.geo['amazon_location_service']\n      };\n    }\n  }\n  amplifyConfig.Analytics = Object.assign({}, amplifyConfig.Analytics, config.Analytics);\n  amplifyConfig.Auth = Object.assign({}, amplifyConfig.Auth, config.Auth);\n  amplifyConfig.Storage = Object.assign({}, storageConfig);\n  amplifyConfig.Logging = Object.assign({}, amplifyConfig.Logging, config.Logging);\n  logger.debug('parse config', config, 'to amplifyconfig', amplifyConfig);\n  return amplifyConfig;\n};\n/**\n * @deprecated use per-function export\n */\nvar Parser = /** @class */function () {\n  function Parser() {}\n  Parser.parseMobilehubConfig = exports.parseMobileHubConfig;\n  return Parser;\n}();\nexports.Parser = Parser;\n/**\n * @deprecated use per-function export\n */\nexports.default = Parser;","map":{"version":3,"sources":["../src/Parser.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;AAEA,IAAM,MAAM,GAAG,IAAI,QAAA,CAAA,aAAM,CAAC,QAAQ,CAAC;AAEtB,OAAA,CAAA,oBAAoB,GAAG,UAAC,MAAM,EAAA;EAC1C,IAAM,aAAa,GAAkB,CAAA,CAAE;EACvC;EACA,IAAI,MAAM,CAAC,6BAA6B,CAAC,EAAE;IAC1C,IAAM,SAAS,GAAG;MACjB,WAAW,EAAE;QACZ,KAAK,EAAE,MAAM,CAAC,6BAA6B,CAAC;QAC5C,MAAM,EAAE,MAAM,CAAC,iCAAiC;MAChD;KACD;IACD,aAAa,CAAC,SAAS,GAAG,SAAS;EACnC;EAED;EACA,IAAI,MAAM,CAAC,8BAA8B,CAAC,IAAI,MAAM,CAAC,mBAAmB,CAAC,EAAE;IAC1E,aAAa,CAAC,IAAI,GAAG;MACpB,UAAU,EAAE,MAAM,CAAC,mBAAmB,CAAC;MACvC,mBAAmB,EAAE,MAAM,CAAC,8BAA8B,CAAC;MAC3D,MAAM,EAAE,MAAM,CAAC,oBAAoB,CAAC;MACpC,cAAc,EAAE,MAAM,CAAC,8BAA8B,CAAC;MACtD,kBAAkB,EAAE,MAAM,CAAC,oBAAoB,CAAC;MAChD,eAAe,EAAE,MAAM,CAAC,uBAAuB,CAAC,KAAK,QAAQ;MAC7D,wBAAwB,EACvB,MAAM,CAAC,yCAAyC,CAAC,IAAI;KACtD;EACD;EAED;EACA,IAAI,aAAa;EACjB,IAAI,MAAM,CAAC,0BAA0B,CAAC,EAAE;IACvC,aAAa,GAAG;MACf,KAAK,EAAE;QACN,MAAM,EAAE,MAAM,CAAC,0BAA0B,CAAC;QAC1C,MAAM,EAAE,MAAM,CAAC,iCAAiC,CAAC;QACjD,0CAA0C,EACzC,MAAM,CACL,oEAAoE;MAEtE;KACD;GACD,MAAM;IACN,aAAa,GAAG,MAAM,GAAG,MAAM,CAAC,OAAO,IAAI,MAAM,GAAG,CAAA,CAAE;EACtD;EAED;EACA,IAAI,MAAM,CAAC,SAAS,CAAC,EAAE;IACtB,aAAa,CAAC,OAAO,GAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EACjB,MAAM,CAAC,SAAS,CAAC,CAAA,EAAA;MACpB,MAAM,EAAE,MAAM,CAAC,oBAAoB;IAAC,CAAA,CACpC;EACD;EAED;EACA,IAAI,MAAM,CAAC,KAAK,CAAC,EAAE;IAClB,aAAa,CAAC,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,CAAA,CAAE,EAAE,MAAM,CAAC,GAAG,CAAC;IACjD,IAAI,MAAM,CAAC,GAAG,CAAC,yBAAyB,CAAC,EAAE;MAC1C,aAAa,CAAC,GAAG,GAAG;QACnB,qBAAqB,EAAE,MAAM,CAAC,GAAG,CAAC,yBAAyB;OAC3D;IACD;EACD;EAED,aAAa,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CACtC,CAAA,CAAE,EACF,aAAa,CAAC,SAAS,EACvB,MAAM,CAAC,SAAS,CAChB;EACD,aAAa,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAA,CAAE,EAAE,aAAa,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC;EACvE,aAAa,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,CAAA,CAAE,EAAE,aAAa,CAAC;EACxD,aAAa,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CACpC,CAAA,CAAE,EACF,aAAa,CAAC,OAAO,EACrB,MAAM,CAAC,OAAO,CACd;EACD,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,MAAM,EAAE,kBAAkB,EAAE,aAAa,CAAC;EACvE,OAAO,aAAa;AACrB,CAAC;AAED;;AAEG;AACH,IAAA,MAAA,GAAA,aAAA,YAAA;EAAA,SAAA,MAAA,CAAA,EAAA,CAEA;EADQ,MAAA,CAAA,oBAAoB,GAAG,OAAA,CAAA,oBAAoB;EACnD,OAAA,MAAC;CAAA,EAAA;AAFY,OAAA,CAAA,MAAA,GAAA,MAAA;AAIb;;AAEG;AACH,OAAA,CAAA,OAAA,GAAe,MAAM","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Logger_1 = require(\"./Logger\");\nvar logger = new Logger_1.ConsoleLogger('Parser');\nexports.parseMobileHubConfig = function (config) {\n    var amplifyConfig = {};\n    // Analytics\n    if (config['aws_mobile_analytics_app_id']) {\n        var Analytics = {\n            AWSPinpoint: {\n                appId: config['aws_mobile_analytics_app_id'],\n                region: config['aws_mobile_analytics_app_region'],\n            },\n        };\n        amplifyConfig.Analytics = Analytics;\n    }\n    // Auth\n    if (config['aws_cognito_identity_pool_id'] || config['aws_user_pools_id']) {\n        amplifyConfig.Auth = {\n            userPoolId: config['aws_user_pools_id'],\n            userPoolWebClientId: config['aws_user_pools_web_client_id'],\n            region: config['aws_cognito_region'],\n            identityPoolId: config['aws_cognito_identity_pool_id'],\n            identityPoolRegion: config['aws_cognito_region'],\n            mandatorySignIn: config['aws_mandatory_sign_in'] === 'enable',\n            signUpVerificationMethod: config['aws_cognito_sign_up_verification_method'] || 'code',\n        };\n    }\n    // Storage\n    var storageConfig;\n    if (config['aws_user_files_s3_bucket']) {\n        storageConfig = {\n            AWSS3: {\n                bucket: config['aws_user_files_s3_bucket'],\n                region: config['aws_user_files_s3_bucket_region'],\n                dangerouslyConnectToHttpEndpointForTesting: config['aws_user_files_s3_dangerously_connect_to_http_endpoint_for_testing'],\n            },\n        };\n    }\n    else {\n        storageConfig = config ? config.Storage || config : {};\n    }\n    // Logging\n    if (config['Logging']) {\n        amplifyConfig.Logging = __assign(__assign({}, config['Logging']), { region: config['aws_project_region'] });\n    }\n    // Geo\n    if (config['geo']) {\n        amplifyConfig.Geo = Object.assign({}, config.geo);\n        if (config.geo['amazon_location_service']) {\n            amplifyConfig.Geo = {\n                AmazonLocationService: config.geo['amazon_location_service'],\n            };\n        }\n    }\n    amplifyConfig.Analytics = Object.assign({}, amplifyConfig.Analytics, config.Analytics);\n    amplifyConfig.Auth = Object.assign({}, amplifyConfig.Auth, config.Auth);\n    amplifyConfig.Storage = Object.assign({}, storageConfig);\n    amplifyConfig.Logging = Object.assign({}, amplifyConfig.Logging, config.Logging);\n    logger.debug('parse config', config, 'to amplifyconfig', amplifyConfig);\n    return amplifyConfig;\n};\n/**\n * @deprecated use per-function export\n */\nvar Parser = /** @class */ (function () {\n    function Parser() {\n    }\n    Parser.parseMobilehubConfig = exports.parseMobileHubConfig;\n    return Parser;\n}());\nexports.Parser = Parser;\n/**\n * @deprecated use per-function export\n */\nexports.default = Parser;\n//# sourceMappingURL=Parser.js.map"]},"metadata":{},"sourceType":"script"}