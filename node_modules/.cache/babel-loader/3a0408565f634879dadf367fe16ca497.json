{"ast":null,"code":"/*!\n * wavesurfer.js 5.2.0 (2021-08-16)\n * https://wavesurfer-js.org\n * @license BSD-3-Clause\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define(\"WaveSurfer\", [], factory);else if (typeof exports === 'object') exports[\"WaveSurfer\"] = factory();else root[\"WaveSurfer\"] = factory();\n})(self, function () {\n  return (/******/function () {\n      // webpackBootstrap\n      /******/\n      var __webpack_modules__ = {\n        /***/\"./src/drawer.canvasentry.js\":\n        /*!***********************************!*\\\n          !*** ./src/drawer.canvasentry.js ***!\n          \\***********************************/\n        /***/\n        function srcDrawerCanvasentryJs(module, exports, __webpack_require__) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports.default = void 0;\n          var _style = _interopRequireDefault(__webpack_require__( /*! ./util/style */\"./src/util/style.js\"));\n          var _getId = _interopRequireDefault(__webpack_require__( /*! ./util/get-id */\"./src/util/get-id.js\"));\n          function _interopRequireDefault(obj) {\n            return obj && obj.__esModule ? obj : {\n              default: obj\n            };\n          }\n          function _classCallCheck(instance, Constructor) {\n            if (!(instance instanceof Constructor)) {\n              throw new TypeError(\"Cannot call a class as a function\");\n            }\n          }\n          function _defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, descriptor.key, descriptor);\n            }\n          }\n          function _createClass(Constructor, protoProps, staticProps) {\n            if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) _defineProperties(Constructor, staticProps);\n            return Constructor;\n          }\n\n          /**\n           * The `CanvasEntry` class represents an element consisting of a wave `canvas`\n           * and an (optional) progress wave `canvas`.\n           *\n           * The `MultiCanvas` renderer uses one or more `CanvasEntry` instances to\n           * render a waveform, depending on the zoom level.\n           */\n          var CanvasEntry = /*#__PURE__*/function () {\n            function CanvasEntry() {\n              _classCallCheck(this, CanvasEntry);\n\n              /**\n               * The wave node\n               *\n               * @type {HTMLCanvasElement}\n               */\n              this.wave = null;\n              /**\n               * The wave canvas rendering context\n               *\n               * @type {CanvasRenderingContext2D}\n               */\n\n              this.waveCtx = null;\n              /**\n               * The (optional) progress wave node\n               *\n               * @type {HTMLCanvasElement}\n               */\n\n              this.progress = null;\n              /**\n               * The (optional) progress wave canvas rendering context\n               *\n               * @type {CanvasRenderingContext2D}\n               */\n\n              this.progressCtx = null;\n              /**\n               * Start of the area the canvas should render, between 0 and 1\n               *\n               * @type {number}\n               */\n\n              this.start = 0;\n              /**\n               * End of the area the canvas should render, between 0 and 1\n               *\n               * @type {number}\n               */\n\n              this.end = 1;\n              /**\n               * Unique identifier for this entry\n               *\n               * @type {string}\n               */\n\n              this.id = (0, _getId.default)(typeof this.constructor.name !== 'undefined' ? this.constructor.name.toLowerCase() + '_' : 'canvasentry_');\n              /**\n               * Canvas 2d context attributes\n               *\n               * @type {object}\n               */\n\n              this.canvasContextAttributes = {};\n            }\n            /**\n             * Store the wave canvas element and create the 2D rendering context\n             *\n             * @param {HTMLCanvasElement} element The wave `canvas` element.\n             */\n\n            _createClass(CanvasEntry, [{\n              key: \"initWave\",\n              value: function initWave(element) {\n                this.wave = element;\n                this.waveCtx = this.wave.getContext('2d', this.canvasContextAttributes);\n              }\n              /**\n               * Store the progress wave canvas element and create the 2D rendering\n               * context\n               *\n               * @param {HTMLCanvasElement} element The progress wave `canvas` element.\n               */\n            }, {\n              key: \"initProgress\",\n              value: function initProgress(element) {\n                this.progress = element;\n                this.progressCtx = this.progress.getContext('2d', this.canvasContextAttributes);\n              }\n              /**\n               * Update the dimensions\n               *\n               * @param {number} elementWidth Width of the entry\n               * @param {number} totalWidth Total width of the multi canvas renderer\n               * @param {number} width The new width of the element\n               * @param {number} height The new height of the element\n               */\n            }, {\n              key: \"updateDimensions\",\n              value: function updateDimensions(elementWidth, totalWidth, width, height) {\n                // where the canvas starts and ends in the waveform, represented as a\n                // decimal between 0 and 1\n                this.start = this.wave.offsetLeft / totalWidth || 0;\n                this.end = this.start + elementWidth / totalWidth; // set wave canvas dimensions\n\n                this.wave.width = width;\n                this.wave.height = height;\n                var elementSize = {\n                  width: elementWidth + 'px'\n                };\n                (0, _style.default)(this.wave, elementSize);\n                if (this.hasProgressCanvas) {\n                  // set progress canvas dimensions\n                  this.progress.width = width;\n                  this.progress.height = height;\n                  (0, _style.default)(this.progress, elementSize);\n                }\n              }\n              /**\n               * Clear the wave and progress rendering contexts\n               */\n            }, {\n              key: \"clearWave\",\n              value: function clearWave() {\n                // wave\n                this.waveCtx.clearRect(0, 0, this.waveCtx.canvas.width, this.waveCtx.canvas.height); // progress\n\n                if (this.hasProgressCanvas) {\n                  this.progressCtx.clearRect(0, 0, this.progressCtx.canvas.width, this.progressCtx.canvas.height);\n                }\n              }\n              /**\n               * Set the fill styles for wave and progress\n               *\n               * @param {string} waveColor Fill color for the wave canvas\n               * @param {?string} progressColor Fill color for the progress canvas\n               */\n            }, {\n              key: \"setFillStyles\",\n              value: function setFillStyles(waveColor, progressColor) {\n                this.waveCtx.fillStyle = waveColor;\n                if (this.hasProgressCanvas) {\n                  this.progressCtx.fillStyle = progressColor;\n                }\n              }\n              /**\n               * Set the canvas transforms for wave and progress\n               *\n               * @param {boolean} vertical Whether to render vertically\n               */\n            }, {\n              key: \"applyCanvasTransforms\",\n              value: function applyCanvasTransforms(vertical) {\n                if (vertical) {\n                  // Reflect the waveform across the line y = -x\n                  this.waveCtx.setTransform(0, 1, 1, 0, 0, 0);\n                  if (this.hasProgressCanvas) {\n                    this.progressCtx.setTransform(0, 1, 1, 0, 0, 0);\n                  }\n                }\n              }\n              /**\n               * Draw a rectangle for wave and progress\n               *\n               * @param {number} x X start position\n               * @param {number} y Y start position\n               * @param {number} width Width of the rectangle\n               * @param {number} height Height of the rectangle\n               * @param {number} radius Radius of the rectangle\n               */\n            }, {\n              key: \"fillRects\",\n              value: function fillRects(x, y, width, height, radius) {\n                this.fillRectToContext(this.waveCtx, x, y, width, height, radius);\n                if (this.hasProgressCanvas) {\n                  this.fillRectToContext(this.progressCtx, x, y, width, height, radius);\n                }\n              }\n              /**\n               * Draw the actual rectangle on a `canvas` element\n               *\n               * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n               * @param {number} x X start position\n               * @param {number} y Y start position\n               * @param {number} width Width of the rectangle\n               * @param {number} height Height of the rectangle\n               * @param {number} radius Radius of the rectangle\n               */\n            }, {\n              key: \"fillRectToContext\",\n              value: function fillRectToContext(ctx, x, y, width, height, radius) {\n                if (!ctx) {\n                  return;\n                }\n                if (radius) {\n                  this.drawRoundedRect(ctx, x, y, width, height, radius);\n                } else {\n                  ctx.fillRect(x, y, width, height);\n                }\n              }\n              /**\n               * Draw a rounded rectangle on Canvas\n               *\n               * @param {CanvasRenderingContext2D} ctx Canvas context\n               * @param {number} x X-position of the rectangle\n               * @param {number} y Y-position of the rectangle\n               * @param {number} width Width of the rectangle\n               * @param {number} height Height of the rectangle\n               * @param {number} radius Radius of the rectangle\n               *\n               * @return {void}\n               * @example drawRoundedRect(ctx, 50, 50, 5, 10, 3)\n               */\n            }, {\n              key: \"drawRoundedRect\",\n              value: function drawRoundedRect(ctx, x, y, width, height, radius) {\n                if (height === 0) {\n                  return;\n                } // peaks are float values from -1 to 1. Use absolute height values in\n                // order to correctly calculate rounded rectangle coordinates\n\n                if (height < 0) {\n                  height *= -1;\n                  y -= height;\n                }\n                ctx.beginPath();\n                ctx.moveTo(x + radius, y);\n                ctx.lineTo(x + width - radius, y);\n                ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n                ctx.lineTo(x + width, y + height - radius);\n                ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n                ctx.lineTo(x + radius, y + height);\n                ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n                ctx.lineTo(x, y + radius);\n                ctx.quadraticCurveTo(x, y, x + radius, y);\n                ctx.closePath();\n                ctx.fill();\n              }\n              /**\n               * Render the actual wave and progress lines\n               *\n               * @param {number[]} peaks Array with peaks data\n               * @param {number} absmax Maximum peak value (absolute)\n               * @param {number} halfH Half the height of the waveform\n               * @param {number} offsetY Offset to the top\n               * @param {number} start The x-offset of the beginning of the area that\n               * should be rendered\n               * @param {number} end The x-offset of the end of the area that\n               * should be rendered\n               */\n            }, {\n              key: \"drawLines\",\n              value: function drawLines(peaks, absmax, halfH, offsetY, start, end) {\n                this.drawLineToContext(this.waveCtx, peaks, absmax, halfH, offsetY, start, end);\n                if (this.hasProgressCanvas) {\n                  this.drawLineToContext(this.progressCtx, peaks, absmax, halfH, offsetY, start, end);\n                }\n              }\n              /**\n               * Render the actual waveform line on a `canvas` element\n               *\n               * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n               * @param {number[]} peaks Array with peaks data\n               * @param {number} absmax Maximum peak value (absolute)\n               * @param {number} halfH Half the height of the waveform\n               * @param {number} offsetY Offset to the top\n               * @param {number} start The x-offset of the beginning of the area that\n               * should be rendered\n               * @param {number} end The x-offset of the end of the area that\n               * should be rendered\n               */\n            }, {\n              key: \"drawLineToContext\",\n              value: function drawLineToContext(ctx, peaks, absmax, halfH, offsetY, start, end) {\n                if (!ctx) {\n                  return;\n                }\n                var length = peaks.length / 2;\n                var first = Math.round(length * this.start); // use one more peak value to make sure we join peaks at ends -- unless,\n                // of course, this is the last canvas\n\n                var last = Math.round(length * this.end) + 1;\n                var canvasStart = first;\n                var canvasEnd = last;\n                var scale = this.wave.width / (canvasEnd - canvasStart - 1); // optimization\n\n                var halfOffset = halfH + offsetY;\n                var absmaxHalf = absmax / halfH;\n                ctx.beginPath();\n                ctx.moveTo((canvasStart - first) * scale, halfOffset);\n                ctx.lineTo((canvasStart - first) * scale, halfOffset - Math.round((peaks[2 * canvasStart] || 0) / absmaxHalf));\n                var i, peak, h;\n                for (i = canvasStart; i < canvasEnd; i++) {\n                  peak = peaks[2 * i] || 0;\n                  h = Math.round(peak / absmaxHalf);\n                  ctx.lineTo((i - first) * scale + this.halfPixel, halfOffset - h);\n                } // draw the bottom edge going backwards, to make a single\n                // closed hull to fill\n\n                var j = canvasEnd - 1;\n                for (j; j >= canvasStart; j--) {\n                  peak = peaks[2 * j + 1] || 0;\n                  h = Math.round(peak / absmaxHalf);\n                  ctx.lineTo((j - first) * scale + this.halfPixel, halfOffset - h);\n                }\n                ctx.lineTo((canvasStart - first) * scale, halfOffset - Math.round((peaks[2 * canvasStart + 1] || 0) / absmaxHalf));\n                ctx.closePath();\n                ctx.fill();\n              }\n              /**\n               * Destroys this entry\n               */\n            }, {\n              key: \"destroy\",\n              value: function destroy() {\n                this.waveCtx = null;\n                this.wave = null;\n                this.progressCtx = null;\n                this.progress = null;\n              }\n              /**\n               * Return image data of the wave `canvas` element\n               *\n               * When using a `type` of `'blob'`, this will return a `Promise` that\n               * resolves with a `Blob` instance.\n               *\n               * @param {string} format='image/png' An optional value of a format type.\n               * @param {number} quality=0.92 An optional value between 0 and 1.\n               * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\n               * @return {string|Promise} When using the default `'dataURL'` `type` this\n               * returns a data URL. When using the `'blob'` `type` this returns a\n               * `Promise` that resolves with a `Blob` instance.\n               */\n            }, {\n              key: \"getImage\",\n              value: function getImage(format, quality, type) {\n                var _this = this;\n                if (type === 'blob') {\n                  return new Promise(function (resolve) {\n                    _this.wave.toBlob(resolve, format, quality);\n                  });\n                } else if (type === 'dataURL') {\n                  return this.wave.toDataURL(format, quality);\n                }\n              }\n            }]);\n            return CanvasEntry;\n          }();\n          exports.default = CanvasEntry;\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/drawer.js\":\n        /*!***********************!*\\\n          !*** ./src/drawer.js ***!\n          \\***********************/\n        /***/\n        function srcDrawerJs(module, exports, __webpack_require__) {\n          \"use strict\";\n\n          function _typeof(obj) {\n            \"@babel/helpers - typeof\";\n\n            if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n              _typeof = function _typeof(obj) {\n                return typeof obj;\n              };\n            } else {\n              _typeof = function _typeof(obj) {\n                return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n              };\n            }\n            return _typeof(obj);\n          }\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports.default = void 0;\n          var util = _interopRequireWildcard(__webpack_require__( /*! ./util */\"./src/util/index.js\"));\n          function _getRequireWildcardCache(nodeInterop) {\n            if (typeof WeakMap !== \"function\") return null;\n            var cacheBabelInterop = new WeakMap();\n            var cacheNodeInterop = new WeakMap();\n            return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n              return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n            })(nodeInterop);\n          }\n          function _interopRequireWildcard(obj, nodeInterop) {\n            if (!nodeInterop && obj && obj.__esModule) {\n              return obj;\n            }\n            if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n              return {\n                default: obj\n              };\n            }\n            var cache = _getRequireWildcardCache(nodeInterop);\n            if (cache && cache.has(obj)) {\n              return cache.get(obj);\n            }\n            var newObj = {};\n            var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n            for (var key in obj) {\n              if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n                var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n                if (desc && (desc.get || desc.set)) {\n                  Object.defineProperty(newObj, key, desc);\n                } else {\n                  newObj[key] = obj[key];\n                }\n              }\n            }\n            newObj.default = obj;\n            if (cache) {\n              cache.set(obj, newObj);\n            }\n            return newObj;\n          }\n          function _classCallCheck(instance, Constructor) {\n            if (!(instance instanceof Constructor)) {\n              throw new TypeError(\"Cannot call a class as a function\");\n            }\n          }\n          function _defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, descriptor.key, descriptor);\n            }\n          }\n          function _createClass(Constructor, protoProps, staticProps) {\n            if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) _defineProperties(Constructor, staticProps);\n            return Constructor;\n          }\n          function _inherits(subClass, superClass) {\n            if (typeof superClass !== \"function\" && superClass !== null) {\n              throw new TypeError(\"Super expression must either be null or a function\");\n            }\n            subClass.prototype = Object.create(superClass && superClass.prototype, {\n              constructor: {\n                value: subClass,\n                writable: true,\n                configurable: true\n              }\n            });\n            if (superClass) _setPrototypeOf(subClass, superClass);\n          }\n          function _setPrototypeOf(o, p) {\n            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n              o.__proto__ = p;\n              return o;\n            };\n            return _setPrototypeOf(o, p);\n          }\n          function _createSuper(Derived) {\n            var hasNativeReflectConstruct = _isNativeReflectConstruct();\n            return function _createSuperInternal() {\n              var Super = _getPrototypeOf(Derived),\n                result;\n              if (hasNativeReflectConstruct) {\n                var NewTarget = _getPrototypeOf(this).constructor;\n                result = Reflect.construct(Super, arguments, NewTarget);\n              } else {\n                result = Super.apply(this, arguments);\n              }\n              return _possibleConstructorReturn(this, result);\n            };\n          }\n          function _possibleConstructorReturn(self, call) {\n            if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n              return call;\n            } else if (call !== void 0) {\n              throw new TypeError(\"Derived constructors may only return object or undefined\");\n            }\n            return _assertThisInitialized(self);\n          }\n          function _assertThisInitialized(self) {\n            if (self === void 0) {\n              throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            }\n            return self;\n          }\n          function _isNativeReflectConstruct() {\n            if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n            if (Reflect.construct.sham) return false;\n            if (typeof Proxy === \"function\") return true;\n            try {\n              Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n              return true;\n            } catch (e) {\n              return false;\n            }\n          }\n          function _getPrototypeOf(o) {\n            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n              return o.__proto__ || Object.getPrototypeOf(o);\n            };\n            return _getPrototypeOf(o);\n          }\n\n          /**\n           * Parent class for renderers\n           *\n           * @extends {Observer}\n           */\n          var Drawer = /*#__PURE__*/function (_util$Observer) {\n            _inherits(Drawer, _util$Observer);\n            var _super = _createSuper(Drawer);\n\n            /**\n             * @param {HTMLElement} container The container node of the wavesurfer instance\n             * @param {WavesurferParams} params The wavesurfer initialisation options\n             */\n            function Drawer(container, params) {\n              var _this;\n              _classCallCheck(this, Drawer);\n              _this = _super.call(this);\n              _this.container = util.withOrientation(container, params.vertical);\n              /**\n               * @type {WavesurferParams}\n               */\n\n              _this.params = params;\n              /**\n               * The width of the renderer\n               * @type {number}\n               */\n\n              _this.width = 0;\n              /**\n               * The height of the renderer\n               * @type {number}\n               */\n\n              _this.height = params.height * _this.params.pixelRatio;\n              _this.lastPos = 0;\n              /**\n               * The `<wave>` element which is added to the container\n               * @type {HTMLElement}\n               */\n\n              _this.wrapper = null;\n              return _this;\n            }\n            /**\n             * Alias of `util.style`\n             *\n             * @param {HTMLElement} el The element that the styles will be applied to\n             * @param {Object} styles The map of propName: attribute, both are used as-is\n             * @return {HTMLElement} el\n             */\n\n            _createClass(Drawer, [{\n              key: \"style\",\n              value: function style(el, styles) {\n                return util.style(el, styles);\n              }\n              /**\n               * Create the wrapper `<wave>` element, style it and set up the events for\n               * interaction\n               */\n            }, {\n              key: \"createWrapper\",\n              value: function createWrapper() {\n                this.wrapper = util.withOrientation(this.container.appendChild(document.createElement('wave')), this.params.vertical);\n                this.style(this.wrapper, {\n                  display: 'block',\n                  position: 'relative',\n                  userSelect: 'none',\n                  webkitUserSelect: 'none',\n                  height: this.params.height + 'px'\n                });\n                if (this.params.fillParent || this.params.scrollParent) {\n                  this.style(this.wrapper, {\n                    width: '100%',\n                    overflowX: this.params.hideScrollbar ? 'hidden' : 'auto',\n                    overflowY: 'hidden'\n                  });\n                }\n                this.setupWrapperEvents();\n              }\n              /**\n               * Handle click event\n               *\n               * @param {Event} e Click event\n               * @param {?boolean} noPrevent Set to true to not call `e.preventDefault()`\n               * @return {number} Playback position from 0 to 1\n               */\n            }, {\n              key: \"handleEvent\",\n              value: function handleEvent(e, noPrevent) {\n                !noPrevent && e.preventDefault();\n                var clientX = util.withOrientation(e.targetTouches ? e.targetTouches[0] : e, this.params.vertical).clientX;\n                var bbox = this.wrapper.getBoundingClientRect();\n                var nominalWidth = this.width;\n                var parentWidth = this.getWidth();\n                var progressPixels = this.getProgressPixels(bbox, clientX);\n                var progress;\n                if (!this.params.fillParent && nominalWidth < parentWidth) {\n                  progress = progressPixels * (this.params.pixelRatio / nominalWidth) || 0;\n                } else {\n                  progress = (progressPixels + this.wrapper.scrollLeft) / this.wrapper.scrollWidth || 0;\n                }\n                return util.clamp(progress, 0, 1);\n              }\n            }, {\n              key: \"getProgressPixels\",\n              value: function getProgressPixels(wrapperBbox, clientX) {\n                if (this.params.rtl) {\n                  return wrapperBbox.right - clientX;\n                } else {\n                  return clientX - wrapperBbox.left;\n                }\n              }\n            }, {\n              key: \"setupWrapperEvents\",\n              value: function setupWrapperEvents() {\n                var _this2 = this;\n                this.wrapper.addEventListener('click', function (e) {\n                  var orientedEvent = util.withOrientation(e, _this2.params.vertical);\n                  var scrollbarHeight = _this2.wrapper.offsetHeight - _this2.wrapper.clientHeight;\n                  if (scrollbarHeight !== 0) {\n                    // scrollbar is visible.  Check if click was on it\n                    var bbox = _this2.wrapper.getBoundingClientRect();\n                    if (orientedEvent.clientY >= bbox.bottom - scrollbarHeight) {\n                      // ignore mousedown as it was on the scrollbar\n                      return;\n                    }\n                  }\n                  if (_this2.params.interact) {\n                    _this2.fireEvent('click', e, _this2.handleEvent(e));\n                  }\n                });\n                this.wrapper.addEventListener('dblclick', function (e) {\n                  if (_this2.params.interact) {\n                    _this2.fireEvent('dblclick', e, _this2.handleEvent(e));\n                  }\n                });\n                this.wrapper.addEventListener('scroll', function (e) {\n                  return _this2.fireEvent('scroll', e);\n                });\n              }\n              /**\n               * Draw peaks on the canvas\n               *\n               * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n               * for split channel rendering\n               * @param {number} length The width of the area that should be drawn\n               * @param {number} start The x-offset of the beginning of the area that\n               * should be rendered\n               * @param {number} end The x-offset of the end of the area that should be\n               * rendered\n               */\n            }, {\n              key: \"drawPeaks\",\n              value: function drawPeaks(peaks, length, start, end) {\n                if (!this.setWidth(length)) {\n                  this.clearWave();\n                }\n                this.params.barWidth ? this.drawBars(peaks, 0, start, end) : this.drawWave(peaks, 0, start, end);\n              }\n              /**\n               * Scroll to the beginning\n               */\n            }, {\n              key: \"resetScroll\",\n              value: function resetScroll() {\n                if (this.wrapper !== null) {\n                  this.wrapper.scrollLeft = 0;\n                }\n              }\n              /**\n               * Recenter the view-port at a certain percent of the waveform\n               *\n               * @param {number} percent Value from 0 to 1 on the waveform\n               */\n            }, {\n              key: \"recenter\",\n              value: function recenter(percent) {\n                var position = this.wrapper.scrollWidth * percent;\n                this.recenterOnPosition(position, true);\n              }\n              /**\n               * Recenter the view-port on a position, either scroll there immediately or\n               * in steps of 5 pixels\n               *\n               * @param {number} position X-offset in pixels\n               * @param {boolean} immediate Set to true to immediately scroll somewhere\n               */\n            }, {\n              key: \"recenterOnPosition\",\n              value: function recenterOnPosition(position, immediate) {\n                var scrollLeft = this.wrapper.scrollLeft;\n                var half = ~~(this.wrapper.clientWidth / 2);\n                var maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n                var target = position - half;\n                var offset = target - scrollLeft;\n                if (maxScroll == 0) {\n                  // no need to continue if scrollbar is not there\n                  return;\n                } // if the cursor is currently visible...\n\n                if (!immediate && -half <= offset && offset < half) {\n                  // set rate at which waveform is centered\n                  var rate = this.params.autoCenterRate; // make rate depend on width of view and length of waveform\n\n                  rate /= half;\n                  rate *= maxScroll;\n                  offset = Math.max(-rate, Math.min(rate, offset));\n                  target = scrollLeft + offset;\n                } // limit target to valid range (0 to maxScroll)\n\n                target = Math.max(0, Math.min(maxScroll, target)); // no use attempting to scroll if we're not moving\n\n                if (target != scrollLeft) {\n                  this.wrapper.scrollLeft = target;\n                }\n              }\n              /**\n               * Get the current scroll position in pixels\n               *\n               * @return {number} Horizontal scroll position in pixels\n               */\n            }, {\n              key: \"getScrollX\",\n              value: function getScrollX() {\n                var x = 0;\n                if (this.wrapper) {\n                  var pixelRatio = this.params.pixelRatio;\n                  x = Math.round(this.wrapper.scrollLeft * pixelRatio); // In cases of elastic scroll (safari with mouse wheel) you can\n                  // scroll beyond the limits of the container\n                  // Calculate and floor the scrollable extent to make sure an out\n                  // of bounds value is not returned\n                  // Ticket #1312\n\n                  if (this.params.scrollParent) {\n                    var maxScroll = ~~(this.wrapper.scrollWidth * pixelRatio - this.getWidth());\n                    x = Math.min(maxScroll, Math.max(0, x));\n                  }\n                }\n                return x;\n              }\n              /**\n               * Get the width of the container\n               *\n               * @return {number} The width of the container\n               */\n            }, {\n              key: \"getWidth\",\n              value: function getWidth() {\n                return Math.round(this.container.clientWidth * this.params.pixelRatio);\n              }\n              /**\n               * Set the width of the container\n               *\n               * @param {number} width The new width of the container\n               * @return {boolean} Whether the width of the container was updated or not\n               */\n            }, {\n              key: \"setWidth\",\n              value: function setWidth(width) {\n                if (this.width == width) {\n                  return false;\n                }\n                this.width = width;\n                if (this.params.fillParent || this.params.scrollParent) {\n                  this.style(this.wrapper, {\n                    width: ''\n                  });\n                } else {\n                  var newWidth = ~~(this.width / this.params.pixelRatio) + 'px';\n                  this.style(this.wrapper, {\n                    width: newWidth\n                  });\n                }\n                this.updateSize();\n                return true;\n              }\n              /**\n               * Set the height of the container\n               *\n               * @param {number} height The new height of the container.\n               * @return {boolean} Whether the height of the container was updated or not\n               */\n            }, {\n              key: \"setHeight\",\n              value: function setHeight(height) {\n                if (height == this.height) {\n                  return false;\n                }\n                this.height = height;\n                this.style(this.wrapper, {\n                  height: ~~(this.height / this.params.pixelRatio) + 'px'\n                });\n                this.updateSize();\n                return true;\n              }\n              /**\n               * Called by wavesurfer when progress should be rendered\n               *\n               * @param {number} progress From 0 to 1\n               */\n            }, {\n              key: \"progress\",\n              value: function progress(_progress) {\n                var minPxDelta = 1 / this.params.pixelRatio;\n                var pos = Math.round(_progress * this.width) * minPxDelta;\n                if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\n                  this.lastPos = pos;\n                  if (this.params.scrollParent && this.params.autoCenter) {\n                    var newPos = ~~(this.wrapper.scrollWidth * _progress);\n                    this.recenterOnPosition(newPos, this.params.autoCenterImmediately);\n                  }\n                  this.updateProgress(pos);\n                }\n              }\n              /**\n               * This is called when wavesurfer is destroyed\n               */\n            }, {\n              key: \"destroy\",\n              value: function destroy() {\n                this.unAll();\n                if (this.wrapper) {\n                  if (this.wrapper.parentNode == this.container.domElement) {\n                    this.container.removeChild(this.wrapper.domElement);\n                  }\n                  this.wrapper = null;\n                }\n              }\n              /* Renderer-specific methods */\n\n              /**\n               * Called after cursor related params have changed.\n               *\n               * @abstract\n               */\n            }, {\n              key: \"updateCursor\",\n              value: function updateCursor() {}\n              /**\n               * Called when the size of the container changes so the renderer can adjust\n               *\n               * @abstract\n               */\n            }, {\n              key: \"updateSize\",\n              value: function updateSize() {}\n              /**\n               * Draw a waveform with bars\n               *\n               * @abstract\n               * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\n               * rendering\n               * @param {number} channelIndex The index of the current channel. Normally\n               * should be 0\n               * @param {number} start The x-offset of the beginning of the area that\n               * should be rendered\n               * @param {number} end The x-offset of the end of the area that should be\n               * rendered\n               */\n            }, {\n              key: \"drawBars\",\n              value: function drawBars(peaks, channelIndex, start, end) {}\n              /**\n               * Draw a waveform\n               *\n               * @abstract\n               * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\n               * rendering\n               * @param {number} channelIndex The index of the current channel. Normally\n               * should be 0\n               * @param {number} start The x-offset of the beginning of the area that\n               * should be rendered\n               * @param {number} end The x-offset of the end of the area that should be\n               * rendered\n               */\n            }, {\n              key: \"drawWave\",\n              value: function drawWave(peaks, channelIndex, start, end) {}\n              /**\n               * Clear the waveform\n               *\n               * @abstract\n               */\n            }, {\n              key: \"clearWave\",\n              value: function clearWave() {}\n              /**\n               * Render the new progress\n               *\n               * @abstract\n               * @param {number} position X-Offset of progress position in pixels\n               */\n            }, {\n              key: \"updateProgress\",\n              value: function updateProgress(position) {}\n            }]);\n            return Drawer;\n          }(util.Observer);\n          exports.default = Drawer;\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/drawer.multicanvas.js\":\n        /*!***********************************!*\\\n          !*** ./src/drawer.multicanvas.js ***!\n          \\***********************************/\n        /***/\n        function srcDrawerMulticanvasJs(module, exports, __webpack_require__) {\n          \"use strict\";\n\n          function _typeof(obj) {\n            \"@babel/helpers - typeof\";\n\n            if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n              _typeof = function _typeof(obj) {\n                return typeof obj;\n              };\n            } else {\n              _typeof = function _typeof(obj) {\n                return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n              };\n            }\n            return _typeof(obj);\n          }\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports.default = void 0;\n          var _drawer = _interopRequireDefault(__webpack_require__( /*! ./drawer */\"./src/drawer.js\"));\n          var util = _interopRequireWildcard(__webpack_require__( /*! ./util */\"./src/util/index.js\"));\n          var _drawer2 = _interopRequireDefault(__webpack_require__( /*! ./drawer.canvasentry */\"./src/drawer.canvasentry.js\"));\n          function _getRequireWildcardCache(nodeInterop) {\n            if (typeof WeakMap !== \"function\") return null;\n            var cacheBabelInterop = new WeakMap();\n            var cacheNodeInterop = new WeakMap();\n            return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n              return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n            })(nodeInterop);\n          }\n          function _interopRequireWildcard(obj, nodeInterop) {\n            if (!nodeInterop && obj && obj.__esModule) {\n              return obj;\n            }\n            if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n              return {\n                default: obj\n              };\n            }\n            var cache = _getRequireWildcardCache(nodeInterop);\n            if (cache && cache.has(obj)) {\n              return cache.get(obj);\n            }\n            var newObj = {};\n            var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n            for (var key in obj) {\n              if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n                var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n                if (desc && (desc.get || desc.set)) {\n                  Object.defineProperty(newObj, key, desc);\n                } else {\n                  newObj[key] = obj[key];\n                }\n              }\n            }\n            newObj.default = obj;\n            if (cache) {\n              cache.set(obj, newObj);\n            }\n            return newObj;\n          }\n          function _interopRequireDefault(obj) {\n            return obj && obj.__esModule ? obj : {\n              default: obj\n            };\n          }\n          function _classCallCheck(instance, Constructor) {\n            if (!(instance instanceof Constructor)) {\n              throw new TypeError(\"Cannot call a class as a function\");\n            }\n          }\n          function _defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, descriptor.key, descriptor);\n            }\n          }\n          function _createClass(Constructor, protoProps, staticProps) {\n            if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) _defineProperties(Constructor, staticProps);\n            return Constructor;\n          }\n          function _inherits(subClass, superClass) {\n            if (typeof superClass !== \"function\" && superClass !== null) {\n              throw new TypeError(\"Super expression must either be null or a function\");\n            }\n            subClass.prototype = Object.create(superClass && superClass.prototype, {\n              constructor: {\n                value: subClass,\n                writable: true,\n                configurable: true\n              }\n            });\n            if (superClass) _setPrototypeOf(subClass, superClass);\n          }\n          function _setPrototypeOf(o, p) {\n            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n              o.__proto__ = p;\n              return o;\n            };\n            return _setPrototypeOf(o, p);\n          }\n          function _createSuper(Derived) {\n            var hasNativeReflectConstruct = _isNativeReflectConstruct();\n            return function _createSuperInternal() {\n              var Super = _getPrototypeOf(Derived),\n                result;\n              if (hasNativeReflectConstruct) {\n                var NewTarget = _getPrototypeOf(this).constructor;\n                result = Reflect.construct(Super, arguments, NewTarget);\n              } else {\n                result = Super.apply(this, arguments);\n              }\n              return _possibleConstructorReturn(this, result);\n            };\n          }\n          function _possibleConstructorReturn(self, call) {\n            if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n              return call;\n            } else if (call !== void 0) {\n              throw new TypeError(\"Derived constructors may only return object or undefined\");\n            }\n            return _assertThisInitialized(self);\n          }\n          function _assertThisInitialized(self) {\n            if (self === void 0) {\n              throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            }\n            return self;\n          }\n          function _isNativeReflectConstruct() {\n            if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n            if (Reflect.construct.sham) return false;\n            if (typeof Proxy === \"function\") return true;\n            try {\n              Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n              return true;\n            } catch (e) {\n              return false;\n            }\n          }\n          function _getPrototypeOf(o) {\n            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n              return o.__proto__ || Object.getPrototypeOf(o);\n            };\n            return _getPrototypeOf(o);\n          }\n\n          /**\n           * MultiCanvas renderer for wavesurfer. Is currently the default and sole\n           * builtin renderer.\n           *\n           * A `MultiCanvas` consists of one or more `CanvasEntry` instances, depending\n           * on the zoom level.\n           */\n          var MultiCanvas = /*#__PURE__*/function (_Drawer) {\n            _inherits(MultiCanvas, _Drawer);\n            var _super = _createSuper(MultiCanvas);\n\n            /**\n             * @param {HTMLElement} container The container node of the wavesurfer instance\n             * @param {WavesurferParams} params The wavesurfer initialisation options\n             */\n            function MultiCanvas(container, params) {\n              var _this;\n              _classCallCheck(this, MultiCanvas);\n              _this = _super.call(this, container, params);\n              /**\n               * @type {number}\n               */\n\n              _this.maxCanvasWidth = params.maxCanvasWidth;\n              /**\n               * @type {number}\n               */\n\n              _this.maxCanvasElementWidth = Math.round(params.maxCanvasWidth / params.pixelRatio);\n              /**\n               * Whether or not the progress wave is rendered. If the `waveColor`\n               * and `progressColor` are the same color it is not.\n               *\n               * @type {boolean}\n               */\n\n              _this.hasProgressCanvas = params.waveColor != params.progressColor;\n              /**\n               * @type {number}\n               */\n\n              _this.halfPixel = 0.5 / params.pixelRatio;\n              /**\n               * List of `CanvasEntry` instances.\n               *\n               * @type {Array}\n               */\n\n              _this.canvases = [];\n              /**\n               * @type {HTMLElement}\n               */\n\n              _this.progressWave = null;\n              /**\n               * Class used to generate entries.\n               *\n               * @type {function}\n               */\n\n              _this.EntryClass = _drawer2.default;\n              /**\n               * Canvas 2d context attributes.\n               *\n               * @type {object}\n               */\n\n              _this.canvasContextAttributes = params.drawingContextAttributes;\n              /**\n               * Overlap added between entries to prevent vertical white stripes\n               * between `canvas` elements.\n               *\n               * @type {number}\n               */\n\n              _this.overlap = 2 * Math.ceil(params.pixelRatio / 2);\n              /**\n               * The radius of the wave bars. Makes bars rounded\n               *\n               * @type {number}\n               */\n\n              _this.barRadius = params.barRadius || 0;\n              /**\n               * Whether to render the waveform vertically. Defaults to false.\n               *\n               * @type {boolean}\n               */\n\n              _this.vertical = params.vertical;\n              return _this;\n            }\n            /**\n             * Initialize the drawer\n             */\n\n            _createClass(MultiCanvas, [{\n              key: \"init\",\n              value: function init() {\n                this.createWrapper();\n                this.createElements();\n              }\n              /**\n               * Create the canvas elements and style them\n               *\n               */\n            }, {\n              key: \"createElements\",\n              value: function createElements() {\n                this.progressWave = util.withOrientation(this.wrapper.appendChild(document.createElement('wave')), this.params.vertical);\n                this.style(this.progressWave, {\n                  position: 'absolute',\n                  zIndex: 3,\n                  left: 0,\n                  top: 0,\n                  bottom: 0,\n                  overflow: 'hidden',\n                  width: '0',\n                  display: 'none',\n                  boxSizing: 'border-box',\n                  borderRightStyle: 'solid',\n                  pointerEvents: 'none'\n                });\n                this.addCanvas();\n                this.updateCursor();\n              }\n              /**\n               * Update cursor style\n               */\n            }, {\n              key: \"updateCursor\",\n              value: function updateCursor() {\n                this.style(this.progressWave, {\n                  borderRightWidth: this.params.cursorWidth + 'px',\n                  borderRightColor: this.params.cursorColor\n                });\n              }\n              /**\n               * Adjust to the updated size by adding or removing canvases\n               */\n            }, {\n              key: \"updateSize\",\n              value: function updateSize() {\n                var _this2 = this;\n                var totalWidth = Math.round(this.width / this.params.pixelRatio);\n                var requiredCanvases = Math.ceil(totalWidth / (this.maxCanvasElementWidth + this.overlap)); // add required canvases\n\n                while (this.canvases.length < requiredCanvases) {\n                  this.addCanvas();\n                } // remove older existing canvases, if any\n\n                while (this.canvases.length > requiredCanvases) {\n                  this.removeCanvas();\n                }\n                var canvasWidth = this.maxCanvasWidth + this.overlap;\n                var lastCanvas = this.canvases.length - 1;\n                this.canvases.forEach(function (entry, i) {\n                  if (i == lastCanvas) {\n                    canvasWidth = _this2.width - _this2.maxCanvasWidth * lastCanvas;\n                  }\n                  _this2.updateDimensions(entry, canvasWidth, _this2.height);\n                  entry.clearWave();\n                });\n              }\n              /**\n               * Add a canvas to the canvas list\n               *\n               */\n            }, {\n              key: \"addCanvas\",\n              value: function addCanvas() {\n                var entry = new this.EntryClass();\n                entry.canvasContextAttributes = this.canvasContextAttributes;\n                entry.hasProgressCanvas = this.hasProgressCanvas;\n                entry.halfPixel = this.halfPixel;\n                var leftOffset = this.maxCanvasElementWidth * this.canvases.length; // wave\n\n                var wave = util.withOrientation(this.wrapper.appendChild(document.createElement('canvas')), this.params.vertical);\n                this.style(wave, {\n                  position: 'absolute',\n                  zIndex: 2,\n                  left: leftOffset + 'px',\n                  top: 0,\n                  bottom: 0,\n                  height: '100%',\n                  pointerEvents: 'none'\n                });\n                entry.initWave(wave); // progress\n\n                if (this.hasProgressCanvas) {\n                  var progress = util.withOrientation(this.progressWave.appendChild(document.createElement('canvas')), this.params.vertical);\n                  this.style(progress, {\n                    position: 'absolute',\n                    left: leftOffset + 'px',\n                    top: 0,\n                    bottom: 0,\n                    height: '100%'\n                  });\n                  entry.initProgress(progress);\n                }\n                this.canvases.push(entry);\n              }\n              /**\n               * Pop single canvas from the list\n               *\n               */\n            }, {\n              key: \"removeCanvas\",\n              value: function removeCanvas() {\n                var lastEntry = this.canvases[this.canvases.length - 1]; // wave\n\n                lastEntry.wave.parentElement.removeChild(lastEntry.wave.domElement); // progress\n\n                if (this.hasProgressCanvas) {\n                  lastEntry.progress.parentElement.removeChild(lastEntry.progress.domElement);\n                } // cleanup\n\n                if (lastEntry) {\n                  lastEntry.destroy();\n                  lastEntry = null;\n                }\n                this.canvases.pop();\n              }\n              /**\n               * Update the dimensions of a canvas element\n               *\n               * @param {CanvasEntry} entry Target entry\n               * @param {number} width The new width of the element\n               * @param {number} height The new height of the element\n               */\n            }, {\n              key: \"updateDimensions\",\n              value: function updateDimensions(entry, width, height) {\n                var elementWidth = Math.round(width / this.params.pixelRatio);\n                var totalWidth = Math.round(this.width / this.params.pixelRatio); // update canvas dimensions\n\n                entry.updateDimensions(elementWidth, totalWidth, width, height); // style element\n\n                this.style(this.progressWave, {\n                  display: 'block'\n                });\n              }\n              /**\n               * Clear the whole multi-canvas\n               */\n            }, {\n              key: \"clearWave\",\n              value: function clearWave() {\n                var _this3 = this;\n                util.frame(function () {\n                  _this3.canvases.forEach(function (entry) {\n                    return entry.clearWave();\n                  });\n                })();\n              }\n              /**\n               * Draw a waveform with bars\n               *\n               * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n               * for split channel rendering\n               * @param {number} channelIndex The index of the current channel. Normally\n               * should be 0. Must be an integer.\n               * @param {number} start The x-offset of the beginning of the area that\n               * should be rendered\n               * @param {number} end The x-offset of the end of the area that should be\n               * rendered\n               * @returns {void}\n               */\n            }, {\n              key: \"drawBars\",\n              value: function drawBars(peaks, channelIndex, start, end) {\n                var _this4 = this;\n                return this.prepareDraw(peaks, channelIndex, start, end, function (_ref) {\n                  var absmax = _ref.absmax,\n                    hasMinVals = _ref.hasMinVals,\n                    height = _ref.height,\n                    offsetY = _ref.offsetY,\n                    halfH = _ref.halfH,\n                    peaks = _ref.peaks,\n                    ch = _ref.channelIndex;\n\n                  // if drawBars was called within ws.empty we don't pass a start and\n                  // don't want anything to happen\n                  if (start === undefined) {\n                    return;\n                  } // Skip every other value if there are negatives.\n\n                  var peakIndexScale = hasMinVals ? 2 : 1;\n                  var length = peaks.length / peakIndexScale;\n                  var bar = _this4.params.barWidth * _this4.params.pixelRatio;\n                  var gap = _this4.params.barGap === null ? Math.max(_this4.params.pixelRatio, ~~(bar / 2)) : Math.max(_this4.params.pixelRatio, _this4.params.barGap * _this4.params.pixelRatio);\n                  var step = bar + gap;\n                  var scale = length / _this4.width;\n                  var first = start;\n                  var last = end;\n                  var i = first;\n                  for (i; i < last; i += step) {\n                    var peak = peaks[Math.floor(i * scale * peakIndexScale)] || 0;\n                    var h = Math.round(peak / absmax * halfH);\n                    /* in case of silences, allow the user to specify that we\n                     * always draw *something* (normally a 1px high bar) */\n\n                    if (h == 0 && _this4.params.barMinHeight) {\n                      h = _this4.params.barMinHeight;\n                    }\n                    _this4.fillRect(i + _this4.halfPixel, halfH - h + offsetY, bar + _this4.halfPixel, h * 2, _this4.barRadius, ch);\n                  }\n                });\n              }\n              /**\n               * Draw a waveform\n               *\n               * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n               * for split channel rendering\n               * @param {number} channelIndex The index of the current channel. Normally\n               * should be 0\n               * @param {number?} start The x-offset of the beginning of the area that\n               * should be rendered (If this isn't set only a flat line is rendered)\n               * @param {number?} end The x-offset of the end of the area that should be\n               * rendered\n               * @returns {void}\n               */\n            }, {\n              key: \"drawWave\",\n              value: function drawWave(peaks, channelIndex, start, end) {\n                var _this5 = this;\n                return this.prepareDraw(peaks, channelIndex, start, end, function (_ref2) {\n                  var absmax = _ref2.absmax,\n                    hasMinVals = _ref2.hasMinVals,\n                    height = _ref2.height,\n                    offsetY = _ref2.offsetY,\n                    halfH = _ref2.halfH,\n                    peaks = _ref2.peaks,\n                    channelIndex = _ref2.channelIndex;\n                  if (!hasMinVals) {\n                    var reflectedPeaks = [];\n                    var len = peaks.length;\n                    var i = 0;\n                    for (i; i < len; i++) {\n                      reflectedPeaks[2 * i] = peaks[i];\n                      reflectedPeaks[2 * i + 1] = -peaks[i];\n                    }\n                    peaks = reflectedPeaks;\n                  } // if drawWave was called within ws.empty we don't pass a start and\n                  // end and simply want a flat line\n\n                  if (start !== undefined) {\n                    _this5.drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex);\n                  } // always draw a median line\n\n                  _this5.fillRect(0, halfH + offsetY - _this5.halfPixel, _this5.width, _this5.halfPixel, _this5.barRadius, channelIndex);\n                });\n              }\n              /**\n               * Tell the canvas entries to render their portion of the waveform\n               *\n               * @param {number[]} peaks Peaks data\n               * @param {number} absmax Maximum peak value (absolute)\n               * @param {number} halfH Half the height of the waveform\n               * @param {number} offsetY Offset to the top\n               * @param {number} start The x-offset of the beginning of the area that\n               * should be rendered\n               * @param {number} end The x-offset of the end of the area that\n               * should be rendered\n               * @param {channelIndex} channelIndex The channel index of the line drawn\n               */\n            }, {\n              key: \"drawLine\",\n              value: function drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex) {\n                var _this6 = this;\n                var _ref3 = this.params.splitChannelsOptions.channelColors[channelIndex] || {},\n                  waveColor = _ref3.waveColor,\n                  progressColor = _ref3.progressColor;\n                this.canvases.forEach(function (entry, i) {\n                  _this6.setFillStyles(entry, waveColor, progressColor);\n                  _this6.applyCanvasTransforms(entry, _this6.params.vertical);\n                  entry.drawLines(peaks, absmax, halfH, offsetY, start, end);\n                });\n              }\n              /**\n               * Draw a rectangle on the multi-canvas\n               *\n               * @param {number} x X-position of the rectangle\n               * @param {number} y Y-position of the rectangle\n               * @param {number} width Width of the rectangle\n               * @param {number} height Height of the rectangle\n               * @param {number} radius Radius of the rectangle\n               * @param {channelIndex} channelIndex The channel index of the bar drawn\n               */\n            }, {\n              key: \"fillRect\",\n              value: function fillRect(x, y, width, height, radius, channelIndex) {\n                var startCanvas = Math.floor(x / this.maxCanvasWidth);\n                var endCanvas = Math.min(Math.ceil((x + width) / this.maxCanvasWidth) + 1, this.canvases.length);\n                var i = startCanvas;\n                for (i; i < endCanvas; i++) {\n                  var entry = this.canvases[i];\n                  var leftOffset = i * this.maxCanvasWidth;\n                  var intersection = {\n                    x1: Math.max(x, i * this.maxCanvasWidth),\n                    y1: y,\n                    x2: Math.min(x + width, i * this.maxCanvasWidth + entry.wave.width),\n                    y2: y + height\n                  };\n                  if (intersection.x1 < intersection.x2) {\n                    var _ref4 = this.params.splitChannelsOptions.channelColors[channelIndex] || {},\n                      waveColor = _ref4.waveColor,\n                      progressColor = _ref4.progressColor;\n                    this.setFillStyles(entry, waveColor, progressColor);\n                    this.applyCanvasTransforms(entry, this.params.vertical);\n                    entry.fillRects(intersection.x1 - leftOffset, intersection.y1, intersection.x2 - intersection.x1, intersection.y2 - intersection.y1, radius);\n                  }\n                }\n              }\n              /**\n               * Returns whether to hide the channel from being drawn based on params.\n               *\n               * @param {number} channelIndex The index of the current channel.\n               * @returns {bool} True to hide the channel, false to draw.\n               */\n            }, {\n              key: \"hideChannel\",\n              value: function hideChannel(channelIndex) {\n                return this.params.splitChannels && this.params.splitChannelsOptions.filterChannels.includes(channelIndex);\n              }\n              /**\n               * Performs preparation tasks and calculations which are shared by `drawBars`\n               * and `drawWave`\n               *\n               * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for\n               * split channel rendering\n               * @param {number} channelIndex The index of the current channel. Normally\n               * should be 0\n               * @param {number?} start The x-offset of the beginning of the area that\n               * should be rendered. If this isn't set only a flat line is rendered\n               * @param {number?} end The x-offset of the end of the area that should be\n               * rendered\n               * @param {function} fn The render function to call, e.g. `drawWave`\n               * @param {number} drawIndex The index of the current channel after filtering.\n               * @param {number?} normalizedMax Maximum modulation value across channels for use with relativeNormalization. Ignored when undefined\n               * @returns {void}\n               */\n            }, {\n              key: \"prepareDraw\",\n              value: function prepareDraw(peaks, channelIndex, start, end, fn, drawIndex, normalizedMax) {\n                var _this7 = this;\n                return util.frame(function () {\n                  // Split channels and call this function with the channelIndex set\n                  if (peaks[0] instanceof Array) {\n                    var channels = peaks;\n                    if (_this7.params.splitChannels) {\n                      var filteredChannels = channels.filter(function (c, i) {\n                        return !_this7.hideChannel(i);\n                      });\n                      if (!_this7.params.splitChannelsOptions.overlay) {\n                        _this7.setHeight(Math.max(filteredChannels.length, 1) * _this7.params.height * _this7.params.pixelRatio);\n                      }\n                      var overallAbsMax;\n                      if (_this7.params.splitChannelsOptions && _this7.params.splitChannelsOptions.relativeNormalization) {\n                        // calculate maximum peak across channels to use for normalization\n                        overallAbsMax = util.max(channels.map(function (channelPeaks) {\n                          return util.absMax(channelPeaks);\n                        }));\n                      }\n                      return channels.forEach(function (channelPeaks, i) {\n                        return _this7.prepareDraw(channelPeaks, i, start, end, fn, filteredChannels.indexOf(channelPeaks), overallAbsMax);\n                      });\n                    }\n                    peaks = channels[0];\n                  } // Return and do not draw channel peaks if hidden.\n\n                  if (_this7.hideChannel(channelIndex)) {\n                    return;\n                  } // calculate maximum modulation value, either from the barHeight\n                  // parameter or if normalize=true from the largest value in the peak\n                  // set\n\n                  var absmax = 1 / _this7.params.barHeight;\n                  if (_this7.params.normalize) {\n                    absmax = normalizedMax === undefined ? util.absMax(peaks) : normalizedMax;\n                  } // Bar wave draws the bottom only as a reflection of the top,\n                  // so we don't need negative values\n\n                  var hasMinVals = [].some.call(peaks, function (val) {\n                    return val < 0;\n                  });\n                  var height = _this7.params.height * _this7.params.pixelRatio;\n                  var halfH = height / 2;\n                  var offsetY = height * drawIndex || 0; // Override offsetY if overlay is true\n\n                  if (_this7.params.splitChannelsOptions && _this7.params.splitChannelsOptions.overlay) {\n                    offsetY = 0;\n                  }\n                  return fn({\n                    absmax: absmax,\n                    hasMinVals: hasMinVals,\n                    height: height,\n                    offsetY: offsetY,\n                    halfH: halfH,\n                    peaks: peaks,\n                    channelIndex: channelIndex\n                  });\n                })();\n              }\n              /**\n               * Set the fill styles for a certain entry (wave and progress)\n               *\n               * @param {CanvasEntry} entry Target entry\n               * @param {string} waveColor Wave color to draw this entry\n               * @param {string} progressColor Progress color to draw this entry\n               */\n            }, {\n              key: \"setFillStyles\",\n              value: function setFillStyles(entry) {\n                var waveColor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.params.waveColor;\n                var progressColor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.params.progressColor;\n                entry.setFillStyles(waveColor, progressColor);\n              }\n              /**\n               * Set the canvas transforms for a certain entry (wave and progress)\n               *\n               * @param {CanvasEntry} entry Target entry\n               * @param {boolean} vertical Whether to render the waveform vertically\n               */\n            }, {\n              key: \"applyCanvasTransforms\",\n              value: function applyCanvasTransforms(entry) {\n                var vertical = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n                entry.applyCanvasTransforms(vertical);\n              }\n              /**\n               * Return image data of the multi-canvas\n               *\n               * When using a `type` of `'blob'`, this will return a `Promise`.\n               *\n               * @param {string} format='image/png' An optional value of a format type.\n               * @param {number} quality=0.92 An optional value between 0 and 1.\n               * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\n               * @return {string|string[]|Promise} When using the default `'dataURL'`\n               * `type` this returns a single data URL or an array of data URLs,\n               * one for each canvas. When using the `'blob'` `type` this returns a\n               * `Promise` that resolves with an array of `Blob` instances, one for each\n               * canvas.\n               */\n            }, {\n              key: \"getImage\",\n              value: function getImage(format, quality, type) {\n                if (type === 'blob') {\n                  return Promise.all(this.canvases.map(function (entry) {\n                    return entry.getImage(format, quality, type);\n                  }));\n                } else if (type === 'dataURL') {\n                  var images = this.canvases.map(function (entry) {\n                    return entry.getImage(format, quality, type);\n                  });\n                  return images.length > 1 ? images : images[0];\n                }\n              }\n              /**\n               * Render the new progress\n               *\n               * @param {number} position X-offset of progress position in pixels\n               */\n            }, {\n              key: \"updateProgress\",\n              value: function updateProgress(position) {\n                this.style(this.progressWave, {\n                  width: position + 'px'\n                });\n              }\n            }]);\n            return MultiCanvas;\n          }(_drawer.default);\n          exports.default = MultiCanvas;\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/mediaelement-webaudio.js\":\n        /*!**************************************!*\\\n          !*** ./src/mediaelement-webaudio.js ***!\n          \\**************************************/\n        /***/\n        function srcMediaelementWebaudioJs(module, exports, __webpack_require__) {\n          \"use strict\";\n\n          function _typeof(obj) {\n            \"@babel/helpers - typeof\";\n\n            if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n              _typeof = function _typeof(obj) {\n                return typeof obj;\n              };\n            } else {\n              _typeof = function _typeof(obj) {\n                return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n              };\n            }\n            return _typeof(obj);\n          }\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports.default = void 0;\n          var _mediaelement = _interopRequireDefault(__webpack_require__( /*! ./mediaelement */\"./src/mediaelement.js\"));\n          function _interopRequireDefault(obj) {\n            return obj && obj.__esModule ? obj : {\n              default: obj\n            };\n          }\n          function _classCallCheck(instance, Constructor) {\n            if (!(instance instanceof Constructor)) {\n              throw new TypeError(\"Cannot call a class as a function\");\n            }\n          }\n          function _defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, descriptor.key, descriptor);\n            }\n          }\n          function _createClass(Constructor, protoProps, staticProps) {\n            if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) _defineProperties(Constructor, staticProps);\n            return Constructor;\n          }\n          function _get(target, property, receiver) {\n            if (typeof Reflect !== \"undefined\" && Reflect.get) {\n              _get = Reflect.get;\n            } else {\n              _get = function _get(target, property, receiver) {\n                var base = _superPropBase(target, property);\n                if (!base) return;\n                var desc = Object.getOwnPropertyDescriptor(base, property);\n                if (desc.get) {\n                  return desc.get.call(receiver);\n                }\n                return desc.value;\n              };\n            }\n            return _get(target, property, receiver || target);\n          }\n          function _superPropBase(object, property) {\n            while (!Object.prototype.hasOwnProperty.call(object, property)) {\n              object = _getPrototypeOf(object);\n              if (object === null) break;\n            }\n            return object;\n          }\n          function _inherits(subClass, superClass) {\n            if (typeof superClass !== \"function\" && superClass !== null) {\n              throw new TypeError(\"Super expression must either be null or a function\");\n            }\n            subClass.prototype = Object.create(superClass && superClass.prototype, {\n              constructor: {\n                value: subClass,\n                writable: true,\n                configurable: true\n              }\n            });\n            if (superClass) _setPrototypeOf(subClass, superClass);\n          }\n          function _setPrototypeOf(o, p) {\n            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n              o.__proto__ = p;\n              return o;\n            };\n            return _setPrototypeOf(o, p);\n          }\n          function _createSuper(Derived) {\n            var hasNativeReflectConstruct = _isNativeReflectConstruct();\n            return function _createSuperInternal() {\n              var Super = _getPrototypeOf(Derived),\n                result;\n              if (hasNativeReflectConstruct) {\n                var NewTarget = _getPrototypeOf(this).constructor;\n                result = Reflect.construct(Super, arguments, NewTarget);\n              } else {\n                result = Super.apply(this, arguments);\n              }\n              return _possibleConstructorReturn(this, result);\n            };\n          }\n          function _possibleConstructorReturn(self, call) {\n            if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n              return call;\n            } else if (call !== void 0) {\n              throw new TypeError(\"Derived constructors may only return object or undefined\");\n            }\n            return _assertThisInitialized(self);\n          }\n          function _assertThisInitialized(self) {\n            if (self === void 0) {\n              throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            }\n            return self;\n          }\n          function _isNativeReflectConstruct() {\n            if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n            if (Reflect.construct.sham) return false;\n            if (typeof Proxy === \"function\") return true;\n            try {\n              Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n              return true;\n            } catch (e) {\n              return false;\n            }\n          }\n          function _getPrototypeOf(o) {\n            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n              return o.__proto__ || Object.getPrototypeOf(o);\n            };\n            return _getPrototypeOf(o);\n          }\n\n          /**\n           * MediaElementWebAudio backend: load audio via an HTML5 audio tag, but playback with the WebAudio API.\n           * The advantage here is that the html5 <audio> tag can perform range requests on the server and not\n           * buffer the entire file in one request, and you still get the filtering and scripting functionality\n           * of the webaudio API.\n           * Note that in order to use range requests and prevent buffering, you must provide peak data.\n           *\n           * @since 3.2.0\n           */\n          var MediaElementWebAudio = /*#__PURE__*/function (_MediaElement) {\n            _inherits(MediaElementWebAudio, _MediaElement);\n            var _super = _createSuper(MediaElementWebAudio);\n\n            /**\n             * Construct the backend\n             *\n             * @param {WavesurferParams} params Wavesurfer parameters\n             */\n            function MediaElementWebAudio(params) {\n              var _this;\n              _classCallCheck(this, MediaElementWebAudio);\n              _this = _super.call(this, params);\n              /** @private */\n\n              _this.params = params;\n              /** @private */\n\n              _this.sourceMediaElement = null;\n              return _this;\n            }\n            /**\n             * Initialise the backend, called in `wavesurfer.createBackend()`\n             */\n\n            _createClass(MediaElementWebAudio, [{\n              key: \"init\",\n              value: function init() {\n                this.setPlaybackRate(this.params.audioRate);\n                this.createTimer();\n                this.createVolumeNode();\n                this.createScriptNode();\n                this.createAnalyserNode();\n              }\n              /**\n               * Private method called by both `load` (from url)\n               * and `loadElt` (existing media element) methods.\n               *\n               * @param {HTMLMediaElement} media HTML5 Audio or Video element\n               * @param {number[]|Number.<Array[]>} peaks Array of peak data\n               * @param {string} preload HTML 5 preload attribute value\n               * @private\n               */\n            }, {\n              key: \"_load\",\n              value: function _load(media, peaks, preload) {\n                _get(_getPrototypeOf(MediaElementWebAudio.prototype), \"_load\", this).call(this, media, peaks, preload);\n                this.createMediaElementSource(media);\n              }\n              /**\n               * Create MediaElementSource node\n               *\n               * @since 3.2.0\n               * @param {HTMLMediaElement} mediaElement HTML5 Audio to load\n               */\n            }, {\n              key: \"createMediaElementSource\",\n              value: function createMediaElementSource(mediaElement) {\n                this.sourceMediaElement = this.ac.createMediaElementSource(mediaElement);\n                this.sourceMediaElement.connect(this.analyser);\n              }\n            }, {\n              key: \"play\",\n              value: function play(start, end) {\n                this.resumeAudioContext();\n                return _get(_getPrototypeOf(MediaElementWebAudio.prototype), \"play\", this).call(this, start, end);\n              }\n              /**\n               * This is called when wavesurfer is destroyed\n               *\n               */\n            }, {\n              key: \"destroy\",\n              value: function destroy() {\n                _get(_getPrototypeOf(MediaElementWebAudio.prototype), \"destroy\", this).call(this);\n                this.destroyWebAudio();\n              }\n            }]);\n            return MediaElementWebAudio;\n          }(_mediaelement.default);\n          exports.default = MediaElementWebAudio;\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/mediaelement.js\":\n        /*!*****************************!*\\\n          !*** ./src/mediaelement.js ***!\n          \\*****************************/\n        /***/\n        function srcMediaelementJs(module, exports, __webpack_require__) {\n          \"use strict\";\n\n          function _typeof(obj) {\n            \"@babel/helpers - typeof\";\n\n            if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n              _typeof = function _typeof(obj) {\n                return typeof obj;\n              };\n            } else {\n              _typeof = function _typeof(obj) {\n                return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n              };\n            }\n            return _typeof(obj);\n          }\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports.default = void 0;\n          var _webaudio = _interopRequireDefault(__webpack_require__( /*! ./webaudio */\"./src/webaudio.js\"));\n          var util = _interopRequireWildcard(__webpack_require__( /*! ./util */\"./src/util/index.js\"));\n          function _getRequireWildcardCache(nodeInterop) {\n            if (typeof WeakMap !== \"function\") return null;\n            var cacheBabelInterop = new WeakMap();\n            var cacheNodeInterop = new WeakMap();\n            return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n              return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n            })(nodeInterop);\n          }\n          function _interopRequireWildcard(obj, nodeInterop) {\n            if (!nodeInterop && obj && obj.__esModule) {\n              return obj;\n            }\n            if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n              return {\n                default: obj\n              };\n            }\n            var cache = _getRequireWildcardCache(nodeInterop);\n            if (cache && cache.has(obj)) {\n              return cache.get(obj);\n            }\n            var newObj = {};\n            var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n            for (var key in obj) {\n              if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n                var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n                if (desc && (desc.get || desc.set)) {\n                  Object.defineProperty(newObj, key, desc);\n                } else {\n                  newObj[key] = obj[key];\n                }\n              }\n            }\n            newObj.default = obj;\n            if (cache) {\n              cache.set(obj, newObj);\n            }\n            return newObj;\n          }\n          function _interopRequireDefault(obj) {\n            return obj && obj.__esModule ? obj : {\n              default: obj\n            };\n          }\n          function _classCallCheck(instance, Constructor) {\n            if (!(instance instanceof Constructor)) {\n              throw new TypeError(\"Cannot call a class as a function\");\n            }\n          }\n          function _defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, descriptor.key, descriptor);\n            }\n          }\n          function _createClass(Constructor, protoProps, staticProps) {\n            if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) _defineProperties(Constructor, staticProps);\n            return Constructor;\n          }\n          function _get(target, property, receiver) {\n            if (typeof Reflect !== \"undefined\" && Reflect.get) {\n              _get = Reflect.get;\n            } else {\n              _get = function _get(target, property, receiver) {\n                var base = _superPropBase(target, property);\n                if (!base) return;\n                var desc = Object.getOwnPropertyDescriptor(base, property);\n                if (desc.get) {\n                  return desc.get.call(receiver);\n                }\n                return desc.value;\n              };\n            }\n            return _get(target, property, receiver || target);\n          }\n          function _superPropBase(object, property) {\n            while (!Object.prototype.hasOwnProperty.call(object, property)) {\n              object = _getPrototypeOf(object);\n              if (object === null) break;\n            }\n            return object;\n          }\n          function _inherits(subClass, superClass) {\n            if (typeof superClass !== \"function\" && superClass !== null) {\n              throw new TypeError(\"Super expression must either be null or a function\");\n            }\n            subClass.prototype = Object.create(superClass && superClass.prototype, {\n              constructor: {\n                value: subClass,\n                writable: true,\n                configurable: true\n              }\n            });\n            if (superClass) _setPrototypeOf(subClass, superClass);\n          }\n          function _setPrototypeOf(o, p) {\n            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n              o.__proto__ = p;\n              return o;\n            };\n            return _setPrototypeOf(o, p);\n          }\n          function _createSuper(Derived) {\n            var hasNativeReflectConstruct = _isNativeReflectConstruct();\n            return function _createSuperInternal() {\n              var Super = _getPrototypeOf(Derived),\n                result;\n              if (hasNativeReflectConstruct) {\n                var NewTarget = _getPrototypeOf(this).constructor;\n                result = Reflect.construct(Super, arguments, NewTarget);\n              } else {\n                result = Super.apply(this, arguments);\n              }\n              return _possibleConstructorReturn(this, result);\n            };\n          }\n          function _possibleConstructorReturn(self, call) {\n            if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n              return call;\n            } else if (call !== void 0) {\n              throw new TypeError(\"Derived constructors may only return object or undefined\");\n            }\n            return _assertThisInitialized(self);\n          }\n          function _assertThisInitialized(self) {\n            if (self === void 0) {\n              throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            }\n            return self;\n          }\n          function _isNativeReflectConstruct() {\n            if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n            if (Reflect.construct.sham) return false;\n            if (typeof Proxy === \"function\") return true;\n            try {\n              Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n              return true;\n            } catch (e) {\n              return false;\n            }\n          }\n          function _getPrototypeOf(o) {\n            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n              return o.__proto__ || Object.getPrototypeOf(o);\n            };\n            return _getPrototypeOf(o);\n          }\n\n          /**\n           * MediaElement backend\n           */\n          var MediaElement = /*#__PURE__*/function (_WebAudio) {\n            _inherits(MediaElement, _WebAudio);\n            var _super = _createSuper(MediaElement);\n\n            /**\n             * Construct the backend\n             *\n             * @param {WavesurferParams} params Wavesurfer parameters\n             */\n            function MediaElement(params) {\n              var _this;\n              _classCallCheck(this, MediaElement);\n              _this = _super.call(this, params);\n              /** @private */\n\n              _this.params = params;\n              /**\n               * Initially a dummy media element to catch errors. Once `_load` is\n               * called, this will contain the actual `HTMLMediaElement`.\n               * @private\n               */\n\n              _this.media = {\n                currentTime: 0,\n                duration: 0,\n                paused: true,\n                playbackRate: 1,\n                play: function play() {},\n                pause: function pause() {},\n                volume: 0\n              };\n              /** @private */\n\n              _this.mediaType = params.mediaType.toLowerCase();\n              /** @private */\n\n              _this.elementPosition = params.elementPosition;\n              /** @private */\n\n              _this.peaks = null;\n              /** @private */\n\n              _this.playbackRate = 1;\n              /** @private */\n\n              _this.volume = 1;\n              /** @private */\n\n              _this.isMuted = false;\n              /** @private */\n\n              _this.buffer = null;\n              /** @private */\n\n              _this.onPlayEnd = null;\n              /** @private */\n\n              _this.mediaListeners = {};\n              return _this;\n            }\n            /**\n             * Initialise the backend, called in `wavesurfer.createBackend()`\n             */\n\n            _createClass(MediaElement, [{\n              key: \"init\",\n              value: function init() {\n                this.setPlaybackRate(this.params.audioRate);\n                this.createTimer();\n              }\n              /**\n               * Attach event listeners to media element.\n               */\n            }, {\n              key: \"_setupMediaListeners\",\n              value: function _setupMediaListeners() {\n                var _this2 = this;\n                this.mediaListeners.error = function () {\n                  _this2.fireEvent('error', 'Error loading media element');\n                };\n                this.mediaListeners.canplay = function () {\n                  _this2.fireEvent('canplay');\n                };\n                this.mediaListeners.ended = function () {\n                  _this2.fireEvent('finish');\n                }; // listen to and relay play, pause and seeked events to enable\n                // playback control from the external media element\n\n                this.mediaListeners.play = function () {\n                  _this2.fireEvent('play');\n                };\n                this.mediaListeners.pause = function () {\n                  _this2.fireEvent('pause');\n                };\n                this.mediaListeners.seeked = function (event) {\n                  _this2.fireEvent('seek');\n                };\n                this.mediaListeners.volumechange = function (event) {\n                  _this2.isMuted = _this2.media.muted;\n                  if (_this2.isMuted) {\n                    _this2.volume = 0;\n                  } else {\n                    _this2.volume = _this2.media.volume;\n                  }\n                  _this2.fireEvent('volume');\n                }; // reset event listeners\n\n                Object.keys(this.mediaListeners).forEach(function (id) {\n                  _this2.media.removeEventListener(id, _this2.mediaListeners[id]);\n                  _this2.media.addEventListener(id, _this2.mediaListeners[id]);\n                });\n              }\n              /**\n               * Create a timer to provide a more precise `audioprocess` event.\n               */\n            }, {\n              key: \"createTimer\",\n              value: function createTimer() {\n                var _this3 = this;\n                var onAudioProcess = function onAudioProcess() {\n                  if (_this3.isPaused()) {\n                    return;\n                  }\n                  _this3.fireEvent('audioprocess', _this3.getCurrentTime()); // Call again in the next frame\n\n                  util.frame(onAudioProcess)();\n                };\n                this.on('play', onAudioProcess); // Update the progress one more time to prevent it from being stuck in\n                // case of lower framerates\n\n                this.on('pause', function () {\n                  _this3.fireEvent('audioprocess', _this3.getCurrentTime());\n                });\n              }\n              /**\n               * Create media element with url as its source,\n               * and append to container element.\n               *\n               * @param {string} url Path to media file\n               * @param {HTMLElement} container HTML element\n               * @param {number[]|Number.<Array[]>} peaks Array of peak data\n               * @param {string} preload HTML 5 preload attribute value\n               * @throws Will throw an error if the `url` argument is not a valid media\n               * element.\n               */\n            }, {\n              key: \"load\",\n              value: function load(url, container, peaks, preload) {\n                var media = document.createElement(this.mediaType);\n                media.controls = this.params.mediaControls;\n                media.autoplay = this.params.autoplay || false;\n                media.preload = preload == null ? 'auto' : preload;\n                media.src = url;\n                media.style.width = '100%';\n                var prevMedia = container.querySelector(this.mediaType);\n                if (prevMedia) {\n                  container.removeChild(prevMedia);\n                }\n                container.appendChild(media);\n                this._load(media, peaks, preload);\n              }\n              /**\n               * Load existing media element.\n               *\n               * @param {HTMLMediaElement} elt HTML5 Audio or Video element\n               * @param {number[]|Number.<Array[]>} peaks Array of peak data\n               */\n            }, {\n              key: \"loadElt\",\n              value: function loadElt(elt, peaks) {\n                elt.controls = this.params.mediaControls;\n                elt.autoplay = this.params.autoplay || false;\n                this._load(elt, peaks, elt.preload);\n              }\n              /**\n               * Method called by both `load` (from url)\n               * and `loadElt` (existing media element) methods.\n               *\n               * @param {HTMLMediaElement} media HTML5 Audio or Video element\n               * @param {number[]|Number.<Array[]>} peaks Array of peak data\n               * @param {string} preload HTML 5 preload attribute value\n               * @throws Will throw an error if the `media` argument is not a valid media\n               * element.\n               * @private\n               */\n            }, {\n              key: \"_load\",\n              value: function _load(media, peaks, preload) {\n                // verify media element is valid\n                if (!(media instanceof HTMLMediaElement) || typeof media.addEventListener === 'undefined') {\n                  throw new Error('media parameter is not a valid media element');\n                } // load must be called manually on iOS, otherwise peaks won't draw\n                // until a user interaction triggers load --> 'ready' event\n                //\n                // note that we avoid calling media.load here when given peaks and preload == 'none'\n                // as this almost always triggers some browser fetch of the media.\n\n                if (typeof media.load == 'function' && !(peaks && preload == 'none')) {\n                  // Resets the media element and restarts the media resource. Any\n                  // pending events are discarded. How much media data is fetched is\n                  // still affected by the preload attribute.\n                  media.load();\n                }\n                this.media = media;\n                this._setupMediaListeners();\n                this.peaks = peaks;\n                this.onPlayEnd = null;\n                this.buffer = null;\n                this.isMuted = media.muted;\n                this.setPlaybackRate(this.playbackRate);\n                this.setVolume(this.volume);\n              }\n              /**\n               * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n               *\n               * @return {boolean} Media paused or not\n               */\n            }, {\n              key: \"isPaused\",\n              value: function isPaused() {\n                return !this.media || this.media.paused;\n              }\n              /**\n               * Used by `wavesurfer.getDuration()`\n               *\n               * @return {number} Duration\n               */\n            }, {\n              key: \"getDuration\",\n              value: function getDuration() {\n                if (this.explicitDuration) {\n                  return this.explicitDuration;\n                }\n                var duration = (this.buffer || this.media).duration;\n                if (duration >= Infinity) {\n                  // streaming audio\n                  duration = this.media.seekable.end(0);\n                }\n                return duration;\n              }\n              /**\n               * Returns the current time in seconds relative to the audio-clip's\n               * duration.\n               *\n               * @return {number} Current time\n               */\n            }, {\n              key: \"getCurrentTime\",\n              value: function getCurrentTime() {\n                return this.media && this.media.currentTime;\n              }\n              /**\n               * Get the position from 0 to 1\n               *\n               * @return {number} Current position\n               */\n            }, {\n              key: \"getPlayedPercents\",\n              value: function getPlayedPercents() {\n                return this.getCurrentTime() / this.getDuration() || 0;\n              }\n              /**\n               * Get the audio source playback rate.\n               *\n               * @return {number} Playback rate\n               */\n            }, {\n              key: \"getPlaybackRate\",\n              value: function getPlaybackRate() {\n                return this.playbackRate || this.media.playbackRate;\n              }\n              /**\n               * Set the audio source playback rate.\n               *\n               * @param {number} value Playback rate\n               */\n            }, {\n              key: \"setPlaybackRate\",\n              value: function setPlaybackRate(value) {\n                this.playbackRate = value || 1;\n                this.media.playbackRate = this.playbackRate;\n              }\n              /**\n               * Used by `wavesurfer.seekTo()`\n               *\n               * @param {number} start Position to start at in seconds\n               */\n            }, {\n              key: \"seekTo\",\n              value: function seekTo(start) {\n                if (start != null) {\n                  this.media.currentTime = start;\n                }\n                this.clearPlayEnd();\n              }\n              /**\n               * Plays the loaded audio region.\n               *\n               * @param {number} start Start offset in seconds, relative to the beginning\n               * of a clip.\n               * @param {number} end When to stop, relative to the beginning of a clip.\n               * @emits MediaElement#play\n               * @return {Promise} Result\n               */\n            }, {\n              key: \"play\",\n              value: function play(start, end) {\n                this.seekTo(start);\n                var promise = this.media.play();\n                end && this.setPlayEnd(end);\n                return promise;\n              }\n              /**\n               * Pauses the loaded audio.\n               *\n               * @emits MediaElement#pause\n               * @return {Promise} Result\n               */\n            }, {\n              key: \"pause\",\n              value: function pause() {\n                var promise;\n                if (this.media) {\n                  promise = this.media.pause();\n                }\n                this.clearPlayEnd();\n                return promise;\n              }\n              /**\n               * Set the play end\n               *\n               * @param {number} end Where to end\n               */\n            }, {\n              key: \"setPlayEnd\",\n              value: function setPlayEnd(end) {\n                var _this4 = this;\n                this.clearPlayEnd();\n                this._onPlayEnd = function (time) {\n                  if (time >= end) {\n                    _this4.pause();\n                    _this4.seekTo(end);\n                  }\n                };\n                this.on('audioprocess', this._onPlayEnd);\n              }\n              /** @private */\n            }, {\n              key: \"clearPlayEnd\",\n              value: function clearPlayEnd() {\n                if (this._onPlayEnd) {\n                  this.un('audioprocess', this._onPlayEnd);\n                  this._onPlayEnd = null;\n                }\n              }\n              /**\n               * Compute the max and min value of the waveform when broken into\n               * <length> subranges.\n               *\n               * @param {number} length How many subranges to break the waveform into.\n               * @param {number} first First sample in the required range.\n               * @param {number} last Last sample in the required range.\n               * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of\n               * arrays of peaks consisting of (max, min) values for each subrange.\n               */\n            }, {\n              key: \"getPeaks\",\n              value: function getPeaks(length, first, last) {\n                if (this.buffer) {\n                  return _get(_getPrototypeOf(MediaElement.prototype), \"getPeaks\", this).call(this, length, first, last);\n                }\n                return this.peaks || [];\n              }\n              /**\n               * Set the sink id for the media player\n               *\n               * @param {string} deviceId String value representing audio device id.\n               * @returns {Promise} A Promise that resolves to `undefined` when there\n               * are no errors.\n               */\n            }, {\n              key: \"setSinkId\",\n              value: function setSinkId(deviceId) {\n                if (deviceId) {\n                  if (!this.media.setSinkId) {\n                    return Promise.reject(new Error('setSinkId is not supported in your browser'));\n                  }\n                  return this.media.setSinkId(deviceId);\n                }\n                return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\n              }\n              /**\n               * Get the current volume\n               *\n               * @return {number} value A floating point value between 0 and 1.\n               */\n            }, {\n              key: \"getVolume\",\n              value: function getVolume() {\n                return this.volume;\n              }\n              /**\n               * Set the audio volume\n               *\n               * @param {number} value A floating point value between 0 and 1.\n               */\n            }, {\n              key: \"setVolume\",\n              value: function setVolume(value) {\n                this.volume = value; // no need to change when it's already at that volume\n\n                if (this.media.volume !== this.volume) {\n                  this.media.volume = this.volume;\n                }\n              }\n              /**\n               * Enable or disable muted audio\n               *\n               * @since 4.0.0\n               * @param {boolean} muted Specify `true` to mute audio.\n               */\n            }, {\n              key: \"setMute\",\n              value: function setMute(muted) {\n                // This causes a volume change to be emitted too through the\n                // volumechange event listener.\n                this.isMuted = this.media.muted = muted;\n              }\n              /**\n               * This is called when wavesurfer is destroyed\n               *\n               */\n            }, {\n              key: \"destroy\",\n              value: function destroy() {\n                var _this5 = this;\n                this.pause();\n                this.unAll();\n                this.destroyed = true; // cleanup media event listeners\n\n                Object.keys(this.mediaListeners).forEach(function (id) {\n                  if (_this5.media) {\n                    _this5.media.removeEventListener(id, _this5.mediaListeners[id]);\n                  }\n                });\n                if (this.params.removeMediaElementOnDestroy && this.media && this.media.parentNode) {\n                  this.media.parentNode.removeChild(this.media);\n                }\n                this.media = null;\n              }\n            }]);\n            return MediaElement;\n          }(_webaudio.default);\n          exports.default = MediaElement;\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/peakcache.js\":\n        /*!**************************!*\\\n          !*** ./src/peakcache.js ***!\n          \\**************************/\n        /***/\n        function srcPeakcacheJs(module, exports) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports.default = void 0;\n          function _classCallCheck(instance, Constructor) {\n            if (!(instance instanceof Constructor)) {\n              throw new TypeError(\"Cannot call a class as a function\");\n            }\n          }\n          function _defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, descriptor.key, descriptor);\n            }\n          }\n          function _createClass(Constructor, protoProps, staticProps) {\n            if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) _defineProperties(Constructor, staticProps);\n            return Constructor;\n          }\n\n          /**\n           * Caches the decoded peaks data to improve rendering speed for large audio\n           *\n           * Is used if the option parameter `partialRender` is set to `true`\n           */\n          var PeakCache = /*#__PURE__*/function () {\n            /**\n             * Instantiate cache\n             */\n            function PeakCache() {\n              _classCallCheck(this, PeakCache);\n              this.clearPeakCache();\n            }\n            /**\n             * Empty the cache\n             */\n\n            _createClass(PeakCache, [{\n              key: \"clearPeakCache\",\n              value: function clearPeakCache() {\n                /**\n                 * Flat array with entries that are always in pairs to mark the\n                 * beginning and end of each subrange.  This is a convenience so we can\n                 * iterate over the pairs for easy set difference operations.\n                 * @private\n                 */\n                this.peakCacheRanges = [];\n                /**\n                 * Length of the entire cachable region, used for resetting the cache\n                 * when this changes (zoom events, for instance).\n                 * @private\n                 */\n\n                this.peakCacheLength = -1;\n              }\n              /**\n               * Add a range of peaks to the cache\n               *\n               * @param {number} length The length of the range\n               * @param {number} start The x offset of the start of the range\n               * @param {number} end The x offset of the end of the range\n               * @return {Number.<Array[]>} Array with arrays of numbers\n               */\n            }, {\n              key: \"addRangeToPeakCache\",\n              value: function addRangeToPeakCache(length, start, end) {\n                if (length != this.peakCacheLength) {\n                  this.clearPeakCache();\n                  this.peakCacheLength = length;\n                } // Return ranges that weren't in the cache before the call.\n\n                var uncachedRanges = [];\n                var i = 0; // Skip ranges before the current start.\n\n                while (i < this.peakCacheRanges.length && this.peakCacheRanges[i] < start) {\n                  i++;\n                } // If |i| is even, |start| falls after an existing range.  Otherwise,\n                // |start| falls between an existing range, and the uncached region\n                // starts when we encounter the next node in |peakCacheRanges| or\n                // |end|, whichever comes first.\n\n                if (i % 2 == 0) {\n                  uncachedRanges.push(start);\n                }\n                while (i < this.peakCacheRanges.length && this.peakCacheRanges[i] <= end) {\n                  uncachedRanges.push(this.peakCacheRanges[i]);\n                  i++;\n                } // If |i| is even, |end| is after all existing ranges.\n\n                if (i % 2 == 0) {\n                  uncachedRanges.push(end);\n                } // Filter out the 0-length ranges.\n\n                uncachedRanges = uncachedRanges.filter(function (item, pos, arr) {\n                  if (pos == 0) {\n                    return item != arr[pos + 1];\n                  } else if (pos == arr.length - 1) {\n                    return item != arr[pos - 1];\n                  }\n                  return item != arr[pos - 1] && item != arr[pos + 1];\n                }); // Merge the two ranges together, uncachedRanges will either contain\n                // wholly new points, or duplicates of points in peakCacheRanges.  If\n                // duplicates are detected, remove both and extend the range.\n\n                this.peakCacheRanges = this.peakCacheRanges.concat(uncachedRanges);\n                this.peakCacheRanges = this.peakCacheRanges.sort(function (a, b) {\n                  return a - b;\n                }).filter(function (item, pos, arr) {\n                  if (pos == 0) {\n                    return item != arr[pos + 1];\n                  } else if (pos == arr.length - 1) {\n                    return item != arr[pos - 1];\n                  }\n                  return item != arr[pos - 1] && item != arr[pos + 1];\n                }); // Push the uncached ranges into an array of arrays for ease of\n                // iteration in the functions that call this.\n\n                var uncachedRangePairs = [];\n                for (i = 0; i < uncachedRanges.length; i += 2) {\n                  uncachedRangePairs.push([uncachedRanges[i], uncachedRanges[i + 1]]);\n                }\n                return uncachedRangePairs;\n              }\n              /**\n               * For testing\n               *\n               * @return {Number.<Array[]>} Array with arrays of numbers\n               */\n            }, {\n              key: \"getCacheRanges\",\n              value: function getCacheRanges() {\n                var peakCacheRangePairs = [];\n                var i;\n                for (i = 0; i < this.peakCacheRanges.length; i += 2) {\n                  peakCacheRangePairs.push([this.peakCacheRanges[i], this.peakCacheRanges[i + 1]]);\n                }\n                return peakCacheRangePairs;\n              }\n            }]);\n            return PeakCache;\n          }();\n          exports.default = PeakCache;\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/util/absMax.js\":\n        /*!****************************!*\\\n          !*** ./src/util/absMax.js ***!\n          \\****************************/\n        /***/\n        function srcUtilAbsMaxJs(module, exports, __webpack_require__) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports.default = absMax;\n          var _max = _interopRequireDefault(__webpack_require__( /*! ./max */\"./src/util/max.js\"));\n          var _min = _interopRequireDefault(__webpack_require__( /*! ./min */\"./src/util/min.js\"));\n          function _interopRequireDefault(obj) {\n            return obj && obj.__esModule ? obj : {\n              default: obj\n            };\n          }\n\n          /**\r\n           * Get the largest absolute value in an array\r\n           *\r\n           * @param   {Array} values Array of numbers\r\n           * @returns {Number} Largest number found\r\n           * @example console.log(max([-3, 2, 1]), max([-3, 2, 4])); // logs 3 4\r\n           * @since 4.3.0\r\n           */\n          function absMax(values) {\n            var max = (0, _max.default)(values);\n            var min = (0, _min.default)(values);\n            return -min > max ? -min : max;\n          }\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/util/clamp.js\":\n        /*!***************************!*\\\n          !*** ./src/util/clamp.js ***!\n          \\***************************/\n        /***/\n        function srcUtilClampJs(module, exports) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports.default = clamp;\n\n          /**\n           * Returns a number limited to the given range.\n           *\n           * @param {number} val The number to be limited to a range\n           * @param {number} min The lower boundary of the limit range\n           * @param {number} max The upper boundary of the limit range\n           * @returns {number} A number in the range [min, max]\n           */\n          function clamp(val, min, max) {\n            return Math.min(Math.max(min, val), max);\n          }\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/util/fetch.js\":\n        /*!***************************!*\\\n          !*** ./src/util/fetch.js ***!\n          \\***************************/\n        /***/\n        function srcUtilFetchJs(module, exports, __webpack_require__) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports.default = fetchFile;\n          var _observer = _interopRequireDefault(__webpack_require__( /*! ./observer */\"./src/util/observer.js\"));\n          function _interopRequireDefault(obj) {\n            return obj && obj.__esModule ? obj : {\n              default: obj\n            };\n          }\n          function _classCallCheck(instance, Constructor) {\n            if (!(instance instanceof Constructor)) {\n              throw new TypeError(\"Cannot call a class as a function\");\n            }\n          }\n          function _defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, descriptor.key, descriptor);\n            }\n          }\n          function _createClass(Constructor, protoProps, staticProps) {\n            if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) _defineProperties(Constructor, staticProps);\n            return Constructor;\n          }\n          var ProgressHandler = /*#__PURE__*/function () {\n            /**\n             * Instantiate ProgressHandler\n             *\n             * @param {Observer} instance The `fetchFile` observer instance.\n             * @param {Number} contentLength Content length.\n             * @param {Response} response Response object.\n             */\n            function ProgressHandler(instance, contentLength, response) {\n              _classCallCheck(this, ProgressHandler);\n              this.instance = instance;\n              this.instance._reader = response.body.getReader();\n              this.total = parseInt(contentLength, 10);\n              this.loaded = 0;\n            }\n            /**\n             * A method that is called once, immediately after the `ReadableStream``\n             * is constructed.\n             *\n             * @param {ReadableStreamDefaultController} controller Controller instance\n             *     used to control the stream.\n             */\n\n            _createClass(ProgressHandler, [{\n              key: \"start\",\n              value: function start(controller) {\n                var _this = this;\n                var read = function read() {\n                  // instance._reader.read() returns a promise that resolves\n                  // when a value has been received\n                  _this.instance._reader.read().then(function (_ref) {\n                    var done = _ref.done,\n                      value = _ref.value;\n\n                    // result objects contain two properties:\n                    // done  - true if the stream has already given you all its data.\n                    // value - some data. Always undefined when done is true.\n                    if (done) {\n                      // ensure onProgress called when content-length=0\n                      if (_this.total === 0) {\n                        _this.instance.onProgress.call(_this.instance, {\n                          loaded: _this.loaded,\n                          total: _this.total,\n                          lengthComputable: false\n                        });\n                      } // no more data needs to be consumed, close the stream\n\n                      controller.close();\n                      return;\n                    }\n                    _this.loaded += value.byteLength;\n                    _this.instance.onProgress.call(_this.instance, {\n                      loaded: _this.loaded,\n                      total: _this.total,\n                      lengthComputable: !(_this.total === 0)\n                    }); // enqueue the next data chunk into our target stream\n\n                    controller.enqueue(value);\n                    read();\n                  }).catch(function (error) {\n                    controller.error(error);\n                  });\n                };\n                read();\n              }\n            }]);\n            return ProgressHandler;\n          }();\n          /**\n           * Load a file using `fetch`.\n           *\n           * @param {object} options Request options to use. See example below.\n           * @returns {Observer} Observer instance\n           * @example\n           * // default options\n           * let options = {\n           *     url: undefined,\n           *     method: 'GET',\n           *     mode: 'cors',\n           *     credentials: 'same-origin',\n           *     cache: 'default',\n           *     responseType: 'json',\n           *     requestHeaders: [],\n           *     redirect: 'follow',\n           *     referrer: 'client'\n           * };\n           *\n           * // override some options\n           * options.url = '../media/demo.wav';\n          \n           * // available types: 'arraybuffer', 'blob', 'json' or 'text'\n           * options.responseType = 'arraybuffer';\n           *\n           * // make fetch call\n           * let request = util.fetchFile(options);\n           *\n           * // listen for events\n           * request.on('progress', e => {\n           *     console.log('progress', e);\n           * });\n           *\n           * request.on('success', data => {\n           *     console.log('success!', data);\n           * });\n           *\n           * request.on('error', e => {\n           *     console.warn('fetchFile error: ', e);\n           * });\n           */\n\n          function fetchFile(options) {\n            if (!options) {\n              throw new Error('fetch options missing');\n            } else if (!options.url) {\n              throw new Error('fetch url missing');\n            }\n            var instance = new _observer.default();\n            var fetchHeaders = new Headers();\n            var fetchRequest = new Request(options.url); // add ability to abort\n\n            instance.controller = new AbortController(); // check if headers have to be added\n\n            if (options && options.requestHeaders) {\n              // add custom request headers\n              options.requestHeaders.forEach(function (header) {\n                fetchHeaders.append(header.key, header.value);\n              });\n            } // parse fetch options\n\n            var responseType = options.responseType || 'json';\n            var fetchOptions = {\n              method: options.method || 'GET',\n              headers: fetchHeaders,\n              mode: options.mode || 'cors',\n              credentials: options.credentials || 'same-origin',\n              cache: options.cache || 'default',\n              redirect: options.redirect || 'follow',\n              referrer: options.referrer || 'client',\n              signal: instance.controller.signal\n            };\n            fetch(fetchRequest, fetchOptions).then(function (response) {\n              // store response reference\n              instance.response = response;\n              var progressAvailable = true;\n              if (!response.body) {\n                // ReadableStream is not yet supported in this browser\n                // see https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream\n                progressAvailable = false;\n              } // Server must send CORS header \"Access-Control-Expose-Headers: content-length\"\n\n              var contentLength = response.headers.get('content-length');\n              if (contentLength === null) {\n                // Content-Length server response header missing.\n                // Don't evaluate download progress if we can't compare against a total size\n                // see https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Access-Control-Expose-Headers\n                progressAvailable = false;\n              }\n              if (!progressAvailable) {\n                // not able to check download progress so skip it\n                return response;\n              } // fire progress event when during load\n\n              instance.onProgress = function (e) {\n                instance.fireEvent('progress', e);\n              };\n              return new Response(new ReadableStream(new ProgressHandler(instance, contentLength, response)), fetchOptions);\n            }).then(function (response) {\n              var errMsg;\n              if (response.ok) {\n                switch (responseType) {\n                  case 'arraybuffer':\n                    return response.arrayBuffer();\n                  case 'json':\n                    return response.json();\n                  case 'blob':\n                    return response.blob();\n                  case 'text':\n                    return response.text();\n                  default:\n                    errMsg = 'Unknown responseType: ' + responseType;\n                    break;\n                }\n              }\n              if (!errMsg) {\n                errMsg = 'HTTP error status: ' + response.status;\n              }\n              throw new Error(errMsg);\n            }).then(function (response) {\n              instance.fireEvent('success', response);\n            }).catch(function (error) {\n              instance.fireEvent('error', error);\n            }); // return the fetch request\n\n            instance.fetchRequest = fetchRequest;\n            return instance;\n          }\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/util/frame.js\":\n        /*!***************************!*\\\n          !*** ./src/util/frame.js ***!\n          \\***************************/\n        /***/\n        function srcUtilFrameJs(module, exports, __webpack_require__) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports.default = frame;\n          var _requestAnimationFrame = _interopRequireDefault(__webpack_require__( /*! ./request-animation-frame */\"./src/util/request-animation-frame.js\"));\n          function _interopRequireDefault(obj) {\n            return obj && obj.__esModule ? obj : {\n              default: obj\n            };\n          }\n\n          /**\n           * Create a function which will be called at the next requestAnimationFrame\n           * cycle\n           *\n           * @param {function} func The function to call\n           *\n           * @return {func} The function wrapped within a requestAnimationFrame\n           */\n          function frame(func) {\n            return function () {\n              for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n              }\n              return (0, _requestAnimationFrame.default)(function () {\n                return func.apply(void 0, args);\n              });\n            };\n          }\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/util/get-id.js\":\n        /*!****************************!*\\\n          !*** ./src/util/get-id.js ***!\n          \\****************************/\n        /***/\n        function srcUtilGetIdJs(module, exports) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports.default = getId;\n\n          /**\n           * Get a random prefixed ID\n           *\n           * @param {String} prefix Prefix to use. Default is `'wavesurfer_'`.\n           * @returns {String} Random prefixed ID\n           * @example\n           * console.log(getId()); // logs 'wavesurfer_b5pors4ru6g'\n           *\n           * let prefix = 'foo-';\n           * console.log(getId(prefix)); // logs 'foo-b5pors4ru6g'\n           */\n          function getId(prefix) {\n            if (prefix === undefined) {\n              prefix = 'wavesurfer_';\n            }\n            return prefix + Math.random().toString(32).substring(2);\n          }\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/util/index.js\":\n        /*!***************************!*\\\n          !*** ./src/util/index.js ***!\n          \\***************************/\n        /***/\n        function srcUtilIndexJs(__unused_webpack_module, exports, __webpack_require__) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          Object.defineProperty(exports, \"getId\", {\n            enumerable: true,\n            get: function get() {\n              return _getId.default;\n            }\n          });\n          Object.defineProperty(exports, \"max\", {\n            enumerable: true,\n            get: function get() {\n              return _max.default;\n            }\n          });\n          Object.defineProperty(exports, \"min\", {\n            enumerable: true,\n            get: function get() {\n              return _min.default;\n            }\n          });\n          Object.defineProperty(exports, \"absMax\", {\n            enumerable: true,\n            get: function get() {\n              return _absMax.default;\n            }\n          });\n          Object.defineProperty(exports, \"Observer\", {\n            enumerable: true,\n            get: function get() {\n              return _observer.default;\n            }\n          });\n          Object.defineProperty(exports, \"style\", {\n            enumerable: true,\n            get: function get() {\n              return _style.default;\n            }\n          });\n          Object.defineProperty(exports, \"requestAnimationFrame\", {\n            enumerable: true,\n            get: function get() {\n              return _requestAnimationFrame.default;\n            }\n          });\n          Object.defineProperty(exports, \"frame\", {\n            enumerable: true,\n            get: function get() {\n              return _frame.default;\n            }\n          });\n          Object.defineProperty(exports, \"debounce\", {\n            enumerable: true,\n            get: function get() {\n              return _debounce.default;\n            }\n          });\n          Object.defineProperty(exports, \"preventClick\", {\n            enumerable: true,\n            get: function get() {\n              return _preventClick.default;\n            }\n          });\n          Object.defineProperty(exports, \"fetchFile\", {\n            enumerable: true,\n            get: function get() {\n              return _fetch.default;\n            }\n          });\n          Object.defineProperty(exports, \"clamp\", {\n            enumerable: true,\n            get: function get() {\n              return _clamp.default;\n            }\n          });\n          Object.defineProperty(exports, \"withOrientation\", {\n            enumerable: true,\n            get: function get() {\n              return _orientation.default;\n            }\n          });\n          Object.defineProperty(exports, \"ignoreSilenceMode\", {\n            enumerable: true,\n            get: function get() {\n              return _silenceMode.default;\n            }\n          });\n          var _getId = _interopRequireDefault(__webpack_require__( /*! ./get-id */\"./src/util/get-id.js\"));\n          var _max = _interopRequireDefault(__webpack_require__( /*! ./max */\"./src/util/max.js\"));\n          var _min = _interopRequireDefault(__webpack_require__( /*! ./min */\"./src/util/min.js\"));\n          var _absMax = _interopRequireDefault(__webpack_require__( /*! ./absMax */\"./src/util/absMax.js\"));\n          var _observer = _interopRequireDefault(__webpack_require__( /*! ./observer */\"./src/util/observer.js\"));\n          var _style = _interopRequireDefault(__webpack_require__( /*! ./style */\"./src/util/style.js\"));\n          var _requestAnimationFrame = _interopRequireDefault(__webpack_require__( /*! ./request-animation-frame */\"./src/util/request-animation-frame.js\"));\n          var _frame = _interopRequireDefault(__webpack_require__( /*! ./frame */\"./src/util/frame.js\"));\n          var _debounce = _interopRequireDefault(__webpack_require__( /*! debounce */\"./node_modules/debounce/index.js\"));\n          var _preventClick = _interopRequireDefault(__webpack_require__( /*! ./prevent-click */\"./src/util/prevent-click.js\"));\n          var _fetch = _interopRequireDefault(__webpack_require__( /*! ./fetch */\"./src/util/fetch.js\"));\n          var _clamp = _interopRequireDefault(__webpack_require__( /*! ./clamp */\"./src/util/clamp.js\"));\n          var _orientation = _interopRequireDefault(__webpack_require__( /*! ./orientation */\"./src/util/orientation.js\"));\n          var _silenceMode = _interopRequireDefault(__webpack_require__( /*! ./silence-mode */\"./src/util/silence-mode.js\"));\n          function _interopRequireDefault(obj) {\n            return obj && obj.__esModule ? obj : {\n              default: obj\n            };\n          }\n\n          /***/\n        },\n\n        /***/\"./src/util/max.js\":\n        /*!*************************!*\\\n          !*** ./src/util/max.js ***!\n          \\*************************/\n        /***/\n        function srcUtilMaxJs(module, exports) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports.default = max;\n\n          /**\n           * Get the largest value\n           *\n           * @param   {Array} values Array of numbers\n           * @returns {Number} Largest number found\n           * @example console.log(max([1, 2, 3])); // logs 3\n           */\n          function max(values) {\n            var largest = -Infinity;\n            Object.keys(values).forEach(function (i) {\n              if (values[i] > largest) {\n                largest = values[i];\n              }\n            });\n            return largest;\n          }\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/util/min.js\":\n        /*!*************************!*\\\n          !*** ./src/util/min.js ***!\n          \\*************************/\n        /***/\n        function srcUtilMinJs(module, exports) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports.default = min;\n\n          /**\n           * Get the smallest value\n           *\n           * @param   {Array} values Array of numbers\n           * @returns {Number} Smallest number found\n           * @example console.log(min([1, 2, 3])); // logs 1\n           */\n          function min(values) {\n            var smallest = Number(Infinity);\n            Object.keys(values).forEach(function (i) {\n              if (values[i] < smallest) {\n                smallest = values[i];\n              }\n            });\n            return smallest;\n          }\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/util/observer.js\":\n        /*!******************************!*\\\n          !*** ./src/util/observer.js ***!\n          \\******************************/\n        /***/\n        function srcUtilObserverJs(module, exports) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports.default = void 0;\n          function _classCallCheck(instance, Constructor) {\n            if (!(instance instanceof Constructor)) {\n              throw new TypeError(\"Cannot call a class as a function\");\n            }\n          }\n          function _defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, descriptor.key, descriptor);\n            }\n          }\n          function _createClass(Constructor, protoProps, staticProps) {\n            if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) _defineProperties(Constructor, staticProps);\n            return Constructor;\n          }\n\n          /**\n           * @typedef {Object} ListenerDescriptor\n           * @property {string} name The name of the event\n           * @property {function} callback The callback\n           * @property {function} un The function to call to remove the listener\n           */\n\n          /**\n           * Observer class\n           */\n          var Observer = /*#__PURE__*/function () {\n            /**\n             * Instantiate Observer\n             */\n            function Observer() {\n              _classCallCheck(this, Observer);\n\n              /**\n               * @private\n               * @todo Initialise the handlers here already and remove the conditional\n               * assignment in `on()`\n               */\n              this._disabledEventEmissions = [];\n              this.handlers = null;\n            }\n            /**\n             * Attach a handler function for an event.\n             *\n             * @param {string} event Name of the event to listen to\n             * @param {function} fn The callback to trigger when the event is fired\n             * @return {ListenerDescriptor} The event descriptor\n             */\n\n            _createClass(Observer, [{\n              key: \"on\",\n              value: function on(event, fn) {\n                var _this = this;\n                if (!this.handlers) {\n                  this.handlers = {};\n                }\n                var handlers = this.handlers[event];\n                if (!handlers) {\n                  handlers = this.handlers[event] = [];\n                }\n                handlers.push(fn); // Return an event descriptor\n\n                return {\n                  name: event,\n                  callback: fn,\n                  un: function un(e, fn) {\n                    return _this.un(e, fn);\n                  }\n                };\n              }\n              /**\n               * Remove an event handler.\n               *\n               * @param {string} event Name of the event the listener that should be\n               * removed listens to\n               * @param {function} fn The callback that should be removed\n               */\n            }, {\n              key: \"un\",\n              value: function un(event, fn) {\n                if (!this.handlers) {\n                  return;\n                }\n                var handlers = this.handlers[event];\n                var i;\n                if (handlers) {\n                  if (fn) {\n                    for (i = handlers.length - 1; i >= 0; i--) {\n                      if (handlers[i] == fn) {\n                        handlers.splice(i, 1);\n                      }\n                    }\n                  } else {\n                    handlers.length = 0;\n                  }\n                }\n              }\n              /**\n               * Remove all event handlers.\n               */\n            }, {\n              key: \"unAll\",\n              value: function unAll() {\n                this.handlers = null;\n              }\n              /**\n               * Attach a handler to an event. The handler is executed at most once per\n               * event type.\n               *\n               * @param {string} event The event to listen to\n               * @param {function} handler The callback that is only to be called once\n               * @return {ListenerDescriptor} The event descriptor\n               */\n            }, {\n              key: \"once\",\n              value: function once(event, handler) {\n                var _this2 = this;\n                var fn = function fn() {\n                  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n                    args[_key] = arguments[_key];\n                  }\n\n                  /*  eslint-disable no-invalid-this */\n                  handler.apply(_this2, args);\n                  /*  eslint-enable no-invalid-this */\n\n                  setTimeout(function () {\n                    _this2.un(event, fn);\n                  }, 0);\n                };\n                return this.on(event, fn);\n              }\n              /**\n               * Disable firing a list of events by name. When specified, event handlers for any event type\n               * passed in here will not be called.\n               *\n               * @since 4.0.0\n               * @param {string[]} eventNames an array of event names to disable emissions for\n               * @example\n               * // disable seek and interaction events\n               * wavesurfer.setDisabledEventEmissions(['seek', 'interaction']);\n               */\n            }, {\n              key: \"setDisabledEventEmissions\",\n              value: function setDisabledEventEmissions(eventNames) {\n                this._disabledEventEmissions = eventNames;\n              }\n              /**\n               * plugins borrow part of this class without calling the constructor,\n               * so we have to be careful about _disabledEventEmissions\n               */\n            }, {\n              key: \"_isDisabledEventEmission\",\n              value: function _isDisabledEventEmission(event) {\n                return this._disabledEventEmissions && this._disabledEventEmissions.includes(event);\n              }\n              /**\n               * Manually fire an event\n               *\n               * @param {string} event The event to fire manually\n               * @param {...any} args The arguments with which to call the listeners\n               */\n            }, {\n              key: \"fireEvent\",\n              value: function fireEvent(event) {\n                for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n                  args[_key2 - 1] = arguments[_key2];\n                }\n                if (!this.handlers || this._isDisabledEventEmission(event)) {\n                  return;\n                }\n                var handlers = this.handlers[event];\n                handlers && handlers.forEach(function (fn) {\n                  fn.apply(void 0, args);\n                });\n              }\n            }]);\n            return Observer;\n          }();\n          exports.default = Observer;\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/util/orientation.js\":\n        /*!*********************************!*\\\n          !*** ./src/util/orientation.js ***!\n          \\*********************************/\n        /***/\n        function srcUtilOrientationJs(module, exports) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports.default = withOrientation;\n          var verticalPropMap = {\n            width: 'height',\n            height: 'width',\n            overflowX: 'overflowY',\n            overflowY: 'overflowX',\n            clientWidth: 'clientHeight',\n            clientHeight: 'clientWidth',\n            clientX: 'clientY',\n            clientY: 'clientX',\n            scrollWidth: 'scrollHeight',\n            scrollLeft: 'scrollTop',\n            offsetLeft: 'offsetTop',\n            offsetTop: 'offsetLeft',\n            offsetHeight: 'offsetWidth',\n            offsetWidth: 'offsetHeight',\n            left: 'top',\n            right: 'bottom',\n            top: 'left',\n            bottom: 'right',\n            borderRightStyle: 'borderBottomStyle',\n            borderRightWidth: 'borderBottomWidth',\n            borderRightColor: 'borderBottomColor'\n          };\n          /**\n           * Convert a horizontally-oriented property name to a vertical one.\n           *\n           * @param {string} prop A property name\n           * @param {bool} vertical Whether the element is oriented vertically\n           * @returns {string} prop, converted appropriately\n           */\n\n          function mapProp(prop, vertical) {\n            if (Object.prototype.hasOwnProperty.call(verticalPropMap, prop)) {\n              return vertical ? verticalPropMap[prop] : prop;\n            } else {\n              return prop;\n            }\n          }\n          var isProxy = Symbol(\"isProxy\");\n          /**\n           * Returns an appropriately oriented object based on vertical.\n           * If vertical is true, attribute getting and setting will be mapped through\n           * verticalPropMap, so that e.g. getting the object's .width will give its\n           * .height instead.\n           * Certain methods of an oriented object will return oriented objects as well.\n           * Oriented objects can't be added to the DOM directly since they are Proxy objects\n           * and thus fail typechecks. Use domElement to get the actual element for this.\n           *\n           * @param {object} target The object to be wrapped and oriented\n           * @param {bool} vertical Whether the element is oriented vertically\n           * @returns {Proxy} An oriented object with attr translation via verticalAttrMap\n           * @since 5.0.0\n           */\n\n          function withOrientation(target, vertical) {\n            if (target[isProxy]) {\n              return target;\n            } else {\n              return new Proxy(target, {\n                get: function get(obj, prop, receiver) {\n                  if (prop === isProxy) {\n                    return true;\n                  } else if (prop === 'domElement') {\n                    return obj;\n                  } else if (prop === 'style') {\n                    return withOrientation(obj.style, vertical);\n                  } else if (prop === 'canvas') {\n                    return withOrientation(obj.canvas, vertical);\n                  } else if (prop === 'getBoundingClientRect') {\n                    return function () {\n                      return withOrientation(obj.getBoundingClientRect.apply(obj, arguments), vertical);\n                    };\n                  } else if (prop === 'getContext') {\n                    return function () {\n                      return withOrientation(obj.getContext.apply(obj, arguments), vertical);\n                    };\n                  } else {\n                    var value = obj[mapProp(prop, vertical)];\n                    return typeof value == 'function' ? value.bind(obj) : value;\n                  }\n                },\n                set: function set(obj, prop, value) {\n                  obj[mapProp(prop, vertical)] = value;\n                  return true;\n                }\n              });\n            }\n          }\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/util/prevent-click.js\":\n        /*!***********************************!*\\\n          !*** ./src/util/prevent-click.js ***!\n          \\***********************************/\n        /***/\n        function srcUtilPreventClickJs(module, exports) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports.default = preventClick;\n\n          /**\n           * Stops propagation of click event and removes event listener\n           *\n           * @private\n           * @param {object} event The click event\n           */\n          function preventClickHandler(event) {\n            event.stopPropagation();\n            document.body.removeEventListener('click', preventClickHandler, true);\n          }\n          /**\n           * Starts listening for click event and prevent propagation\n           *\n           * @param {object} values Values\n           */\n\n          function preventClick(values) {\n            document.body.addEventListener('click', preventClickHandler, true);\n          }\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/util/request-animation-frame.js\":\n        /*!*********************************************!*\\\n          !*** ./src/util/request-animation-frame.js ***!\n          \\*********************************************/\n        /***/\n        function srcUtilRequestAnimationFrameJs(module, exports) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports.default = void 0;\n\n          /* eslint-disable valid-jsdoc */\n\n          /**\n           * Returns the `requestAnimationFrame` function for the browser, or a shim with\n           * `setTimeout` if the function is not found\n           *\n           * @return {function} Available `requestAnimationFrame` function for the browser\n           */\n          var _default = (window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback, element) {\n            return setTimeout(callback, 1000 / 60);\n          }).bind(window);\n          exports.default = _default;\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/util/silence-mode.js\":\n        /*!**********************************!*\\\n          !*** ./src/util/silence-mode.js ***!\n          \\**********************************/\n        /***/\n        function srcUtilSilenceModeJs(module, exports) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports.default = ignoreSilenceMode;\n\n          /**\n           * Ignores device silence mode when using the `WebAudio` backend.\n           *\n           * Many mobile devices contain a hardware button to mute the ringtone for incoming\n           * calls and messages. Unfortunately, on some platforms like iOS, this also mutes\n           * wavesurfer's audio when using the `WebAudio` backend. This function creates a\n           * temporary `<audio>` element that makes sure the WebAudio backend keeps playing\n           * when muting the device ringer.\n           *\n           * @since 5.2.0\n           */\n          function ignoreSilenceMode() {\n            // Set the src to a short bit of url encoded as a silent mp3\n            // NOTE The silence MP3 must be high quality, when web audio sounds are played\n            // in parallel the web audio sound is mixed to match the bitrate of the html sound\n            // 0.01 seconds of silence VBR220-260 Joint Stereo 859B\n            var audioData = \"data:audio/mpeg;base64,//uQxAAAAAAAAAAAAAAAAAAAAAAAWGluZwAAAA8AAAACAAACcQCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA//////////////////////////////////////////////////////////////////8AAABhTEFNRTMuMTAwA8MAAAAAAAAAABQgJAUHQQAB9AAAAnGMHkkIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//sQxAADgnABGiAAQBCqgCRMAAgEAH///////////////7+n/9FTuQsQH//////2NG0jWUGlio5gLQTOtIoeR2WX////X4s9Atb/JRVCbBUpeRUq//////////////////9RUi0f2jn/+xDECgPCjAEQAABN4AAANIAAAAQVTEFNRTMuMTAwVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVQ==\"; // disable iOS Airplay (setting the attribute in js doesn't work)\n\n            var tmp = document.createElement(\"div\");\n            tmp.innerHTML = '<audio x-webkit-airplay=\"deny\"></audio>';\n            var audioSilentMode = tmp.children.item(0);\n            audioSilentMode.src = audioData;\n            audioSilentMode.preload = \"auto\";\n            audioSilentMode.type = \"audio/mpeg\";\n            audioSilentMode.disableRemotePlayback = true; // play\n\n            audioSilentMode.play(); // cleanup\n\n            audioSilentMode.remove();\n            tmp.remove();\n          }\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/util/style.js\":\n        /*!***************************!*\\\n          !*** ./src/util/style.js ***!\n          \\***************************/\n        /***/\n        function srcUtilStyleJs(module, exports) {\n          \"use strict\";\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports.default = style;\n\n          /**\n           * Apply a map of styles to an element\n           *\n           * @param {HTMLElement} el The element that the styles will be applied to\n           * @param {Object} styles The map of propName: attribute, both are used as-is\n           *\n           * @return {HTMLElement} el\n           */\n          function style(el, styles) {\n            Object.keys(styles).forEach(function (prop) {\n              if (el.style[prop] !== styles[prop]) {\n                el.style[prop] = styles[prop];\n              }\n            });\n            return el;\n          }\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/wavesurfer.js\":\n        /*!***************************!*\\\n          !*** ./src/wavesurfer.js ***!\n          \\***************************/\n        /***/\n        function srcWavesurferJs(module, exports, __webpack_require__) {\n          \"use strict\";\n\n          function _typeof(obj) {\n            \"@babel/helpers - typeof\";\n\n            if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n              _typeof = function _typeof(obj) {\n                return typeof obj;\n              };\n            } else {\n              _typeof = function _typeof(obj) {\n                return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n              };\n            }\n            return _typeof(obj);\n          }\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports.default = void 0;\n          var util = _interopRequireWildcard(__webpack_require__( /*! ./util */\"./src/util/index.js\"));\n          var _drawer = _interopRequireDefault(__webpack_require__( /*! ./drawer.multicanvas */\"./src/drawer.multicanvas.js\"));\n          var _webaudio = _interopRequireDefault(__webpack_require__( /*! ./webaudio */\"./src/webaudio.js\"));\n          var _mediaelement = _interopRequireDefault(__webpack_require__( /*! ./mediaelement */\"./src/mediaelement.js\"));\n          var _peakcache = _interopRequireDefault(__webpack_require__( /*! ./peakcache */\"./src/peakcache.js\"));\n          var _mediaelementWebaudio = _interopRequireDefault(__webpack_require__( /*! ./mediaelement-webaudio */\"./src/mediaelement-webaudio.js\"));\n          function _interopRequireDefault(obj) {\n            return obj && obj.__esModule ? obj : {\n              default: obj\n            };\n          }\n          function _getRequireWildcardCache(nodeInterop) {\n            if (typeof WeakMap !== \"function\") return null;\n            var cacheBabelInterop = new WeakMap();\n            var cacheNodeInterop = new WeakMap();\n            return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n              return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n            })(nodeInterop);\n          }\n          function _interopRequireWildcard(obj, nodeInterop) {\n            if (!nodeInterop && obj && obj.__esModule) {\n              return obj;\n            }\n            if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n              return {\n                default: obj\n              };\n            }\n            var cache = _getRequireWildcardCache(nodeInterop);\n            if (cache && cache.has(obj)) {\n              return cache.get(obj);\n            }\n            var newObj = {};\n            var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n            for (var key in obj) {\n              if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n                var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n                if (desc && (desc.get || desc.set)) {\n                  Object.defineProperty(newObj, key, desc);\n                } else {\n                  newObj[key] = obj[key];\n                }\n              }\n            }\n            newObj.default = obj;\n            if (cache) {\n              cache.set(obj, newObj);\n            }\n            return newObj;\n          }\n          function _inherits(subClass, superClass) {\n            if (typeof superClass !== \"function\" && superClass !== null) {\n              throw new TypeError(\"Super expression must either be null or a function\");\n            }\n            subClass.prototype = Object.create(superClass && superClass.prototype, {\n              constructor: {\n                value: subClass,\n                writable: true,\n                configurable: true\n              }\n            });\n            if (superClass) _setPrototypeOf(subClass, superClass);\n          }\n          function _setPrototypeOf(o, p) {\n            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n              o.__proto__ = p;\n              return o;\n            };\n            return _setPrototypeOf(o, p);\n          }\n          function _createSuper(Derived) {\n            var hasNativeReflectConstruct = _isNativeReflectConstruct();\n            return function _createSuperInternal() {\n              var Super = _getPrototypeOf(Derived),\n                result;\n              if (hasNativeReflectConstruct) {\n                var NewTarget = _getPrototypeOf(this).constructor;\n                result = Reflect.construct(Super, arguments, NewTarget);\n              } else {\n                result = Super.apply(this, arguments);\n              }\n              return _possibleConstructorReturn(this, result);\n            };\n          }\n          function _possibleConstructorReturn(self, call) {\n            if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n              return call;\n            } else if (call !== void 0) {\n              throw new TypeError(\"Derived constructors may only return object or undefined\");\n            }\n            return _assertThisInitialized(self);\n          }\n          function _assertThisInitialized(self) {\n            if (self === void 0) {\n              throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            }\n            return self;\n          }\n          function _isNativeReflectConstruct() {\n            if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n            if (Reflect.construct.sham) return false;\n            if (typeof Proxy === \"function\") return true;\n            try {\n              Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n              return true;\n            } catch (e) {\n              return false;\n            }\n          }\n          function _getPrototypeOf(o) {\n            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n              return o.__proto__ || Object.getPrototypeOf(o);\n            };\n            return _getPrototypeOf(o);\n          }\n          function _classCallCheck(instance, Constructor) {\n            if (!(instance instanceof Constructor)) {\n              throw new TypeError(\"Cannot call a class as a function\");\n            }\n          }\n          function _defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, descriptor.key, descriptor);\n            }\n          }\n          function _createClass(Constructor, protoProps, staticProps) {\n            if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) _defineProperties(Constructor, staticProps);\n            return Constructor;\n          }\n\n          /*\n           * This work is licensed under a BSD-3-Clause License.\n           */\n\n          /** @external {HTMLElement} https://developer.mozilla.org/en/docs/Web/API/HTMLElement */\n\n          /** @external {OfflineAudioContext} https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext */\n\n          /** @external {File} https://developer.mozilla.org/en-US/docs/Web/API/File */\n\n          /** @external {Blob} https://developer.mozilla.org/en-US/docs/Web/API/Blob */\n\n          /** @external {CanvasRenderingContext2D} https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D */\n\n          /** @external {MediaStreamConstraints} https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints */\n\n          /** @external {AudioNode} https://developer.mozilla.org/de/docs/Web/API/AudioNode */\n\n          /**\n           * @typedef {Object} WavesurferParams\n           * @property {AudioContext} audioContext=null Use your own previously\n           * initialized AudioContext or leave blank.\n           * @property {number} audioRate=1 Speed at which to play audio. Lower number is\n           * slower.\n           * @property {ScriptProcessorNode} audioScriptProcessor=null Use your own previously\n           * initialized ScriptProcessorNode or leave blank.\n           * @property {boolean} autoCenter=true If a scrollbar is present, center the\n           * waveform on current progress\n           * @property {number} autoCenterRate=5 If autoCenter is active, rate at which the\n           * waveform is centered\n           * @property {boolean} autoCenterImmediately=false If autoCenter is active, immediately\n           * center waveform on current progress\n           * @property {string} backend='WebAudio' `'WebAudio'|'MediaElement'|'MediaElementWebAudio'` In most cases\n           * you don't have to set this manually. MediaElement is a fallback for unsupported browsers.\n           * MediaElementWebAudio allows to use WebAudio API also with big audio files, loading audio like with\n           * MediaElement backend (HTML5 audio tag). You have to use the same methods of MediaElement backend for loading and\n           * playback, giving also peaks, so the audio data are not decoded. In this way you can use WebAudio features, like filters,\n           * also with audio with big duration. For example:\n           * ` wavesurfer.load(url | HTMLMediaElement, peaks, preload, duration);\n           *   wavesurfer.play();\n           *   wavesurfer.setFilter(customFilter);\n           * `\n           * @property {string} backgroundColor=null Change background color of the\n           * waveform container.\n           * @property {number} barHeight=1 The height of the wave bars.\n           * @property {number} barRadius=0 The radius of the wave bars. Makes bars rounded\n           * @property {number} barGap=null The optional spacing between bars of the wave,\n           * if not provided will be calculated in legacy format.\n           * @property {number} barWidth=null Draw the waveform using bars.\n           * @property {number} barMinHeight=null If specified, draw at least a bar of this height,\n           * eliminating waveform gaps\n           * @property {boolean} closeAudioContext=false Close and nullify all audio\n           * contexts when the destroy method is called.\n           * @property {!string|HTMLElement} container CSS selector or HTML element where\n           * the waveform should be drawn. This is the only required parameter.\n           * @property {string} cursorColor='#333' The fill color of the cursor indicating\n           * the playhead position.\n           * @property {number} cursorWidth=1 Measured in pixels.\n           * @property {object} drawingContextAttributes={desynchronized: false} Drawing context\n           * attributes.\n           * @property {number} duration=null Optional audio length so pre-rendered peaks\n           * can be display immediately for example.\n           * @property {boolean} fillParent=true Whether to fill the entire container or\n           * draw only according to `minPxPerSec`.\n           * @property {boolean} forceDecode=false Force decoding of audio using web audio\n           * when zooming to get a more detailed waveform.\n           * @property {number} height=128 The height of the waveform. Measured in\n           * pixels.\n           * @property {boolean} hideScrollbar=false Whether to hide the horizontal\n           * scrollbar when one would normally be shown.\n           * @property {boolean} ignoreSilenceMode=false If true, ignores device silence mode\n           * when using the `WebAudio` backend.\n           * @property {boolean} interact=true Whether the mouse interaction will be\n           * enabled at initialization. You can switch this parameter at any time later\n           * on.\n           * @property {boolean} loopSelection=true (Use with regions plugin) Enable\n           * looping of selected regions\n           * @property {number} maxCanvasWidth=4000 Maximum width of a single canvas in\n           * pixels, excluding a small overlap (2 * `pixelRatio`, rounded up to the next\n           * even integer). If the waveform is longer than this value, additional canvases\n           * will be used to render the waveform, which is useful for very large waveforms\n           * that may be too wide for browsers to draw on a single canvas.\n           * @property {boolean} mediaControls=false (Use with backend `MediaElement` or `MediaElementWebAudio`)\n           * this enables the native controls for the media element\n           * @property {string} mediaType='audio' (Use with backend `MediaElement` or `MediaElementWebAudio`)\n           * `'audio'|'video'` ('video' only for `MediaElement`)\n           * @property {number} minPxPerSec=20 Minimum number of pixels per second of\n           * audio.\n           * @property {boolean} normalize=false If true, normalize by the maximum peak\n           * instead of 1.0.\n           * @property {boolean} partialRender=false Use the PeakCache to improve\n           * rendering speed of large waveforms\n           * @property {number} pixelRatio=window.devicePixelRatio The pixel ratio used to\n           * calculate display\n           * @property {PluginDefinition[]} plugins=[] An array of plugin definitions to\n           * register during instantiation, they will be directly initialised unless they\n           * are added with the `deferInit` property set to true.\n           * @property {string} progressColor='#555' The fill color of the part of the\n           * waveform behind the cursor. When `progressColor` and `waveColor` are the same\n           * the progress wave is not rendered at all.\n           * @property {boolean} removeMediaElementOnDestroy=true Set to false to keep the\n           * media element in the DOM when the player is destroyed. This is useful when\n           * reusing an existing media element via the `loadMediaElement` method.\n           * @property {Object} renderer=MultiCanvas Can be used to inject a custom\n           * renderer.\n           * @property {boolean|number} responsive=false If set to `true` resize the\n           * waveform, when the window is resized. This is debounced with a `100ms`\n           * timeout by default. If this parameter is a number it represents that timeout.\n           * @property {boolean} rtl=false If set to `true`, renders waveform from\n           * right-to-left.\n           * @property {boolean} scrollParent=false Whether to scroll the container with a\n           * lengthy waveform. Otherwise the waveform is shrunk to the container width\n           * (see fillParent).\n           * @property {number} skipLength=2 Number of seconds to skip with the\n           * skipForward() and skipBackward() methods.\n           * @property {boolean} splitChannels=false Render with separate waveforms for\n           * the channels of the audio\n           * @property {SplitChannelOptions} splitChannelsOptions={} Options for splitChannel rendering\n           * @property {boolean} vertical=false Render the waveform vertically instead of horizontally.\n           * @property {string} waveColor='#999' The fill color of the waveform after the\n           * cursor.\n           * @property {object} xhr={} XHR options. For example:\n           * `let xhr = {\n           *     cache: 'default',\n           *     mode: 'cors',\n           *     method: 'GET',\n           *     credentials: 'same-origin',\n           *     redirect: 'follow',\n           *     referrer: 'client',\n           *     requestHeaders: [\n           *         {\n           *             key: 'Authorization',\n           *             value: 'my-token'\n           *         }\n           *     ]\n           * };`\n           */\n\n          /**\n           * @typedef {Object} PluginDefinition\n           * @desc The Object used to describe a plugin\n           * @example wavesurfer.addPlugin(pluginDefinition);\n           * @property {string} name The name of the plugin, the plugin instance will be\n           * added as a property to the wavesurfer instance under this name\n           * @property {?Object} staticProps The properties that should be added to the\n           * wavesurfer instance as static properties\n           * @property {?boolean} deferInit Don't initialise plugin\n           * automatically\n           * @property {Object} params={} The plugin parameters, they are the first parameter\n           * passed to the plugin class constructor function\n           * @property {PluginClass} instance The plugin instance factory, is called with\n           * the dependency specified in extends. Returns the plugin class.\n           */\n\n          /**\n           * @typedef {Object} SplitChannelOptions\n           * @desc parameters applied when splitChannels option is true\n           * @property {boolean} overlay=false determines whether channels are rendered on top of each other or on separate tracks\n           * @property {object} channelColors={} object describing color for each channel. Example:\n           * {\n           *     0: {\n           *         progressColor: 'green',\n           *         waveColor: 'pink'\n           *     },\n           *     1: {\n           *         progressColor: 'orange',\n           *         waveColor: 'purple'\n           *     }\n           * }\n           * @property {number[]} filterChannels=[] indexes of channels to be hidden from rendering\n           * @property {boolean} relativeNormalization=false determines whether\n           * normalization is done per channel or maintains proportionality between\n           * channels. Only applied when normalize and splitChannels are both true.\n           * @since 4.3.0\n           */\n\n          /**\n           * @interface PluginClass\n           *\n           * @desc This is the interface which is implemented by all plugin classes. Note\n           * that this only turns into an observer after being passed through\n           * `wavesurfer.addPlugin`.\n           *\n           * @extends {Observer}\n           */\n          var PluginClass = /*#__PURE__*/function () {\n            /**\n             * Construct the plugin\n             *\n             * @param {Object} params={} The plugin params (specific to the plugin)\n             * @param {Object} ws The wavesurfer instance\n             */\n            function PluginClass(params, ws) {\n              _classCallCheck(this, PluginClass);\n            }\n            /**\n             * Initialise the plugin\n             *\n             * Start doing something. This is called by\n             * `wavesurfer.initPlugin(pluginName)`\n             */\n\n            _createClass(PluginClass, [{\n              key: \"create\",\n              value:\n              /**\n               * Plugin definition factory\n               *\n               * This function must be used to create a plugin definition which can be\n               * used by wavesurfer to correctly instantiate the plugin.\n               *\n               * It returns a `PluginDefinition` object representing the plugin.\n               *\n               * @param {Object} params={} The plugin params (specific to the plugin)\n               */\n              function create(params) {}\n            }, {\n              key: \"init\",\n              value: function init() {}\n              /**\n               * Destroy the plugin instance\n               *\n               * Stop doing something. This is called by\n               * `wavesurfer.destroyPlugin(pluginName)`\n               */\n            }, {\n              key: \"destroy\",\n              value: function destroy() {}\n            }]);\n            return PluginClass;\n          }();\n          /**\n           * WaveSurfer core library class\n           *\n           * @extends {Observer}\n           * @example\n           * const params = {\n           *   container: '#waveform',\n           *   waveColor: 'violet',\n           *   progressColor: 'purple'\n           * };\n           *\n           * // initialise like this\n           * const wavesurfer = WaveSurfer.create(params);\n           *\n           * // or like this ...\n           * const wavesurfer = new WaveSurfer(params);\n           * wavesurfer.init();\n           *\n           * // load audio file\n           * wavesurfer.load('example/media/demo.wav');\n           */\n\n          var WaveSurfer = /*#__PURE__*/function (_util$Observer) {\n            _inherits(WaveSurfer, _util$Observer);\n            var _super = _createSuper(WaveSurfer);\n\n            /**\n             * Initialise wavesurfer instance\n             *\n             * @param {WavesurferParams} params Instantiation options for wavesurfer\n             * @example\n             * const wavesurfer = new WaveSurfer(params);\n             * @returns {this} Wavesurfer instance\n             */\n            function WaveSurfer(params) {\n              var _this;\n              _classCallCheck(this, WaveSurfer);\n              _this = _super.call(this);\n              /**\n               * Extract relevant parameters (or defaults)\n               * @private\n               */\n\n              _this.defaultParams = {\n                audioContext: null,\n                audioScriptProcessor: null,\n                audioRate: 1,\n                autoCenter: true,\n                autoCenterRate: 5,\n                autoCenterImmediately: false,\n                backend: 'WebAudio',\n                backgroundColor: null,\n                barHeight: 1,\n                barRadius: 0,\n                barGap: null,\n                barMinHeight: null,\n                container: null,\n                cursorColor: '#333',\n                cursorWidth: 1,\n                dragSelection: true,\n                drawingContextAttributes: {\n                  // Boolean that hints the user agent to reduce the latency\n                  // by desynchronizing the canvas paint cycle from the event\n                  // loop\n                  desynchronized: false\n                },\n                duration: null,\n                fillParent: true,\n                forceDecode: false,\n                height: 128,\n                hideScrollbar: false,\n                ignoreSilenceMode: false,\n                interact: true,\n                loopSelection: true,\n                maxCanvasWidth: 4000,\n                mediaContainer: null,\n                mediaControls: false,\n                mediaType: 'audio',\n                minPxPerSec: 20,\n                normalize: false,\n                partialRender: false,\n                pixelRatio: window.devicePixelRatio || screen.deviceXDPI / screen.logicalXDPI,\n                plugins: [],\n                progressColor: '#555',\n                removeMediaElementOnDestroy: true,\n                renderer: _drawer.default,\n                responsive: false,\n                rtl: false,\n                scrollParent: false,\n                skipLength: 2,\n                splitChannels: false,\n                splitChannelsOptions: {\n                  overlay: false,\n                  channelColors: {},\n                  filterChannels: [],\n                  relativeNormalization: false\n                },\n                vertical: false,\n                waveColor: '#999',\n                xhr: {}\n              };\n              _this.backends = {\n                MediaElement: _mediaelement.default,\n                WebAudio: _webaudio.default,\n                MediaElementWebAudio: _mediaelementWebaudio.default\n              };\n              _this.util = util;\n              _this.params = Object.assign({}, _this.defaultParams, params);\n              _this.params.splitChannelsOptions = Object.assign({}, _this.defaultParams.splitChannelsOptions, params.splitChannelsOptions);\n              /** @private */\n\n              _this.container = 'string' == typeof params.container ? document.querySelector(_this.params.container) : _this.params.container;\n              if (!_this.container) {\n                throw new Error('Container element not found');\n              }\n              if (_this.params.mediaContainer == null) {\n                /** @private */\n                _this.mediaContainer = _this.container;\n              } else if (typeof _this.params.mediaContainer == 'string') {\n                /** @private */\n                _this.mediaContainer = document.querySelector(_this.params.mediaContainer);\n              } else {\n                /** @private */\n                _this.mediaContainer = _this.params.mediaContainer;\n              }\n              if (!_this.mediaContainer) {\n                throw new Error('Media Container element not found');\n              }\n              if (_this.params.maxCanvasWidth <= 1) {\n                throw new Error('maxCanvasWidth must be greater than 1');\n              } else if (_this.params.maxCanvasWidth % 2 == 1) {\n                throw new Error('maxCanvasWidth must be an even number');\n              }\n              if (_this.params.rtl === true) {\n                if (_this.params.vertical === true) {\n                  util.style(_this.container, {\n                    transform: 'rotateX(180deg)'\n                  });\n                } else {\n                  util.style(_this.container, {\n                    transform: 'rotateY(180deg)'\n                  });\n                }\n              }\n              if (_this.params.backgroundColor) {\n                _this.setBackgroundColor(_this.params.backgroundColor);\n              }\n              /**\n               * @private Used to save the current volume when muting so we can\n               * restore once unmuted\n               * @type {number}\n               */\n\n              _this.savedVolume = 0;\n              /**\n               * @private The current muted state\n               * @type {boolean}\n               */\n\n              _this.isMuted = false;\n              /**\n               * @private Will hold a list of event descriptors that need to be\n               * canceled on subsequent loads of audio\n               * @type {Object[]}\n               */\n\n              _this.tmpEvents = [];\n              /**\n               * @private Holds any running audio downloads\n               * @type {Observer}\n               */\n\n              _this.currentRequest = null;\n              /** @private */\n\n              _this.arraybuffer = null;\n              /** @private */\n\n              _this.drawer = null;\n              /** @private */\n\n              _this.backend = null;\n              /** @private */\n\n              _this.peakCache = null; // cache constructor objects\n\n              if (typeof _this.params.renderer !== 'function') {\n                throw new Error('Renderer parameter is invalid');\n              }\n              /**\n               * @private The uninitialised Drawer class\n               */\n\n              _this.Drawer = _this.params.renderer;\n              /**\n               * @private The uninitialised Backend class\n               */\n              // Back compat\n\n              if (_this.params.backend == 'AudioElement') {\n                _this.params.backend = 'MediaElement';\n              }\n              if ((_this.params.backend == 'WebAudio' || _this.params.backend === 'MediaElementWebAudio') && !_webaudio.default.prototype.supportsWebAudio.call(null)) {\n                _this.params.backend = 'MediaElement';\n              }\n              _this.Backend = _this.backends[_this.params.backend];\n              /**\n               * @private map of plugin names that are currently initialised\n               */\n\n              _this.initialisedPluginList = {};\n              /** @private */\n\n              _this.isDestroyed = false;\n              /**\n               * Get the current ready status.\n               *\n               * @example const isReady = wavesurfer.isReady;\n               * @return {boolean}\n               */\n\n              _this.isReady = false; // responsive debounced event listener. If this.params.responsive is not\n              // set, this is never called. Use 100ms or this.params.responsive as\n              // timeout for the debounce function.\n\n              var prevWidth = 0;\n              _this._onResize = util.debounce(function () {\n                if (prevWidth != _this.drawer.wrapper.clientWidth && !_this.params.scrollParent) {\n                  prevWidth = _this.drawer.wrapper.clientWidth;\n                  _this.drawer.fireEvent('redraw');\n                }\n              }, typeof _this.params.responsive === 'number' ? _this.params.responsive : 100);\n              return _possibleConstructorReturn(_this, _assertThisInitialized(_this));\n            }\n            /**\n             * Initialise the wave\n             *\n             * @example\n             * var wavesurfer = new WaveSurfer(params);\n             * wavesurfer.init();\n             * @return {this} The wavesurfer instance\n             */\n\n            _createClass(WaveSurfer, [{\n              key: \"init\",\n              value: function init() {\n                this.registerPlugins(this.params.plugins);\n                this.createDrawer();\n                this.createBackend();\n                this.createPeakCache();\n                return this;\n              }\n              /**\n               * Add and initialise array of plugins (if `plugin.deferInit` is falsey),\n               * this function is called in the init function of wavesurfer\n               *\n               * @param {PluginDefinition[]} plugins An array of plugin definitions\n               * @emits {WaveSurfer#plugins-registered} Called with the array of plugin definitions\n               * @return {this} The wavesurfer instance\n               */\n            }, {\n              key: \"registerPlugins\",\n              value: function registerPlugins(plugins) {\n                var _this2 = this;\n\n                // first instantiate all the plugins\n                plugins.forEach(function (plugin) {\n                  return _this2.addPlugin(plugin);\n                }); // now run the init functions\n\n                plugins.forEach(function (plugin) {\n                  // call init function of the plugin if deferInit is falsey\n                  // in that case you would manually use initPlugins()\n                  if (!plugin.deferInit) {\n                    _this2.initPlugin(plugin.name);\n                  }\n                });\n                this.fireEvent('plugins-registered', plugins);\n                return this;\n              }\n              /**\n               * Get a map of plugin names that are currently initialised\n               *\n               * @example wavesurfer.getPlugins();\n               * @return {Object} Object with plugin names\n               */\n            }, {\n              key: \"getActivePlugins\",\n              value: function getActivePlugins() {\n                return this.initialisedPluginList;\n              }\n              /**\n               * Add a plugin object to wavesurfer\n               *\n               * @param {PluginDefinition} plugin A plugin definition\n               * @emits {WaveSurfer#plugin-added} Called with the name of the plugin that was added\n               * @example wavesurfer.addPlugin(WaveSurfer.minimap());\n               * @return {this} The wavesurfer instance\n               */\n            }, {\n              key: \"addPlugin\",\n              value: function addPlugin(plugin) {\n                var _this3 = this;\n                if (!plugin.name) {\n                  throw new Error('Plugin does not have a name!');\n                }\n                if (!plugin.instance) {\n                  throw new Error(\"Plugin \".concat(plugin.name, \" does not have an instance property!\"));\n                } // staticProps properties are applied to wavesurfer instance\n\n                if (plugin.staticProps) {\n                  Object.keys(plugin.staticProps).forEach(function (pluginStaticProp) {\n                    /**\n                     * Properties defined in a plugin definition's `staticProps` property are added as\n                     * staticProps properties of the WaveSurfer instance\n                     */\n                    _this3[pluginStaticProp] = plugin.staticProps[pluginStaticProp];\n                  });\n                }\n                var Instance = plugin.instance; // turn the plugin instance into an observer\n\n                var observerPrototypeKeys = Object.getOwnPropertyNames(util.Observer.prototype);\n                observerPrototypeKeys.forEach(function (key) {\n                  Instance.prototype[key] = util.Observer.prototype[key];\n                });\n                /**\n                 * Instantiated plugin classes are added as a property of the wavesurfer\n                 * instance\n                 * @type {Object}\n                 */\n\n                this[plugin.name] = new Instance(plugin.params || {}, this);\n                this.fireEvent('plugin-added', plugin.name);\n                return this;\n              }\n              /**\n               * Initialise a plugin\n               *\n               * @param {string} name A plugin name\n               * @emits WaveSurfer#plugin-initialised\n               * @example wavesurfer.initPlugin('minimap');\n               * @return {this} The wavesurfer instance\n               */\n            }, {\n              key: \"initPlugin\",\n              value: function initPlugin(name) {\n                if (!this[name]) {\n                  throw new Error(\"Plugin \".concat(name, \" has not been added yet!\"));\n                }\n                if (this.initialisedPluginList[name]) {\n                  // destroy any already initialised plugins\n                  this.destroyPlugin(name);\n                }\n                this[name].init();\n                this.initialisedPluginList[name] = true;\n                this.fireEvent('plugin-initialised', name);\n                return this;\n              }\n              /**\n               * Destroy a plugin\n               *\n               * @param {string} name A plugin name\n               * @emits WaveSurfer#plugin-destroyed\n               * @example wavesurfer.destroyPlugin('minimap');\n               * @returns {this} The wavesurfer instance\n               */\n            }, {\n              key: \"destroyPlugin\",\n              value: function destroyPlugin(name) {\n                if (!this[name]) {\n                  throw new Error(\"Plugin \".concat(name, \" has not been added yet and cannot be destroyed!\"));\n                }\n                if (!this.initialisedPluginList[name]) {\n                  throw new Error(\"Plugin \".concat(name, \" is not active and cannot be destroyed!\"));\n                }\n                if (typeof this[name].destroy !== 'function') {\n                  throw new Error(\"Plugin \".concat(name, \" does not have a destroy function!\"));\n                }\n                this[name].destroy();\n                delete this.initialisedPluginList[name];\n                this.fireEvent('plugin-destroyed', name);\n                return this;\n              }\n              /**\n               * Destroy all initialised plugins. Convenience function to use when\n               * wavesurfer is removed\n               *\n               * @private\n               */\n            }, {\n              key: \"destroyAllPlugins\",\n              value: function destroyAllPlugins() {\n                var _this4 = this;\n                Object.keys(this.initialisedPluginList).forEach(function (name) {\n                  return _this4.destroyPlugin(name);\n                });\n              }\n              /**\n               * Create the drawer and draw the waveform\n               *\n               * @private\n               * @emits WaveSurfer#drawer-created\n               */\n            }, {\n              key: \"createDrawer\",\n              value: function createDrawer() {\n                var _this5 = this;\n                this.drawer = new this.Drawer(this.container, this.params);\n                this.drawer.init();\n                this.fireEvent('drawer-created', this.drawer);\n                if (this.params.responsive !== false) {\n                  window.addEventListener('resize', this._onResize, true);\n                  window.addEventListener('orientationchange', this._onResize, true);\n                }\n                this.drawer.on('redraw', function () {\n                  _this5.drawBuffer();\n                  _this5.drawer.progress(_this5.backend.getPlayedPercents());\n                }); // Click-to-seek\n\n                this.drawer.on('click', function (e, progress) {\n                  setTimeout(function () {\n                    return _this5.seekTo(progress);\n                  }, 0);\n                }); // Relay the scroll event from the drawer\n\n                this.drawer.on('scroll', function (e) {\n                  if (_this5.params.partialRender) {\n                    _this5.drawBuffer();\n                  }\n                  _this5.fireEvent('scroll', e);\n                });\n              }\n              /**\n               * Create the backend\n               *\n               * @private\n               * @emits WaveSurfer#backend-created\n               */\n            }, {\n              key: \"createBackend\",\n              value: function createBackend() {\n                var _this6 = this;\n                if (this.backend) {\n                  this.backend.destroy();\n                }\n                this.backend = new this.Backend(this.params);\n                this.backend.init();\n                this.fireEvent('backend-created', this.backend);\n                this.backend.on('finish', function () {\n                  _this6.drawer.progress(_this6.backend.getPlayedPercents());\n                  _this6.fireEvent('finish');\n                });\n                this.backend.on('play', function () {\n                  return _this6.fireEvent('play');\n                });\n                this.backend.on('pause', function () {\n                  return _this6.fireEvent('pause');\n                });\n                this.backend.on('audioprocess', function (time) {\n                  _this6.drawer.progress(_this6.backend.getPlayedPercents());\n                  _this6.fireEvent('audioprocess', time);\n                }); // only needed for MediaElement and MediaElementWebAudio backend\n\n                if (this.params.backend === 'MediaElement' || this.params.backend === 'MediaElementWebAudio') {\n                  this.backend.on('seek', function () {\n                    _this6.drawer.progress(_this6.backend.getPlayedPercents());\n                  });\n                  this.backend.on('volume', function () {\n                    var newVolume = _this6.getVolume();\n                    _this6.fireEvent('volume', newVolume);\n                    if (_this6.backend.isMuted !== _this6.isMuted) {\n                      _this6.isMuted = _this6.backend.isMuted;\n                      _this6.fireEvent('mute', _this6.isMuted);\n                    }\n                  });\n                }\n              }\n              /**\n               * Create the peak cache\n               *\n               * @private\n               */\n            }, {\n              key: \"createPeakCache\",\n              value: function createPeakCache() {\n                if (this.params.partialRender) {\n                  this.peakCache = new _peakcache.default();\n                }\n              }\n              /**\n               * Get the duration of the audio clip\n               *\n               * @example const duration = wavesurfer.getDuration();\n               * @return {number} Duration in seconds\n               */\n            }, {\n              key: \"getDuration\",\n              value: function getDuration() {\n                return this.backend.getDuration();\n              }\n              /**\n               * Get the current playback position\n               *\n               * @example const currentTime = wavesurfer.getCurrentTime();\n               * @return {number} Playback position in seconds\n               */\n            }, {\n              key: \"getCurrentTime\",\n              value: function getCurrentTime() {\n                return this.backend.getCurrentTime();\n              }\n              /**\n               * Set the current play time in seconds.\n               *\n               * @param {number} seconds A positive number in seconds. E.g. 10 means 10\n               * seconds, 60 means 1 minute\n               */\n            }, {\n              key: \"setCurrentTime\",\n              value: function setCurrentTime(seconds) {\n                if (seconds >= this.getDuration()) {\n                  this.seekTo(1);\n                } else {\n                  this.seekTo(seconds / this.getDuration());\n                }\n              }\n              /**\n               * Starts playback from the current position. Optional start and end\n               * measured in seconds can be used to set the range of audio to play.\n               *\n               * @param {?number} start Position to start at\n               * @param {?number} end Position to end at\n               * @emits WaveSurfer#interaction\n               * @return {Promise} Result of the backend play method\n               * @example\n               * // play from second 1 to 5\n               * wavesurfer.play(1, 5);\n               */\n            }, {\n              key: \"play\",\n              value: function play(start, end) {\n                var _this7 = this;\n                if (this.params.ignoreSilenceMode) {\n                  // ignores device hardware silence mode\n                  util.ignoreSilenceMode();\n                }\n                this.fireEvent('interaction', function () {\n                  return _this7.play(start, end);\n                });\n                return this.backend.play(start, end);\n              }\n              /**\n               * Set a point in seconds for playback to stop at.\n               *\n               * @param {number} position Position (in seconds) to stop at\n               * @version 3.3.0\n               */\n            }, {\n              key: \"setPlayEnd\",\n              value: function setPlayEnd(position) {\n                this.backend.setPlayEnd(position);\n              }\n              /**\n               * Stops and pauses playback\n               *\n               * @example wavesurfer.pause();\n               * @return {Promise} Result of the backend pause method\n               */\n            }, {\n              key: \"pause\",\n              value: function pause() {\n                if (!this.backend.isPaused()) {\n                  return this.backend.pause();\n                }\n              }\n              /**\n               * Toggle playback\n               *\n               * @example wavesurfer.playPause();\n               * @return {Promise} Result of the backend play or pause method\n               */\n            }, {\n              key: \"playPause\",\n              value: function playPause() {\n                return this.backend.isPaused() ? this.play() : this.pause();\n              }\n              /**\n               * Get the current playback state\n               *\n               * @example const isPlaying = wavesurfer.isPlaying();\n               * @return {boolean} False if paused, true if playing\n               */\n            }, {\n              key: \"isPlaying\",\n              value: function isPlaying() {\n                return !this.backend.isPaused();\n              }\n              /**\n               * Skip backward\n               *\n               * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n               * is used\n               * @example wavesurfer.skipBackward();\n               */\n            }, {\n              key: \"skipBackward\",\n              value: function skipBackward(seconds) {\n                this.skip(-seconds || -this.params.skipLength);\n              }\n              /**\n               * Skip forward\n               *\n               * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n               * is used\n               * @example wavesurfer.skipForward();\n               */\n            }, {\n              key: \"skipForward\",\n              value: function skipForward(seconds) {\n                this.skip(seconds || this.params.skipLength);\n              }\n              /**\n               * Skip a number of seconds from the current position (use a negative value\n               * to go backwards).\n               *\n               * @param {number} offset Amount to skip back or forwards\n               * @example\n               * // go back 2 seconds\n               * wavesurfer.skip(-2);\n               */\n            }, {\n              key: \"skip\",\n              value: function skip(offset) {\n                var duration = this.getDuration() || 1;\n                var position = this.getCurrentTime() || 0;\n                position = Math.max(0, Math.min(duration, position + (offset || 0)));\n                this.seekAndCenter(position / duration);\n              }\n              /**\n               * Seeks to a position and centers the view\n               *\n               * @param {number} progress Between 0 (=beginning) and 1 (=end)\n               * @example\n               * // seek and go to the middle of the audio\n               * wavesurfer.seekTo(0.5);\n               */\n            }, {\n              key: \"seekAndCenter\",\n              value: function seekAndCenter(progress) {\n                this.seekTo(progress);\n                this.drawer.recenter(progress);\n              }\n              /**\n               * Seeks to a position\n               *\n               * @param {number} progress Between 0 (=beginning) and 1 (=end)\n               * @emits WaveSurfer#interaction\n               * @emits WaveSurfer#seek\n               * @example\n               * // seek to the middle of the audio\n               * wavesurfer.seekTo(0.5);\n               */\n            }, {\n              key: \"seekTo\",\n              value: function seekTo(progress) {\n                var _this8 = this;\n\n                // return an error if progress is not a number between 0 and 1\n                if (typeof progress !== 'number' || !isFinite(progress) || progress < 0 || progress > 1) {\n                  throw new Error('Error calling wavesurfer.seekTo, parameter must be a number between 0 and 1!');\n                }\n                this.fireEvent('interaction', function () {\n                  return _this8.seekTo(progress);\n                });\n                var isWebAudioBackend = this.params.backend === 'WebAudio';\n                var paused = this.backend.isPaused();\n                if (isWebAudioBackend && !paused) {\n                  this.backend.pause();\n                } // avoid small scrolls while paused seeking\n\n                var oldScrollParent = this.params.scrollParent;\n                this.params.scrollParent = false;\n                this.backend.seekTo(progress * this.getDuration());\n                this.drawer.progress(progress);\n                if (isWebAudioBackend && !paused) {\n                  this.backend.play();\n                }\n                this.params.scrollParent = oldScrollParent;\n                this.fireEvent('seek', progress);\n              }\n              /**\n               * Stops and goes to the beginning.\n               *\n               * @example wavesurfer.stop();\n               */\n            }, {\n              key: \"stop\",\n              value: function stop() {\n                this.pause();\n                this.seekTo(0);\n                this.drawer.progress(0);\n              }\n              /**\n               * Sets the ID of the audio device to use for output and returns a Promise.\n               *\n               * @param {string} deviceId String value representing underlying output\n               * device\n               * @returns {Promise} `Promise` that resolves to `undefined` when there are\n               * no errors detected.\n               */\n            }, {\n              key: \"setSinkId\",\n              value: function setSinkId(deviceId) {\n                return this.backend.setSinkId(deviceId);\n              }\n              /**\n               * Set the playback volume.\n               *\n               * @param {number} newVolume A value between 0 and 1, 0 being no\n               * volume and 1 being full volume.\n               * @emits WaveSurfer#volume\n               */\n            }, {\n              key: \"setVolume\",\n              value: function setVolume(newVolume) {\n                this.backend.setVolume(newVolume);\n                this.fireEvent('volume', newVolume);\n              }\n              /**\n               * Get the playback volume.\n               *\n               * @return {number} A value between 0 and 1, 0 being no\n               * volume and 1 being full volume.\n               */\n            }, {\n              key: \"getVolume\",\n              value: function getVolume() {\n                return this.backend.getVolume();\n              }\n              /**\n               * Set the playback rate.\n               *\n               * @param {number} rate A positive number. E.g. 0.5 means half the normal\n               * speed, 2 means double speed and so on.\n               * @example wavesurfer.setPlaybackRate(2);\n               */\n            }, {\n              key: \"setPlaybackRate\",\n              value: function setPlaybackRate(rate) {\n                this.backend.setPlaybackRate(rate);\n              }\n              /**\n               * Get the playback rate.\n               *\n               * @return {number} The current playback rate.\n               */\n            }, {\n              key: \"getPlaybackRate\",\n              value: function getPlaybackRate() {\n                return this.backend.getPlaybackRate();\n              }\n              /**\n               * Toggle the volume on and off. If not currently muted it will save the\n               * current volume value and turn the volume off. If currently muted then it\n               * will restore the volume to the saved value, and then rest the saved\n               * value.\n               *\n               * @example wavesurfer.toggleMute();\n               */\n            }, {\n              key: \"toggleMute\",\n              value: function toggleMute() {\n                this.setMute(!this.isMuted);\n              }\n              /**\n               * Enable or disable muted audio\n               *\n               * @param {boolean} mute Specify `true` to mute audio.\n               * @emits WaveSurfer#volume\n               * @emits WaveSurfer#mute\n               * @example\n               * // unmute\n               * wavesurfer.setMute(false);\n               * console.log(wavesurfer.getMute()) // logs false\n               */\n            }, {\n              key: \"setMute\",\n              value: function setMute(mute) {\n                // ignore all muting requests if the audio is already in that state\n                if (mute === this.isMuted) {\n                  this.fireEvent('mute', this.isMuted);\n                  return;\n                }\n                if (this.backend.setMute) {\n                  // Backends such as the MediaElement backend have their own handling\n                  // of mute, let them handle it.\n                  this.backend.setMute(mute);\n                  this.isMuted = mute;\n                } else {\n                  if (mute) {\n                    // If currently not muted then save current volume,\n                    // turn off the volume and update the mute properties\n                    this.savedVolume = this.backend.getVolume();\n                    this.backend.setVolume(0);\n                    this.isMuted = true;\n                    this.fireEvent('volume', 0);\n                  } else {\n                    // If currently muted then restore to the saved volume\n                    // and update the mute properties\n                    this.backend.setVolume(this.savedVolume);\n                    this.isMuted = false;\n                    this.fireEvent('volume', this.savedVolume);\n                  }\n                }\n                this.fireEvent('mute', this.isMuted);\n              }\n              /**\n               * Get the current mute status.\n               *\n               * @example const isMuted = wavesurfer.getMute();\n               * @return {boolean} Current mute status\n               */\n            }, {\n              key: \"getMute\",\n              value: function getMute() {\n                return this.isMuted;\n              }\n              /**\n               * Get the list of current set filters as an array.\n               *\n               * Filters must be set with setFilters method first\n               *\n               * @return {array} List of enabled filters\n               */\n            }, {\n              key: \"getFilters\",\n              value: function getFilters() {\n                return this.backend.filters || [];\n              }\n              /**\n               * Toggles `scrollParent` and redraws\n               *\n               * @example wavesurfer.toggleScroll();\n               */\n            }, {\n              key: \"toggleScroll\",\n              value: function toggleScroll() {\n                this.params.scrollParent = !this.params.scrollParent;\n                this.drawBuffer();\n              }\n              /**\n               * Toggle mouse interaction\n               *\n               * @example wavesurfer.toggleInteraction();\n               */\n            }, {\n              key: \"toggleInteraction\",\n              value: function toggleInteraction() {\n                this.params.interact = !this.params.interact;\n              }\n              /**\n               * Get the fill color of the waveform after the cursor.\n               *\n               * @return {string} A CSS color string.\n               */\n            }, {\n              key: \"getWaveColor\",\n              value: function getWaveColor() {\n                return this.params.waveColor;\n              }\n              /**\n               * Set the fill color of the waveform after the cursor.\n               *\n               * @param {string} color A CSS color string.\n               * @example wavesurfer.setWaveColor('#ddd');\n               */\n            }, {\n              key: \"setWaveColor\",\n              value: function setWaveColor(color) {\n                this.params.waveColor = color;\n                this.drawBuffer();\n              }\n              /**\n               * Get the fill color of the waveform behind the cursor.\n               *\n               * @return {string} A CSS color string.\n               */\n            }, {\n              key: \"getProgressColor\",\n              value: function getProgressColor() {\n                return this.params.progressColor;\n              }\n              /**\n               * Set the fill color of the waveform behind the cursor.\n               *\n               * @param {string} color A CSS color string.\n               * @example wavesurfer.setProgressColor('#400');\n               */\n            }, {\n              key: \"setProgressColor\",\n              value: function setProgressColor(color) {\n                this.params.progressColor = color;\n                this.drawBuffer();\n              }\n              /**\n               * Get the background color of the waveform container.\n               *\n               * @return {string} A CSS color string.\n               */\n            }, {\n              key: \"getBackgroundColor\",\n              value: function getBackgroundColor() {\n                return this.params.backgroundColor;\n              }\n              /**\n               * Set the background color of the waveform container.\n               *\n               * @param {string} color A CSS color string.\n               * @example wavesurfer.setBackgroundColor('#FF00FF');\n               */\n            }, {\n              key: \"setBackgroundColor\",\n              value: function setBackgroundColor(color) {\n                this.params.backgroundColor = color;\n                util.style(this.container, {\n                  background: this.params.backgroundColor\n                });\n              }\n              /**\n               * Get the fill color of the cursor indicating the playhead\n               * position.\n               *\n               * @return {string} A CSS color string.\n               */\n            }, {\n              key: \"getCursorColor\",\n              value: function getCursorColor() {\n                return this.params.cursorColor;\n              }\n              /**\n               * Set the fill color of the cursor indicating the playhead\n               * position.\n               *\n               * @param {string} color A CSS color string.\n               * @example wavesurfer.setCursorColor('#222');\n               */\n            }, {\n              key: \"setCursorColor\",\n              value: function setCursorColor(color) {\n                this.params.cursorColor = color;\n                this.drawer.updateCursor();\n              }\n              /**\n               * Get the height of the waveform.\n               *\n               * @return {number} Height measured in pixels.\n               */\n            }, {\n              key: \"getHeight\",\n              value: function getHeight() {\n                return this.params.height;\n              }\n              /**\n               * Set the height of the waveform.\n               *\n               * @param {number} height Height measured in pixels.\n               * @example wavesurfer.setHeight(200);\n               */\n            }, {\n              key: \"setHeight\",\n              value: function setHeight(height) {\n                this.params.height = height;\n                this.drawer.setHeight(height * this.params.pixelRatio);\n                this.drawBuffer();\n              }\n              /**\n               * Hide channels from being drawn on the waveform if splitting channels.\n               *\n               * For example, if we want to draw only the peaks for the right stereo channel:\n               *\n               * const wavesurfer = new WaveSurfer.create({...splitChannels: true});\n               * wavesurfer.load('stereo_audio.mp3');\n               *\n               * wavesurfer.setFilteredChannel([0]); <-- hide left channel peaks.\n               *\n               * @param {array} channelIndices Channels to be filtered out from drawing.\n               * @version 4.0.0\n               */\n            }, {\n              key: \"setFilteredChannels\",\n              value: function setFilteredChannels(channelIndices) {\n                this.params.splitChannelsOptions.filterChannels = channelIndices;\n                this.drawBuffer();\n              }\n              /**\n               * Get the correct peaks for current wave view-port and render wave\n               *\n               * @private\n               * @emits WaveSurfer#redraw\n               */\n            }, {\n              key: \"drawBuffer\",\n              value: function drawBuffer() {\n                var nominalWidth = Math.round(this.getDuration() * this.params.minPxPerSec * this.params.pixelRatio);\n                var parentWidth = this.drawer.getWidth();\n                var width = nominalWidth; // always start at 0 after zooming for scrolling : issue redraw left part\n\n                var start = 0;\n                var end = Math.max(start + parentWidth, width); // Fill container\n\n                if (this.params.fillParent && (!this.params.scrollParent || nominalWidth < parentWidth)) {\n                  width = parentWidth;\n                  start = 0;\n                  end = width;\n                }\n                var peaks;\n                if (this.params.partialRender) {\n                  var newRanges = this.peakCache.addRangeToPeakCache(width, start, end);\n                  var i;\n                  for (i = 0; i < newRanges.length; i++) {\n                    peaks = this.backend.getPeaks(width, newRanges[i][0], newRanges[i][1]);\n                    this.drawer.drawPeaks(peaks, width, newRanges[i][0], newRanges[i][1]);\n                  }\n                } else {\n                  peaks = this.backend.getPeaks(width, start, end);\n                  this.drawer.drawPeaks(peaks, width, start, end);\n                }\n                this.fireEvent('redraw', peaks, width);\n              }\n              /**\n               * Horizontally zooms the waveform in and out. It also changes the parameter\n               * `minPxPerSec` and enables the `scrollParent` option. Calling the function\n               * with a falsey parameter will reset the zoom state.\n               *\n               * @param {?number} pxPerSec Number of horizontal pixels per second of\n               * audio, if none is set the waveform returns to unzoomed state\n               * @emits WaveSurfer#zoom\n               * @example wavesurfer.zoom(20);\n               */\n            }, {\n              key: \"zoom\",\n              value: function zoom(pxPerSec) {\n                if (!pxPerSec) {\n                  this.params.minPxPerSec = this.defaultParams.minPxPerSec;\n                  this.params.scrollParent = false;\n                } else {\n                  this.params.minPxPerSec = pxPerSec;\n                  this.params.scrollParent = true;\n                }\n                this.drawBuffer();\n                this.drawer.progress(this.backend.getPlayedPercents());\n                this.drawer.recenter(this.getCurrentTime() / this.getDuration());\n                this.fireEvent('zoom', pxPerSec);\n              }\n              /**\n               * Decode buffer and load\n               *\n               * @private\n               * @param {ArrayBuffer} arraybuffer Buffer to process\n               */\n            }, {\n              key: \"loadArrayBuffer\",\n              value: function loadArrayBuffer(arraybuffer) {\n                var _this9 = this;\n                this.decodeArrayBuffer(arraybuffer, function (data) {\n                  if (!_this9.isDestroyed) {\n                    _this9.loadDecodedBuffer(data);\n                  }\n                });\n              }\n              /**\n               * Directly load an externally decoded AudioBuffer\n               *\n               * @private\n               * @param {AudioBuffer} buffer Buffer to process\n               * @emits WaveSurfer#ready\n               */\n            }, {\n              key: \"loadDecodedBuffer\",\n              value: function loadDecodedBuffer(buffer) {\n                this.backend.load(buffer);\n                this.drawBuffer();\n                this.isReady = true;\n                this.fireEvent('ready');\n              }\n              /**\n               * Loads audio data from a Blob or File object\n               *\n               * @param {Blob|File} blob Audio data\n               * @example\n               */\n            }, {\n              key: \"loadBlob\",\n              value: function loadBlob(blob) {\n                var _this10 = this;\n\n                // Create file reader\n                var reader = new FileReader();\n                reader.addEventListener('progress', function (e) {\n                  return _this10.onProgress(e);\n                });\n                reader.addEventListener('load', function (e) {\n                  return _this10.loadArrayBuffer(e.target.result);\n                });\n                reader.addEventListener('error', function () {\n                  return _this10.fireEvent('error', 'Error reading file');\n                });\n                reader.readAsArrayBuffer(blob);\n                this.empty();\n              }\n              /**\n               * Loads audio and re-renders the waveform.\n               *\n               * @param {string|HTMLMediaElement} url The url of the audio file or the\n               * audio element with the audio\n               * @param {number[]|Number.<Array[]>} peaks Wavesurfer does not have to decode\n               * the audio to render the waveform if this is specified\n               * @param {?string} preload (Use with backend `MediaElement` and `MediaElementWebAudio`)\n               * `'none'|'metadata'|'auto'` Preload attribute for the media element\n               * @param {?number} duration The duration of the audio. This is used to\n               * render the peaks data in the correct size for the audio duration (as\n               * befits the current `minPxPerSec` and zoom value) without having to decode\n               * the audio.\n               * @returns {void}\n               * @throws Will throw an error if the `url` argument is empty.\n               * @example\n               * // uses fetch or media element to load file (depending on backend)\n               * wavesurfer.load('http://example.com/demo.wav');\n               *\n               * // setting preload attribute with media element backend and supplying\n               * // peaks\n               * wavesurfer.load(\n               *   'http://example.com/demo.wav',\n               *   [0.0218, 0.0183, 0.0165, 0.0198, 0.2137, 0.2888],\n               *   true\n               * );\n               */\n            }, {\n              key: \"load\",\n              value: function load(url, peaks, preload, duration) {\n                if (!url) {\n                  throw new Error('url parameter cannot be empty');\n                }\n                this.empty();\n                if (preload) {\n                  // check whether the preload attribute will be usable and if not log\n                  // a warning listing the reasons why not and nullify the variable\n                  var preloadIgnoreReasons = {\n                    \"Preload is not 'auto', 'none' or 'metadata'\": ['auto', 'metadata', 'none'].indexOf(preload) === -1,\n                    'Peaks are not provided': !peaks,\n                    \"Backend is not of type 'MediaElement' or 'MediaElementWebAudio'\": ['MediaElement', 'MediaElementWebAudio'].indexOf(this.params.backend) === -1,\n                    'Url is not of type string': typeof url !== 'string'\n                  };\n                  var activeReasons = Object.keys(preloadIgnoreReasons).filter(function (reason) {\n                    return preloadIgnoreReasons[reason];\n                  });\n                  if (activeReasons.length) {\n                    // eslint-disable-next-line no-console\n                    console.warn('Preload parameter of wavesurfer.load will be ignored because:\\n\\t- ' + activeReasons.join('\\n\\t- ')); // stop invalid values from being used\n\n                    preload = null;\n                  }\n                } // loadBuffer(url, peaks, duration) requires that url is a string\n                // but users can pass in a HTMLMediaElement to WaveSurfer\n\n                if (this.params.backend === 'WebAudio' && url instanceof HTMLMediaElement) {\n                  url = url.src;\n                }\n                switch (this.params.backend) {\n                  case 'WebAudio':\n                    return this.loadBuffer(url, peaks, duration);\n                  case 'MediaElement':\n                  case 'MediaElementWebAudio':\n                    return this.loadMediaElement(url, peaks, preload, duration);\n                }\n              }\n              /**\n               * Loads audio using Web Audio buffer backend.\n               *\n               * @private\n               * @emits WaveSurfer#waveform-ready\n               * @param {string} url URL of audio file\n               * @param {number[]|Number.<Array[]>} peaks Peaks data\n               * @param {?number} duration Optional duration of audio file\n               * @returns {void}\n               */\n            }, {\n              key: \"loadBuffer\",\n              value: function loadBuffer(url, peaks, duration) {\n                var _this11 = this;\n                var load = function load(action) {\n                  if (action) {\n                    _this11.tmpEvents.push(_this11.once('ready', action));\n                  }\n                  return _this11.getArrayBuffer(url, function (data) {\n                    return _this11.loadArrayBuffer(data);\n                  });\n                };\n                if (peaks) {\n                  this.backend.setPeaks(peaks, duration);\n                  this.drawBuffer();\n                  this.fireEvent('waveform-ready');\n                  this.tmpEvents.push(this.once('interaction', load));\n                } else {\n                  return load();\n                }\n              }\n              /**\n               * Either create a media element, or load an existing media element.\n               *\n               * @private\n               * @emits WaveSurfer#waveform-ready\n               * @param {string|HTMLMediaElement} urlOrElt Either a path to a media file, or an\n               * existing HTML5 Audio/Video Element\n               * @param {number[]|Number.<Array[]>} peaks Array of peaks. Required to bypass web audio\n               * dependency\n               * @param {?boolean} preload Set to true if the preload attribute of the\n               * audio element should be enabled\n               * @param {?number} duration Optional duration of audio file\n               */\n            }, {\n              key: \"loadMediaElement\",\n              value: function loadMediaElement(urlOrElt, peaks, preload, duration) {\n                var _this12 = this;\n                var url = urlOrElt;\n                if (typeof urlOrElt === 'string') {\n                  this.backend.load(url, this.mediaContainer, peaks, preload);\n                } else {\n                  var elt = urlOrElt;\n                  this.backend.loadElt(elt, peaks); // If peaks are not provided,\n                  // url = element.src so we can get peaks with web audio\n\n                  url = elt.src;\n                }\n                this.tmpEvents.push(this.backend.once('canplay', function () {\n                  // ignore when backend was already destroyed\n                  if (!_this12.backend.destroyed) {\n                    _this12.drawBuffer();\n                    _this12.isReady = true;\n                    _this12.fireEvent('ready');\n                  }\n                }), this.backend.once('error', function (err) {\n                  return _this12.fireEvent('error', err);\n                })); // If peaks are provided, render them and fire the `waveform-ready` event.\n\n                if (peaks) {\n                  this.backend.setPeaks(peaks, duration);\n                  this.drawBuffer();\n                  this.fireEvent('waveform-ready');\n                } // If no pre-decoded peaks are provided, or are provided with\n                // forceDecode flag, attempt to download the audio file and decode it\n                // with Web Audio.\n\n                if ((!peaks || this.params.forceDecode) && this.backend.supportsWebAudio()) {\n                  this.getArrayBuffer(url, function (arraybuffer) {\n                    _this12.decodeArrayBuffer(arraybuffer, function (buffer) {\n                      _this12.backend.buffer = buffer;\n                      _this12.backend.setPeaks(null);\n                      _this12.drawBuffer();\n                      _this12.fireEvent('waveform-ready');\n                    });\n                  });\n                }\n              }\n              /**\n               * Decode an array buffer and pass data to a callback\n               *\n               * @private\n               * @param {Object} arraybuffer The array buffer to decode\n               * @param {function} callback The function to call on complete\n               */\n            }, {\n              key: \"decodeArrayBuffer\",\n              value: function decodeArrayBuffer(arraybuffer, callback) {\n                var _this13 = this;\n                if (!this.isDestroyed) {\n                  this.arraybuffer = arraybuffer;\n                  this.backend.decodeArrayBuffer(arraybuffer, function (data) {\n                    // Only use the decoded data if we haven't been destroyed or\n                    // another decode started in the meantime\n                    if (!_this13.isDestroyed && _this13.arraybuffer == arraybuffer) {\n                      callback(data);\n                      _this13.arraybuffer = null;\n                    }\n                  }, function () {\n                    return _this13.fireEvent('error', 'Error decoding audiobuffer');\n                  });\n                }\n              }\n              /**\n               * Load an array buffer using fetch and pass the result to a callback\n               *\n               * @param {string} url The URL of the file object\n               * @param {function} callback The function to call on complete\n               * @returns {util.fetchFile} fetch call\n               * @private\n               */\n            }, {\n              key: \"getArrayBuffer\",\n              value: function getArrayBuffer(url, callback) {\n                var _this14 = this;\n                var options = Object.assign({\n                  url: url,\n                  responseType: 'arraybuffer'\n                }, this.params.xhr);\n                var request = util.fetchFile(options);\n                this.currentRequest = request;\n                this.tmpEvents.push(request.on('progress', function (e) {\n                  _this14.onProgress(e);\n                }), request.on('success', function (data) {\n                  callback(data);\n                  _this14.currentRequest = null;\n                }), request.on('error', function (e) {\n                  _this14.fireEvent('error', e);\n                  _this14.currentRequest = null;\n                }));\n                return request;\n              }\n              /**\n               * Called while the audio file is loading\n               *\n               * @private\n               * @param {Event} e Progress event\n               * @emits WaveSurfer#loading\n               */\n            }, {\n              key: \"onProgress\",\n              value: function onProgress(e) {\n                var percentComplete;\n                if (e.lengthComputable) {\n                  percentComplete = e.loaded / e.total;\n                } else {\n                  // Approximate progress with an asymptotic\n                  // function, and assume downloads in the 1-3 MB range.\n                  percentComplete = e.loaded / (e.loaded + 1000000);\n                }\n                this.fireEvent('loading', Math.round(percentComplete * 100), e.target);\n              }\n              /**\n               * Exports PCM data into a JSON array and optionally opens in a new window\n               * as valid JSON Blob instance.\n               *\n               * @param {number} length=1024 The scale in which to export the peaks\n               * @param {number} accuracy=10000\n               * @param {?boolean} noWindow Set to true to disable opening a new\n               * window with the JSON\n               * @param {number} start Start index\n               * @param {number} end End index\n               * @return {Promise} Promise that resolves with array of peaks\n               */\n            }, {\n              key: \"exportPCM\",\n              value: function exportPCM(length, accuracy, noWindow, start, end) {\n                length = length || 1024;\n                start = start || 0;\n                accuracy = accuracy || 10000;\n                noWindow = noWindow || false;\n                var peaks = this.backend.getPeaks(length, start, end);\n                var arr = [].map.call(peaks, function (val) {\n                  return Math.round(val * accuracy) / accuracy;\n                });\n                return new Promise(function (resolve, reject) {\n                  if (!noWindow) {\n                    var blobJSON = new Blob([JSON.stringify(arr)], {\n                      type: 'application/json;charset=utf-8'\n                    });\n                    var objURL = URL.createObjectURL(blobJSON);\n                    window.open(objURL);\n                    URL.revokeObjectURL(objURL);\n                  }\n                  resolve(arr);\n                });\n              }\n              /**\n               * Save waveform image as data URI.\n               *\n               * The default format is `'image/png'`. Other supported types are\n               * `'image/jpeg'` and `'image/webp'`.\n               *\n               * @param {string} format='image/png' A string indicating the image format.\n               * The default format type is `'image/png'`.\n               * @param {number} quality=1 A number between 0 and 1 indicating the image\n               * quality to use for image formats that use lossy compression such as\n               * `'image/jpeg'`` and `'image/webp'`.\n               * @param {string} type Image data type to return. Either 'dataURL' (default)\n               * or 'blob'.\n               * @return {string|string[]|Promise} When using `'dataURL'` type this returns\n               * a single data URL or an array of data URLs, one for each canvas. When using\n               * `'blob'` type this returns a `Promise` resolving with an array of `Blob`\n               * instances, one for each canvas.\n               */\n            }, {\n              key: \"exportImage\",\n              value: function exportImage(format, quality, type) {\n                if (!format) {\n                  format = 'image/png';\n                }\n                if (!quality) {\n                  quality = 1;\n                }\n                if (!type) {\n                  type = 'dataURL';\n                }\n                return this.drawer.getImage(format, quality, type);\n              }\n              /**\n               * Cancel any fetch request currently in progress\n               */\n            }, {\n              key: \"cancelAjax\",\n              value: function cancelAjax() {\n                if (this.currentRequest && this.currentRequest.controller) {\n                  // If the current request has a ProgressHandler, then its ReadableStream might need to be cancelled too\n                  // See: Wavesurfer issue #2042\n                  // See Firefox bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1583815\n                  if (this.currentRequest._reader) {\n                    // Ignoring exceptions thrown by call to cancel()\n                    this.currentRequest._reader.cancel().catch(function (err) {});\n                  }\n                  this.currentRequest.controller.abort();\n                  this.currentRequest = null;\n                }\n              }\n              /**\n               * @private\n               */\n            }, {\n              key: \"clearTmpEvents\",\n              value: function clearTmpEvents() {\n                this.tmpEvents.forEach(function (e) {\n                  return e.un();\n                });\n              }\n              /**\n               * Display empty waveform.\n               */\n            }, {\n              key: \"empty\",\n              value: function empty() {\n                if (!this.backend.isPaused()) {\n                  this.stop();\n                  this.backend.disconnectSource();\n                }\n                this.isReady = false;\n                this.cancelAjax();\n                this.clearTmpEvents(); // empty drawer\n\n                this.drawer.progress(0);\n                this.drawer.setWidth(0);\n                this.drawer.drawPeaks({\n                  length: this.drawer.getWidth()\n                }, 0);\n              }\n              /**\n               * Remove events, elements and disconnect WebAudio nodes.\n               *\n               * @emits WaveSurfer#destroy\n               */\n            }, {\n              key: \"destroy\",\n              value: function destroy() {\n                this.destroyAllPlugins();\n                this.fireEvent('destroy');\n                this.cancelAjax();\n                this.clearTmpEvents();\n                this.unAll();\n                if (this.params.responsive !== false) {\n                  window.removeEventListener('resize', this._onResize, true);\n                  window.removeEventListener('orientationchange', this._onResize, true);\n                }\n                if (this.backend) {\n                  this.backend.destroy(); // clears memory usage\n\n                  this.backend = null;\n                }\n                if (this.drawer) {\n                  this.drawer.destroy();\n                }\n                this.isDestroyed = true;\n                this.isReady = false;\n                this.arraybuffer = null;\n              }\n            }], [{\n              key: \"create\",\n              value: /** @private */\n\n              /** @private */\n\n              /**\n               * Instantiate this class, call its `init` function and returns it\n               *\n               * @param {WavesurferParams} params The wavesurfer parameters\n               * @return {Object} WaveSurfer instance\n               * @example const wavesurfer = WaveSurfer.create(params);\n               */\n              function create(params) {\n                var wavesurfer = new WaveSurfer(params);\n                return wavesurfer.init();\n              }\n              /**\n               * The library version number is available as a static property of the\n               * WaveSurfer class\n               *\n               * @type {String}\n               * @example\n               * console.log('Using wavesurfer.js ' + WaveSurfer.VERSION);\n               */\n            }]);\n\n            return WaveSurfer;\n          }(util.Observer);\n          exports.default = WaveSurfer;\n          WaveSurfer.VERSION = \"5.2.0\";\n          WaveSurfer.util = util;\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/webaudio.js\":\n        /*!*************************!*\\\n          !*** ./src/webaudio.js ***!\n          \\*************************/\n        /***/\n        function srcWebaudioJs(module, exports, __webpack_require__) {\n          \"use strict\";\n\n          function _typeof(obj) {\n            \"@babel/helpers - typeof\";\n\n            if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n              _typeof = function _typeof(obj) {\n                return typeof obj;\n              };\n            } else {\n              _typeof = function _typeof(obj) {\n                return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n              };\n            }\n            return _typeof(obj);\n          }\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports.default = void 0;\n          var util = _interopRequireWildcard(__webpack_require__( /*! ./util */\"./src/util/index.js\"));\n          function _getRequireWildcardCache(nodeInterop) {\n            if (typeof WeakMap !== \"function\") return null;\n            var cacheBabelInterop = new WeakMap();\n            var cacheNodeInterop = new WeakMap();\n            return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n              return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n            })(nodeInterop);\n          }\n          function _interopRequireWildcard(obj, nodeInterop) {\n            if (!nodeInterop && obj && obj.__esModule) {\n              return obj;\n            }\n            if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n              return {\n                default: obj\n              };\n            }\n            var cache = _getRequireWildcardCache(nodeInterop);\n            if (cache && cache.has(obj)) {\n              return cache.get(obj);\n            }\n            var newObj = {};\n            var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n            for (var key in obj) {\n              if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n                var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n                if (desc && (desc.get || desc.set)) {\n                  Object.defineProperty(newObj, key, desc);\n                } else {\n                  newObj[key] = obj[key];\n                }\n              }\n            }\n            newObj.default = obj;\n            if (cache) {\n              cache.set(obj, newObj);\n            }\n            return newObj;\n          }\n          function _defineProperty(obj, key, value) {\n            if (key in obj) {\n              Object.defineProperty(obj, key, {\n                value: value,\n                enumerable: true,\n                configurable: true,\n                writable: true\n              });\n            } else {\n              obj[key] = value;\n            }\n            return obj;\n          }\n          function _classCallCheck(instance, Constructor) {\n            if (!(instance instanceof Constructor)) {\n              throw new TypeError(\"Cannot call a class as a function\");\n            }\n          }\n          function _defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, descriptor.key, descriptor);\n            }\n          }\n          function _createClass(Constructor, protoProps, staticProps) {\n            if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) _defineProperties(Constructor, staticProps);\n            return Constructor;\n          }\n          function _inherits(subClass, superClass) {\n            if (typeof superClass !== \"function\" && superClass !== null) {\n              throw new TypeError(\"Super expression must either be null or a function\");\n            }\n            subClass.prototype = Object.create(superClass && superClass.prototype, {\n              constructor: {\n                value: subClass,\n                writable: true,\n                configurable: true\n              }\n            });\n            if (superClass) _setPrototypeOf(subClass, superClass);\n          }\n          function _setPrototypeOf(o, p) {\n            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n              o.__proto__ = p;\n              return o;\n            };\n            return _setPrototypeOf(o, p);\n          }\n          function _createSuper(Derived) {\n            var hasNativeReflectConstruct = _isNativeReflectConstruct();\n            return function _createSuperInternal() {\n              var Super = _getPrototypeOf(Derived),\n                result;\n              if (hasNativeReflectConstruct) {\n                var NewTarget = _getPrototypeOf(this).constructor;\n                result = Reflect.construct(Super, arguments, NewTarget);\n              } else {\n                result = Super.apply(this, arguments);\n              }\n              return _possibleConstructorReturn(this, result);\n            };\n          }\n          function _possibleConstructorReturn(self, call) {\n            if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n              return call;\n            } else if (call !== void 0) {\n              throw new TypeError(\"Derived constructors may only return object or undefined\");\n            }\n            return _assertThisInitialized(self);\n          }\n          function _assertThisInitialized(self) {\n            if (self === void 0) {\n              throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            }\n            return self;\n          }\n          function _isNativeReflectConstruct() {\n            if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n            if (Reflect.construct.sham) return false;\n            if (typeof Proxy === \"function\") return true;\n            try {\n              Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n              return true;\n            } catch (e) {\n              return false;\n            }\n          }\n          function _getPrototypeOf(o) {\n            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n              return o.__proto__ || Object.getPrototypeOf(o);\n            };\n            return _getPrototypeOf(o);\n          }\n\n          // using constants to prevent someone writing the string wrong\n          var PLAYING = 'playing';\n          var PAUSED = 'paused';\n          var FINISHED = 'finished';\n          /**\n           * WebAudio backend\n           *\n           * @extends {Observer}\n           */\n\n          var WebAudio = /*#__PURE__*/function (_util$Observer) {\n            _inherits(WebAudio, _util$Observer);\n            var _super = _createSuper(WebAudio);\n\n            /**\n             * Construct the backend\n             *\n             * @param {WavesurferParams} params Wavesurfer parameters\n             */\n            function WebAudio(params) {\n              var _this$stateBehaviors, _this$states;\n              var _this;\n              _classCallCheck(this, WebAudio);\n              _this = _super.call(this);\n              /** @private */\n\n              _this.audioContext = null;\n              _this.offlineAudioContext = null;\n              _this.stateBehaviors = (_this$stateBehaviors = {}, _defineProperty(_this$stateBehaviors, PLAYING, {\n                init: function init() {\n                  this.addOnAudioProcess();\n                },\n                getPlayedPercents: function getPlayedPercents() {\n                  var duration = this.getDuration();\n                  return this.getCurrentTime() / duration || 0;\n                },\n                getCurrentTime: function getCurrentTime() {\n                  return this.startPosition + this.getPlayedTime();\n                }\n              }), _defineProperty(_this$stateBehaviors, PAUSED, {\n                init: function init() {\n                  this.removeOnAudioProcess();\n                },\n                getPlayedPercents: function getPlayedPercents() {\n                  var duration = this.getDuration();\n                  return this.getCurrentTime() / duration || 0;\n                },\n                getCurrentTime: function getCurrentTime() {\n                  return this.startPosition;\n                }\n              }), _defineProperty(_this$stateBehaviors, FINISHED, {\n                init: function init() {\n                  this.removeOnAudioProcess();\n                  this.fireEvent('finish');\n                },\n                getPlayedPercents: function getPlayedPercents() {\n                  return 1;\n                },\n                getCurrentTime: function getCurrentTime() {\n                  return this.getDuration();\n                }\n              }), _this$stateBehaviors);\n              _this.params = params;\n              /** ac: Audio Context instance */\n\n              _this.ac = params.audioContext || (_this.supportsWebAudio() ? _this.getAudioContext() : {});\n              /**@private */\n\n              _this.lastPlay = _this.ac.currentTime;\n              /** @private */\n\n              _this.startPosition = 0;\n              /** @private */\n\n              _this.scheduledPause = null;\n              /** @private */\n\n              _this.states = (_this$states = {}, _defineProperty(_this$states, PLAYING, Object.create(_this.stateBehaviors[PLAYING])), _defineProperty(_this$states, PAUSED, Object.create(_this.stateBehaviors[PAUSED])), _defineProperty(_this$states, FINISHED, Object.create(_this.stateBehaviors[FINISHED])), _this$states);\n              /** @private */\n\n              _this.buffer = null;\n              /** @private */\n\n              _this.filters = [];\n              /** gainNode: allows to control audio volume */\n\n              _this.gainNode = null;\n              /** @private */\n\n              _this.mergedPeaks = null;\n              /** @private */\n\n              _this.offlineAc = null;\n              /** @private */\n\n              _this.peaks = null;\n              /** @private */\n\n              _this.playbackRate = 1;\n              /** analyser: provides audio analysis information */\n\n              _this.analyser = null;\n              /** scriptNode: allows processing audio */\n\n              _this.scriptNode = null;\n              /** @private */\n\n              _this.source = null;\n              /** @private */\n\n              _this.splitPeaks = [];\n              /** @private */\n\n              _this.state = null;\n              /** @private */\n\n              _this.explicitDuration = params.duration;\n              /**\n               * Boolean indicating if the backend was destroyed.\n               */\n\n              _this.destroyed = false;\n              return _this;\n            }\n            /**\n             * Initialise the backend, called in `wavesurfer.createBackend()`\n             */\n\n            _createClass(WebAudio, [{\n              key: \"supportsWebAudio\",\n              value: /** scriptBufferSize: size of the processing buffer */\n\n              /** audioContext: allows to process audio with WebAudio API */\n\n              /** @private */\n\n              /** @private */\n\n              /**\n               * Does the browser support this backend\n               *\n               * @return {boolean} Whether or not this browser supports this backend\n               */\n              function supportsWebAudio() {\n                return !!(window.AudioContext || window.webkitAudioContext);\n              }\n              /**\n               * Get the audio context used by this backend or create one\n               *\n               * @return {AudioContext} Existing audio context, or creates a new one\n               */\n            }, {\n              key: \"getAudioContext\",\n              value: function getAudioContext() {\n                if (!window.WaveSurferAudioContext) {\n                  window.WaveSurferAudioContext = new (window.AudioContext || window.webkitAudioContext)();\n                }\n                return window.WaveSurferAudioContext;\n              }\n              /**\n               * Get the offline audio context used by this backend or create one\n               *\n               * @param {number} sampleRate The sample rate to use\n               * @return {OfflineAudioContext} Existing offline audio context, or creates\n               * a new one\n               */\n            }, {\n              key: \"getOfflineAudioContext\",\n              value: function getOfflineAudioContext(sampleRate) {\n                if (!window.WaveSurferOfflineAudioContext) {\n                  window.WaveSurferOfflineAudioContext = new (window.OfflineAudioContext || window.webkitOfflineAudioContext)(1, 2, sampleRate);\n                }\n                return window.WaveSurferOfflineAudioContext;\n              }\n            }, {\n              key: \"init\",\n              value: function init() {\n                this.createVolumeNode();\n                this.createScriptNode();\n                this.createAnalyserNode();\n                this.setState(PAUSED);\n                this.setPlaybackRate(this.params.audioRate);\n                this.setLength(0);\n              }\n              /** @private */\n            }, {\n              key: \"disconnectFilters\",\n              value: function disconnectFilters() {\n                if (this.filters) {\n                  this.filters.forEach(function (filter) {\n                    filter && filter.disconnect();\n                  });\n                  this.filters = null; // Reconnect direct path\n\n                  this.analyser.connect(this.gainNode);\n                }\n              }\n              /**\n               * @private\n               *\n               * @param {string} state The new state\n               */\n            }, {\n              key: \"setState\",\n              value: function setState(state) {\n                if (this.state !== this.states[state]) {\n                  this.state = this.states[state];\n                  this.state.init.call(this);\n                }\n              }\n              /**\n               * Unpacked `setFilters()`\n               *\n               * @param {...AudioNode} filters One or more filters to set\n               */\n            }, {\n              key: \"setFilter\",\n              value: function setFilter() {\n                for (var _len = arguments.length, filters = new Array(_len), _key = 0; _key < _len; _key++) {\n                  filters[_key] = arguments[_key];\n                }\n                this.setFilters(filters);\n              }\n              /**\n               * Insert custom Web Audio nodes into the graph\n               *\n               * @param {AudioNode[]} filters Packed filters array\n               * @example\n               * const lowpass = wavesurfer.backend.ac.createBiquadFilter();\n               * wavesurfer.backend.setFilter(lowpass);\n               */\n            }, {\n              key: \"setFilters\",\n              value: function setFilters(filters) {\n                // Remove existing filters\n                this.disconnectFilters(); // Insert filters if filter array not empty\n\n                if (filters && filters.length) {\n                  this.filters = filters; // Disconnect direct path before inserting filters\n\n                  this.analyser.disconnect(); // Connect each filter in turn\n\n                  filters.reduce(function (prev, curr) {\n                    prev.connect(curr);\n                    return curr;\n                  }, this.analyser).connect(this.gainNode);\n                }\n              }\n              /** Create ScriptProcessorNode to process audio */\n            }, {\n              key: \"createScriptNode\",\n              value: function createScriptNode() {\n                if (this.params.audioScriptProcessor) {\n                  this.scriptNode = this.params.audioScriptProcessor;\n                } else {\n                  if (this.ac.createScriptProcessor) {\n                    this.scriptNode = this.ac.createScriptProcessor(WebAudio.scriptBufferSize);\n                  } else {\n                    this.scriptNode = this.ac.createJavaScriptNode(WebAudio.scriptBufferSize);\n                  }\n                }\n                this.scriptNode.connect(this.ac.destination);\n              }\n              /** @private */\n            }, {\n              key: \"addOnAudioProcess\",\n              value: function addOnAudioProcess() {\n                var _this2 = this;\n                this.scriptNode.onaudioprocess = function () {\n                  var time = _this2.getCurrentTime();\n                  if (time >= _this2.getDuration()) {\n                    _this2.setState(FINISHED);\n                    _this2.fireEvent('pause');\n                  } else if (time >= _this2.scheduledPause) {\n                    _this2.pause();\n                  } else if (_this2.state === _this2.states[PLAYING]) {\n                    _this2.fireEvent('audioprocess', time);\n                  }\n                };\n              }\n              /** @private */\n            }, {\n              key: \"removeOnAudioProcess\",\n              value: function removeOnAudioProcess() {\n                this.scriptNode.onaudioprocess = null;\n              }\n              /** Create analyser node to perform audio analysis */\n            }, {\n              key: \"createAnalyserNode\",\n              value: function createAnalyserNode() {\n                this.analyser = this.ac.createAnalyser();\n                this.analyser.connect(this.gainNode);\n              }\n              /**\n               * Create the gain node needed to control the playback volume.\n               *\n               */\n            }, {\n              key: \"createVolumeNode\",\n              value: function createVolumeNode() {\n                // Create gain node using the AudioContext\n                if (this.ac.createGain) {\n                  this.gainNode = this.ac.createGain();\n                } else {\n                  this.gainNode = this.ac.createGainNode();\n                } // Add the gain node to the graph\n\n                this.gainNode.connect(this.ac.destination);\n              }\n              /**\n               * Set the sink id for the media player\n               *\n               * @param {string} deviceId String value representing audio device id.\n               * @returns {Promise} A Promise that resolves to `undefined` when there\n               * are no errors.\n               */\n            }, {\n              key: \"setSinkId\",\n              value: function setSinkId(deviceId) {\n                if (deviceId) {\n                  /**\n                   * The webaudio API doesn't currently support setting the device\n                   * output. Here we create an HTMLAudioElement, connect the\n                   * webaudio stream to that element and setSinkId there.\n                   */\n                  var audio = new window.Audio();\n                  if (!audio.setSinkId) {\n                    return Promise.reject(new Error('setSinkId is not supported in your browser'));\n                  }\n                  audio.autoplay = true;\n                  var dest = this.ac.createMediaStreamDestination();\n                  this.gainNode.disconnect();\n                  this.gainNode.connect(dest);\n                  audio.srcObject = dest.stream;\n                  return audio.setSinkId(deviceId);\n                } else {\n                  return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\n                }\n              }\n              /**\n               * Set the audio volume\n               *\n               * @param {number} value A floating point value between 0 and 1.\n               */\n            }, {\n              key: \"setVolume\",\n              value: function setVolume(value) {\n                this.gainNode.gain.setValueAtTime(value, this.ac.currentTime);\n              }\n              /**\n               * Get the current volume\n               *\n               * @return {number} value A floating point value between 0 and 1.\n               */\n            }, {\n              key: \"getVolume\",\n              value: function getVolume() {\n                return this.gainNode.gain.value;\n              }\n              /**\n               * Decode an array buffer and pass data to a callback\n               *\n               * @private\n               * @param {ArrayBuffer} arraybuffer The array buffer to decode\n               * @param {function} callback The function to call on complete.\n               * @param {function} errback The function to call on error.\n               */\n            }, {\n              key: \"decodeArrayBuffer\",\n              value: function decodeArrayBuffer(arraybuffer, callback, errback) {\n                if (!this.offlineAc) {\n                  this.offlineAc = this.getOfflineAudioContext(this.ac && this.ac.sampleRate ? this.ac.sampleRate : 44100);\n                }\n                if ('webkitAudioContext' in window) {\n                  // Safari: no support for Promise-based decodeAudioData enabled\n                  // Enable it in Safari using the Experimental Features > Modern WebAudio API option\n                  this.offlineAc.decodeAudioData(arraybuffer, function (data) {\n                    return callback(data);\n                  }, errback);\n                } else {\n                  this.offlineAc.decodeAudioData(arraybuffer).then(function (data) {\n                    return callback(data);\n                  }).catch(function (err) {\n                    return errback(err);\n                  });\n                }\n              }\n              /**\n               * Set pre-decoded peaks\n               *\n               * @param {number[]|Number.<Array[]>} peaks Peaks data\n               * @param {?number} duration Explicit duration\n               */\n            }, {\n              key: \"setPeaks\",\n              value: function setPeaks(peaks, duration) {\n                if (duration != null) {\n                  this.explicitDuration = duration;\n                }\n                this.peaks = peaks;\n              }\n              /**\n               * Set the rendered length (different from the length of the audio)\n               *\n               * @param {number} length The rendered length\n               */\n            }, {\n              key: \"setLength\",\n              value: function setLength(length) {\n                // No resize, we can preserve the cached peaks.\n                if (this.mergedPeaks && length == 2 * this.mergedPeaks.length - 1 + 2) {\n                  return;\n                }\n                this.splitPeaks = [];\n                this.mergedPeaks = []; // Set the last element of the sparse array so the peak arrays are\n                // appropriately sized for other calculations.\n\n                var channels = this.buffer ? this.buffer.numberOfChannels : 1;\n                var c;\n                for (c = 0; c < channels; c++) {\n                  this.splitPeaks[c] = [];\n                  this.splitPeaks[c][2 * (length - 1)] = 0;\n                  this.splitPeaks[c][2 * (length - 1) + 1] = 0;\n                }\n                this.mergedPeaks[2 * (length - 1)] = 0;\n                this.mergedPeaks[2 * (length - 1) + 1] = 0;\n              }\n              /**\n               * Compute the max and min value of the waveform when broken into <length> subranges.\n               *\n               * @param {number} length How many subranges to break the waveform into.\n               * @param {number} first First sample in the required range.\n               * @param {number} last Last sample in the required range.\n               * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of arrays of\n               * peaks consisting of (max, min) values for each subrange.\n               */\n            }, {\n              key: \"getPeaks\",\n              value: function getPeaks(length, first, last) {\n                if (this.peaks) {\n                  return this.peaks;\n                }\n                if (!this.buffer) {\n                  return [];\n                }\n                first = first || 0;\n                last = last || length - 1;\n                this.setLength(length);\n                if (!this.buffer) {\n                  return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\n                }\n                /**\n                 * The following snippet fixes a buffering data issue on the Safari\n                 * browser which returned undefined It creates the missing buffer based\n                 * on 1 channel, 4096 samples and the sampleRate from the current\n                 * webaudio context 4096 samples seemed to be the best fit for rendering\n                 * will review this code once a stable version of Safari TP is out\n                 */\n\n                if (!this.buffer.length) {\n                  var newBuffer = this.createBuffer(1, 4096, this.sampleRate);\n                  this.buffer = newBuffer.buffer;\n                }\n                var sampleSize = this.buffer.length / length;\n                var sampleStep = ~~(sampleSize / 10) || 1;\n                var channels = this.buffer.numberOfChannels;\n                var c;\n                for (c = 0; c < channels; c++) {\n                  var peaks = this.splitPeaks[c];\n                  var chan = this.buffer.getChannelData(c);\n                  var i = void 0;\n                  for (i = first; i <= last; i++) {\n                    var start = ~~(i * sampleSize);\n                    var end = ~~(start + sampleSize);\n                    /**\n                     * Initialize the max and min to the first sample of this\n                     * subrange, so that even if the samples are entirely\n                     * on one side of zero, we still return the true max and\n                     * min values in the subrange.\n                     */\n\n                    var min = chan[start];\n                    var max = min;\n                    var j = void 0;\n                    for (j = start; j < end; j += sampleStep) {\n                      var value = chan[j];\n                      if (value > max) {\n                        max = value;\n                      }\n                      if (value < min) {\n                        min = value;\n                      }\n                    }\n                    peaks[2 * i] = max;\n                    peaks[2 * i + 1] = min;\n                    if (c == 0 || max > this.mergedPeaks[2 * i]) {\n                      this.mergedPeaks[2 * i] = max;\n                    }\n                    if (c == 0 || min < this.mergedPeaks[2 * i + 1]) {\n                      this.mergedPeaks[2 * i + 1] = min;\n                    }\n                  }\n                }\n                return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\n              }\n              /**\n               * Get the position from 0 to 1\n               *\n               * @return {number} Position\n               */\n            }, {\n              key: \"getPlayedPercents\",\n              value: function getPlayedPercents() {\n                return this.state.getPlayedPercents.call(this);\n              }\n              /** @private */\n            }, {\n              key: \"disconnectSource\",\n              value: function disconnectSource() {\n                if (this.source) {\n                  this.source.disconnect();\n                }\n              }\n              /**\n               * Destroy all references with WebAudio, disconnecting audio nodes and closing Audio Context\n               */\n            }, {\n              key: \"destroyWebAudio\",\n              value: function destroyWebAudio() {\n                this.disconnectFilters();\n                this.disconnectSource();\n                this.gainNode.disconnect();\n                this.scriptNode.disconnect();\n                this.analyser.disconnect(); // close the audioContext if closeAudioContext option is set to true\n\n                if (this.params.closeAudioContext) {\n                  // check if browser supports AudioContext.close()\n                  if (typeof this.ac.close === 'function' && this.ac.state != 'closed') {\n                    this.ac.close();\n                  } // clear the reference to the audiocontext\n\n                  this.ac = null; // clear the actual audiocontext, either passed as param or the\n                  // global singleton\n\n                  if (!this.params.audioContext) {\n                    window.WaveSurferAudioContext = null;\n                  } else {\n                    this.params.audioContext = null;\n                  } // clear the offlineAudioContext\n\n                  window.WaveSurferOfflineAudioContext = null;\n                }\n              }\n              /**\n               * This is called when wavesurfer is destroyed\n               */\n            }, {\n              key: \"destroy\",\n              value: function destroy() {\n                if (!this.isPaused()) {\n                  this.pause();\n                }\n                this.unAll();\n                this.buffer = null;\n                this.destroyed = true;\n                this.destroyWebAudio();\n              }\n              /**\n               * Loaded a decoded audio buffer\n               *\n               * @param {Object} buffer Decoded audio buffer to load\n               */\n            }, {\n              key: \"load\",\n              value: function load(buffer) {\n                this.startPosition = 0;\n                this.lastPlay = this.ac.currentTime;\n                this.buffer = buffer;\n                this.createSource();\n              }\n              /** @private */\n            }, {\n              key: \"createSource\",\n              value: function createSource() {\n                this.disconnectSource();\n                this.source = this.ac.createBufferSource(); // adjust for old browsers\n\n                this.source.start = this.source.start || this.source.noteGrainOn;\n                this.source.stop = this.source.stop || this.source.noteOff;\n                this.setPlaybackRate(this.playbackRate);\n                this.source.buffer = this.buffer;\n                this.source.connect(this.analyser);\n              }\n              /**\n               * @private\n               *\n               * some browsers require an explicit call to #resume before they will play back audio\n               */\n            }, {\n              key: \"resumeAudioContext\",\n              value: function resumeAudioContext() {\n                if (this.ac.state == 'suspended') {\n                  this.ac.resume && this.ac.resume();\n                }\n              }\n              /**\n               * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n               *\n               * @return {boolean} Whether or not this backend is currently paused\n               */\n            }, {\n              key: \"isPaused\",\n              value: function isPaused() {\n                return this.state !== this.states[PLAYING];\n              }\n              /**\n               * Used by `wavesurfer.getDuration()`\n               *\n               * @return {number} Duration of loaded buffer\n               */\n            }, {\n              key: \"getDuration\",\n              value: function getDuration() {\n                if (this.explicitDuration) {\n                  return this.explicitDuration;\n                }\n                if (!this.buffer) {\n                  return 0;\n                }\n                return this.buffer.duration;\n              }\n              /**\n               * Used by `wavesurfer.seekTo()`\n               *\n               * @param {number} start Position to start at in seconds\n               * @param {number} end Position to end at in seconds\n               * @return {{start: number, end: number}} Object containing start and end\n               * positions\n               */\n            }, {\n              key: \"seekTo\",\n              value: function seekTo(start, end) {\n                if (!this.buffer) {\n                  return;\n                }\n                this.scheduledPause = null;\n                if (start == null) {\n                  start = this.getCurrentTime();\n                  if (start >= this.getDuration()) {\n                    start = 0;\n                  }\n                }\n                if (end == null) {\n                  end = this.getDuration();\n                }\n                this.startPosition = start;\n                this.lastPlay = this.ac.currentTime;\n                if (this.state === this.states[FINISHED]) {\n                  this.setState(PAUSED);\n                }\n                return {\n                  start: start,\n                  end: end\n                };\n              }\n              /**\n               * Get the playback position in seconds\n               *\n               * @return {number} The playback position in seconds\n               */\n            }, {\n              key: \"getPlayedTime\",\n              value: function getPlayedTime() {\n                return (this.ac.currentTime - this.lastPlay) * this.playbackRate;\n              }\n              /**\n               * Plays the loaded audio region.\n               *\n               * @param {number} start Start offset in seconds, relative to the beginning\n               * of a clip.\n               * @param {number} end When to stop relative to the beginning of a clip.\n               */\n            }, {\n              key: \"play\",\n              value: function play(start, end) {\n                if (!this.buffer) {\n                  return;\n                } // need to re-create source on each playback\n\n                this.createSource();\n                var adjustedTime = this.seekTo(start, end);\n                start = adjustedTime.start;\n                end = adjustedTime.end;\n                this.scheduledPause = end;\n                this.source.start(0, start);\n                this.resumeAudioContext();\n                this.setState(PLAYING);\n                this.fireEvent('play');\n              }\n              /**\n               * Pauses the loaded audio.\n               */\n            }, {\n              key: \"pause\",\n              value: function pause() {\n                this.scheduledPause = null;\n                this.startPosition += this.getPlayedTime();\n                try {\n                  this.source && this.source.stop(0);\n                } catch (err) {// Calling stop can throw the following 2 errors:\n                  // - RangeError (The value specified for when is negative.)\n                  // - InvalidStateNode (The node has not been started by calling start().)\n                  // We can safely ignore both errors, because:\n                  // - The range is surely correct\n                  // - The node might not have been started yet, in which case we just want to carry on without causing any trouble.\n                }\n                this.setState(PAUSED);\n                this.fireEvent('pause');\n              }\n              /**\n               * Returns the current time in seconds relative to the audio-clip's\n               * duration.\n               *\n               * @return {number} The current time in seconds\n               */\n            }, {\n              key: \"getCurrentTime\",\n              value: function getCurrentTime() {\n                return this.state.getCurrentTime.call(this);\n              }\n              /**\n               * Returns the current playback rate. (0=no playback, 1=normal playback)\n               *\n               * @return {number} The current playback rate\n               */\n            }, {\n              key: \"getPlaybackRate\",\n              value: function getPlaybackRate() {\n                return this.playbackRate;\n              }\n              /**\n               * Set the audio source playback rate.\n               *\n               * @param {number} value The playback rate to use\n               */\n            }, {\n              key: \"setPlaybackRate\",\n              value: function setPlaybackRate(value) {\n                this.playbackRate = value || 1;\n                this.source && this.source.playbackRate.setValueAtTime(this.playbackRate, this.ac.currentTime);\n              }\n              /**\n               * Set a point in seconds for playback to stop at.\n               *\n               * @param {number} end Position to end at\n               * @version 3.3.0\n               */\n            }, {\n              key: \"setPlayEnd\",\n              value: function setPlayEnd(end) {\n                this.scheduledPause = end;\n              }\n            }]);\n            return WebAudio;\n          }(util.Observer);\n          exports.default = WebAudio;\n          WebAudio.scriptBufferSize = 256;\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./node_modules/debounce/index.js\":\n        /*!****************************************!*\\\n          !*** ./node_modules/debounce/index.js ***!\n          \\****************************************/\n        /***/\n        function node_modulesDebounceIndexJs(module) {\n          /**\n           * Returns a function, that, as long as it continues to be invoked, will not\n           * be triggered. The function will be called after it stops being called for\n           * N milliseconds. If `immediate` is passed, trigger the function on the\n           * leading edge, instead of the trailing. The function also has a property 'clear' \n           * that is a function which will clear the timer to prevent previously scheduled executions. \n           *\n           * @source underscore.js\n           * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n           * @param {Function} function to wrap\n           * @param {Number} timeout in ms (`100`)\n           * @param {Boolean} whether to execute at the beginning (`false`)\n           * @api public\n           */\n          function debounce(func, wait, immediate) {\n            var timeout, args, context, timestamp, result;\n            if (null == wait) wait = 100;\n            function later() {\n              var last = Date.now() - timestamp;\n              if (last < wait && last >= 0) {\n                timeout = setTimeout(later, wait - last);\n              } else {\n                timeout = null;\n                if (!immediate) {\n                  result = func.apply(context, args);\n                  context = args = null;\n                }\n              }\n            }\n            ;\n            var debounced = function debounced() {\n              context = this;\n              args = arguments;\n              timestamp = Date.now();\n              var callNow = immediate && !timeout;\n              if (!timeout) timeout = setTimeout(later, wait);\n              if (callNow) {\n                result = func.apply(context, args);\n                context = args = null;\n              }\n              return result;\n            };\n            debounced.clear = function () {\n              if (timeout) {\n                clearTimeout(timeout);\n                timeout = null;\n              }\n            };\n            debounced.flush = function () {\n              if (timeout) {\n                result = func.apply(context, args);\n                context = args = null;\n                clearTimeout(timeout);\n                timeout = null;\n              }\n            };\n            return debounced;\n          }\n          ;\n\n          // Adds compatibility for ES modules\n          debounce.debounce = debounce;\n          module.exports = debounce;\n\n          /***/\n        }\n\n        /******/\n      };\n      /************************************************************************/\n      /******/ // The module cache\n      /******/\n      var __webpack_module_cache__ = {};\n      /******/\n      /******/ // The require function\n      /******/\n      function __webpack_require__(moduleId) {\n        /******/ // Check if module is in cache\n        /******/var cachedModule = __webpack_module_cache__[moduleId];\n        /******/\n        if (cachedModule !== undefined) {\n          /******/return cachedModule.exports;\n          /******/\n        }\n        /******/ // Create a new module (and put it into the cache)\n        /******/\n        var module = __webpack_module_cache__[moduleId] = {\n          /******/ // no module.id needed\n          /******/ // no module.loaded needed\n          /******/exports: {}\n          /******/\n        };\n        /******/\n        /******/ // Execute the module function\n        /******/\n        __webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n        /******/\n        /******/ // Return the exports of the module\n        /******/\n        return module.exports;\n        /******/\n      }\n      /******/\n      /************************************************************************/\n      /******/\n      /******/ // startup\n      /******/ // Load entry module and return exports\n      /******/ // This entry module is referenced by other modules so it can't be inlined\n      /******/\n      var __webpack_exports__ = __webpack_require__(\"./src/wavesurfer.js\");\n      /******/\n      /******/\n      return __webpack_exports__;\n      /******/\n    }()\n  );\n});","map":{"version":3,"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","self","_style","_interopRequireDefault","__webpack_require__","_getId","CanvasEntry","_classCallCheck","wave","waveCtx","progress","progressCtx","start","end","id","default","constructor","name","toLowerCase","canvasContextAttributes","initWave","element","getContext","initProgress","updateDimensions","elementWidth","totalWidth","width","height","offsetLeft","elementSize","hasProgressCanvas","clearWave","clearRect","canvas","setFillStyles","waveColor","progressColor","fillStyle","applyCanvasTransforms","vertical","setTransform","fillRects","x","y","radius","fillRectToContext","ctx","drawRoundedRect","fillRect","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","fill","drawLines","peaks","absmax","halfH","offsetY","drawLineToContext","length","first","Math","round","last","canvasStart","canvasEnd","scale","halfOffset","absmaxHalf","i","peak","h","halfPixel","j","destroy","getImage","format","quality","type","_this","Promise","resolve","toBlob","toDataURL","util","_interopRequireWildcard","Drawer","_util$Observer","container","params","_super","call","withOrientation","pixelRatio","lastPos","wrapper","style","el","styles","createWrapper","appendChild","document","createElement","display","position","userSelect","webkitUserSelect","fillParent","scrollParent","overflowX","hideScrollbar","overflowY","setupWrapperEvents","handleEvent","e","noPrevent","preventDefault","clientX","targetTouches","bbox","getBoundingClientRect","nominalWidth","parentWidth","getWidth","progressPixels","getProgressPixels","scrollLeft","scrollWidth","clamp","wrapperBbox","rtl","right","left","_this2","addEventListener","orientedEvent","scrollbarHeight","offsetHeight","clientHeight","clientY","bottom","interact","fireEvent","drawPeaks","setWidth","barWidth","drawBars","drawWave","resetScroll","recenter","percent","recenterOnPosition","immediate","half","clientWidth","maxScroll","target","offset","rate","autoCenterRate","max","min","getScrollX","newWidth","updateSize","setHeight","_progress","minPxDelta","pos","autoCenter","newPos","autoCenterImmediately","updateProgress","unAll","parentNode","domElement","removeChild","updateCursor","channelIndex","Observer","_drawer","_drawer2","MultiCanvas","_Drawer","maxCanvasWidth","maxCanvasElementWidth","canvases","progressWave","EntryClass","drawingContextAttributes","overlap","ceil","barRadius","init","createElements","zIndex","top","overflow","boxSizing","borderRightStyle","pointerEvents","addCanvas","borderRightWidth","cursorWidth","borderRightColor","cursorColor","requiredCanvases","removeCanvas","canvasWidth","lastCanvas","forEach","entry","leftOffset","push","lastEntry","parentElement","pop","_this3","frame","_this4","prepareDraw","_ref","hasMinVals","ch","undefined","peakIndexScale","bar","gap","barGap","step","floor","barMinHeight","_this5","_ref2","reflectedPeaks","len","drawLine","_this6","_ref3","splitChannelsOptions","channelColors","startCanvas","endCanvas","intersection","x1","y1","x2","y2","_ref4","hideChannel","splitChannels","filterChannels","includes","fn","drawIndex","normalizedMax","_this7","Array","channels","filteredChannels","filter","c","overlay","overallAbsMax","relativeNormalization","map","channelPeaks","absMax","indexOf","barHeight","normalize","some","val","arguments","all","images","_mediaelement","MediaElementWebAudio","_MediaElement","sourceMediaElement","setPlaybackRate","audioRate","createTimer","createVolumeNode","createScriptNode","createAnalyserNode","_load","media","preload","_get","_getPrototypeOf","prototype","createMediaElementSource","mediaElement","ac","connect","analyser","play","resumeAudioContext","destroyWebAudio","_webaudio","MediaElement","_WebAudio","currentTime","duration","paused","playbackRate","pause","volume","mediaType","elementPosition","isMuted","buffer","onPlayEnd","mediaListeners","_setupMediaListeners","error","canplay","ended","seeked","event","volumechange","muted","Object","keys","removeEventListener","onAudioProcess","isPaused","getCurrentTime","on","load","url","controls","mediaControls","autoplay","src","prevMedia","querySelector","loadElt","elt","HTMLMediaElement","Error","setVolume","getDuration","explicitDuration","Infinity","seekable","getPlayedPercents","getPlaybackRate","value","seekTo","clearPlayEnd","promise","setPlayEnd","_onPlayEnd","time","un","getPeaks","setSinkId","deviceId","reject","getVolume","setMute","destroyed","removeMediaElementOnDestroy","PeakCache","clearPeakCache","peakCacheRanges","peakCacheLength","addRangeToPeakCache","uncachedRanges","item","arr","concat","sort","a","b","uncachedRangePairs","getCacheRanges","peakCacheRangePairs","_max","_min","values","_observer","ProgressHandler","instance","contentLength","response","_reader","body","getReader","total","parseInt","loaded","controller","read","then","done","onProgress","lengthComputable","close","byteLength","enqueue","catch","fetchFile","options","fetchHeaders","Headers","fetchRequest","Request","AbortController","requestHeaders","header","append","key","responseType","fetchOptions","method","headers","mode","credentials","cache","redirect","referrer","signal","fetch","progressAvailable","get","Response","ReadableStream","errMsg","ok","arrayBuffer","json","blob","text","status","_requestAnimationFrame","func","_len","args","_key","apply","getId","prefix","random","toString","substring","_absMax","_frame","_debounce","_preventClick","_fetch","_clamp","_orientation","_silenceMode","largest","smallest","Number","_disabledEventEmissions","handlers","callback","splice","once","handler","setTimeout","setDisabledEventEmissions","eventNames","_isDisabledEventEmission","_len2","_key2","verticalPropMap","offsetTop","offsetWidth","mapProp","prop","hasOwnProperty","isProxy","Symbol","Proxy","obj","receiver","bind","set","preventClickHandler","stopPropagation","preventClick","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","ignoreSilenceMode","audioData","tmp","innerHTML","audioSilentMode","children","disableRemotePlayback","remove","_peakcache","_mediaelementWebaudio","PluginClass","ws","create","WaveSurfer","defaultParams","audioContext","audioScriptProcessor","backend","backgroundColor","dragSelection","desynchronized","forceDecode","loopSelection","mediaContainer","minPxPerSec","partialRender","devicePixelRatio","screen","deviceXDPI","logicalXDPI","plugins","renderer","responsive","skipLength","xhr","backends","WebAudio","assign","transform","setBackgroundColor","savedVolume","tmpEvents","currentRequest","arraybuffer","drawer","peakCache","supportsWebAudio","Backend","initialisedPluginList","isDestroyed","isReady","prevWidth","_onResize","debounce","_possibleConstructorReturn","_assertThisInitialized","registerPlugins","createDrawer","createBackend","createPeakCache","plugin","addPlugin","deferInit","initPlugin","getActivePlugins","staticProps","pluginStaticProp","Instance","observerPrototypeKeys","getOwnPropertyNames","destroyPlugin","destroyAllPlugins","drawBuffer","newVolume","setCurrentTime","seconds","playPause","isPlaying","skipBackward","skip","skipForward","seekAndCenter","_this8","isFinite","isWebAudioBackend","oldScrollParent","stop","toggleMute","mute","getMute","getFilters","filters","toggleScroll","toggleInteraction","getWaveColor","setWaveColor","color","getProgressColor","setProgressColor","getBackgroundColor","background","getCursorColor","setCursorColor","getHeight","setFilteredChannels","channelIndices","newRanges","zoom","pxPerSec","loadArrayBuffer","_this9","decodeArrayBuffer","data","loadDecodedBuffer","loadBlob","_this10","reader","FileReader","result","readAsArrayBuffer","empty","preloadIgnoreReasons","activeReasons","reason","console","warn","join","loadBuffer","loadMediaElement","_this11","action","getArrayBuffer","setPeaks","urlOrElt","_this12","err","_this13","_this14","request","percentComplete","exportPCM","accuracy","noWindow","blobJSON","Blob","JSON","stringify","objURL","URL","createObjectURL","open","revokeObjectURL","exportImage","cancelAjax","cancel","abort","clearTmpEvents","disconnectSource","wavesurfer","VERSION","PLAYING","PAUSED","FINISHED","_this$stateBehaviors","_this$states","offlineAudioContext","stateBehaviors","_defineProperty","addOnAudioProcess","startPosition","getPlayedTime","removeOnAudioProcess","getAudioContext","lastPlay","scheduledPause","states","gainNode","mergedPeaks","offlineAc","scriptNode","source","splitPeaks","state","AudioContext","webkitAudioContext","WaveSurferAudioContext","getOfflineAudioContext","sampleRate","WaveSurferOfflineAudioContext","OfflineAudioContext","webkitOfflineAudioContext","setState","setLength","disconnectFilters","disconnect","setFilter","setFilters","reduce","prev","curr","createScriptProcessor","scriptBufferSize","createJavaScriptNode","destination","onaudioprocess","createAnalyser","createGain","createGainNode","audio","Audio","dest","createMediaStreamDestination","srcObject","stream","gain","setValueAtTime","errback","decodeAudioData","numberOfChannels","newBuffer","createBuffer","sampleSize","sampleStep","chan","getChannelData","closeAudioContext","createSource","createBufferSource","noteGrainOn","noteOff","resume","adjustedTime","wait","timeout","context","timestamp","later","Date","now","debounced","callNow","clear","clearTimeout","flush","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","__webpack_exports__"],"sources":["webpack://WaveSurfer/webpack/universalModuleDefinition","webpack://WaveSurfer/src/drawer.canvasentry.js","webpack://WaveSurfer/src/drawer.js","webpack://WaveSurfer/src/drawer.multicanvas.js","webpack://WaveSurfer/src/mediaelement-webaudio.js","webpack://WaveSurfer/src/mediaelement.js","webpack://WaveSurfer/src/peakcache.js","webpack://WaveSurfer/src/util/absMax.js","webpack://WaveSurfer/src/util/clamp.js","webpack://WaveSurfer/src/util/fetch.js","webpack://WaveSurfer/src/util/frame.js","webpack://WaveSurfer/src/util/get-id.js","webpack://WaveSurfer/src/util/index.js","webpack://WaveSurfer/src/util/max.js","webpack://WaveSurfer/src/util/min.js","webpack://WaveSurfer/src/util/observer.js","webpack://WaveSurfer/src/util/orientation.js","webpack://WaveSurfer/src/util/prevent-click.js","webpack://WaveSurfer/src/util/request-animation-frame.js","webpack://WaveSurfer/src/util/silence-mode.js","webpack://WaveSurfer/src/util/style.js","webpack://WaveSurfer/src/wavesurfer.js","webpack://WaveSurfer/src/webaudio.js","webpack://WaveSurfer/node_modules/debounce/index.js","webpack://WaveSurfer/webpack/bootstrap","webpack://WaveSurfer/webpack/before-startup","webpack://WaveSurfer/webpack/startup","webpack://WaveSurfer/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = factory();\n})(self, function() {\nreturn ","/**\n * @since 3.0.0\n */\n\nimport style from './util/style';\nimport getId from './util/get-id';\n\n/**\n * The `CanvasEntry` class represents an element consisting of a wave `canvas`\n * and an (optional) progress wave `canvas`.\n *\n * The `MultiCanvas` renderer uses one or more `CanvasEntry` instances to\n * render a waveform, depending on the zoom level.\n */\nexport default class CanvasEntry {\n    constructor() {\n        /**\n         * The wave node\n         *\n         * @type {HTMLCanvasElement}\n         */\n        this.wave = null;\n        /**\n         * The wave canvas rendering context\n         *\n         * @type {CanvasRenderingContext2D}\n         */\n        this.waveCtx = null;\n        /**\n         * The (optional) progress wave node\n         *\n         * @type {HTMLCanvasElement}\n         */\n        this.progress = null;\n        /**\n         * The (optional) progress wave canvas rendering context\n         *\n         * @type {CanvasRenderingContext2D}\n         */\n        this.progressCtx = null;\n        /**\n         * Start of the area the canvas should render, between 0 and 1\n         *\n         * @type {number}\n         */\n        this.start = 0;\n        /**\n         * End of the area the canvas should render, between 0 and 1\n         *\n         * @type {number}\n         */\n        this.end = 1;\n        /**\n         * Unique identifier for this entry\n         *\n         * @type {string}\n         */\n        this.id = getId(\n            typeof this.constructor.name !== 'undefined'\n                ? this.constructor.name.toLowerCase() + '_'\n                : 'canvasentry_'\n        );\n        /**\n         * Canvas 2d context attributes\n         *\n         * @type {object}\n         */\n        this.canvasContextAttributes = {};\n    }\n\n    /**\n     * Store the wave canvas element and create the 2D rendering context\n     *\n     * @param {HTMLCanvasElement} element The wave `canvas` element.\n     */\n    initWave(element) {\n        this.wave = element;\n        this.waveCtx = this.wave.getContext('2d', this.canvasContextAttributes);\n    }\n\n    /**\n     * Store the progress wave canvas element and create the 2D rendering\n     * context\n     *\n     * @param {HTMLCanvasElement} element The progress wave `canvas` element.\n     */\n    initProgress(element) {\n        this.progress = element;\n        this.progressCtx = this.progress.getContext(\n            '2d',\n            this.canvasContextAttributes\n        );\n    }\n\n    /**\n     * Update the dimensions\n     *\n     * @param {number} elementWidth Width of the entry\n     * @param {number} totalWidth Total width of the multi canvas renderer\n     * @param {number} width The new width of the element\n     * @param {number} height The new height of the element\n     */\n    updateDimensions(elementWidth, totalWidth, width, height) {\n        // where the canvas starts and ends in the waveform, represented as a\n        // decimal between 0 and 1\n        this.start = this.wave.offsetLeft / totalWidth || 0;\n        this.end = this.start + elementWidth / totalWidth;\n\n        // set wave canvas dimensions\n        this.wave.width = width;\n        this.wave.height = height;\n        let elementSize = { width: elementWidth + 'px' };\n        style(this.wave, elementSize);\n\n        if (this.hasProgressCanvas) {\n            // set progress canvas dimensions\n            this.progress.width = width;\n            this.progress.height = height;\n            style(this.progress, elementSize);\n        }\n    }\n\n    /**\n     * Clear the wave and progress rendering contexts\n     */\n    clearWave() {\n        // wave\n        this.waveCtx.clearRect(\n            0,\n            0,\n            this.waveCtx.canvas.width,\n            this.waveCtx.canvas.height\n        );\n\n        // progress\n        if (this.hasProgressCanvas) {\n            this.progressCtx.clearRect(\n                0,\n                0,\n                this.progressCtx.canvas.width,\n                this.progressCtx.canvas.height\n            );\n        }\n    }\n\n    /**\n     * Set the fill styles for wave and progress\n     *\n     * @param {string} waveColor Fill color for the wave canvas\n     * @param {?string} progressColor Fill color for the progress canvas\n     */\n    setFillStyles(waveColor, progressColor) {\n        this.waveCtx.fillStyle = waveColor;\n\n        if (this.hasProgressCanvas) {\n            this.progressCtx.fillStyle = progressColor;\n        }\n    }\n\n    /**\n     * Set the canvas transforms for wave and progress\n     *\n     * @param {boolean} vertical Whether to render vertically\n     */\n    applyCanvasTransforms(vertical) {\n        if (vertical) {\n            // Reflect the waveform across the line y = -x\n            this.waveCtx.setTransform(0, 1, 1, 0, 0, 0);\n\n            if (this.hasProgressCanvas) {\n                this.progressCtx.setTransform(0, 1, 1, 0, 0, 0);\n            }\n        }\n    }\n\n    /**\n     * Draw a rectangle for wave and progress\n     *\n     * @param {number} x X start position\n     * @param {number} y Y start position\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     */\n    fillRects(x, y, width, height, radius) {\n        this.fillRectToContext(this.waveCtx, x, y, width, height, radius);\n\n        if (this.hasProgressCanvas) {\n            this.fillRectToContext(\n                this.progressCtx,\n                x,\n                y,\n                width,\n                height,\n                radius\n            );\n        }\n    }\n\n    /**\n     * Draw the actual rectangle on a `canvas` element\n     *\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n     * @param {number} x X start position\n     * @param {number} y Y start position\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     */\n    fillRectToContext(ctx, x, y, width, height, radius) {\n        if (!ctx) {\n            return;\n        }\n\n        if (radius) {\n            this.drawRoundedRect(ctx, x, y, width, height, radius);\n        } else {\n            ctx.fillRect(x, y, width, height);\n        }\n    }\n\n    /**\n     * Draw a rounded rectangle on Canvas\n     *\n     * @param {CanvasRenderingContext2D} ctx Canvas context\n     * @param {number} x X-position of the rectangle\n     * @param {number} y Y-position of the rectangle\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     *\n     * @return {void}\n     * @example drawRoundedRect(ctx, 50, 50, 5, 10, 3)\n     */\n    drawRoundedRect(ctx, x, y, width, height, radius) {\n        if (height === 0) {\n            return;\n        }\n        // peaks are float values from -1 to 1. Use absolute height values in\n        // order to correctly calculate rounded rectangle coordinates\n        if (height < 0) {\n            height *= -1;\n            y -= height;\n        }\n        ctx.beginPath();\n        ctx.moveTo(x + radius, y);\n        ctx.lineTo(x + width - radius, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n        ctx.lineTo(x + width, y + height - radius);\n        ctx.quadraticCurveTo(\n            x + width,\n            y + height,\n            x + width - radius,\n            y + height\n        );\n        ctx.lineTo(x + radius, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n        ctx.lineTo(x, y + radius);\n        ctx.quadraticCurveTo(x, y, x + radius, y);\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    /**\n     * Render the actual wave and progress lines\n     *\n     * @param {number[]} peaks Array with peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLines(peaks, absmax, halfH, offsetY, start, end) {\n        this.drawLineToContext(\n            this.waveCtx,\n            peaks,\n            absmax,\n            halfH,\n            offsetY,\n            start,\n            end\n        );\n\n        if (this.hasProgressCanvas) {\n            this.drawLineToContext(\n                this.progressCtx,\n                peaks,\n                absmax,\n                halfH,\n                offsetY,\n                start,\n                end\n            );\n        }\n    }\n\n    /**\n     * Render the actual waveform line on a `canvas` element\n     *\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n     * @param {number[]} peaks Array with peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLineToContext(ctx, peaks, absmax, halfH, offsetY, start, end) {\n        if (!ctx) {\n            return;\n        }\n\n        const length = peaks.length / 2;\n        const first = Math.round(length * this.start);\n\n        // use one more peak value to make sure we join peaks at ends -- unless,\n        // of course, this is the last canvas\n        const last = Math.round(length * this.end) + 1;\n\n        const canvasStart = first;\n        const canvasEnd = last;\n        const scale = this.wave.width / (canvasEnd - canvasStart - 1);\n\n        // optimization\n        const halfOffset = halfH + offsetY;\n        const absmaxHalf = absmax / halfH;\n\n        ctx.beginPath();\n        ctx.moveTo((canvasStart - first) * scale, halfOffset);\n\n        ctx.lineTo(\n            (canvasStart - first) * scale,\n            halfOffset - Math.round((peaks[2 * canvasStart] || 0) / absmaxHalf)\n        );\n\n        let i, peak, h;\n        for (i = canvasStart; i < canvasEnd; i++) {\n            peak = peaks[2 * i] || 0;\n            h = Math.round(peak / absmaxHalf);\n            ctx.lineTo((i - first) * scale + this.halfPixel, halfOffset - h);\n        }\n\n        // draw the bottom edge going backwards, to make a single\n        // closed hull to fill\n        let j = canvasEnd - 1;\n        for (j; j >= canvasStart; j--) {\n            peak = peaks[2 * j + 1] || 0;\n            h = Math.round(peak / absmaxHalf);\n            ctx.lineTo((j - first) * scale + this.halfPixel, halfOffset - h);\n        }\n\n        ctx.lineTo(\n            (canvasStart - first) * scale,\n            halfOffset -\n                Math.round((peaks[2 * canvasStart + 1] || 0) / absmaxHalf)\n        );\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    /**\n     * Destroys this entry\n     */\n    destroy() {\n        this.waveCtx = null;\n        this.wave = null;\n\n        this.progressCtx = null;\n        this.progress = null;\n    }\n\n    /**\n     * Return image data of the wave `canvas` element\n     *\n     * When using a `type` of `'blob'`, this will return a `Promise` that\n     * resolves with a `Blob` instance.\n     *\n     * @param {string} format='image/png' An optional value of a format type.\n     * @param {number} quality=0.92 An optional value between 0 and 1.\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\n     * @return {string|Promise} When using the default `'dataURL'` `type` this\n     * returns a data URL. When using the `'blob'` `type` this returns a\n     * `Promise` that resolves with a `Blob` instance.\n     */\n    getImage(format, quality, type) {\n        if (type === 'blob') {\n            return new Promise(resolve => {\n                this.wave.toBlob(resolve, format, quality);\n            });\n        } else if (type === 'dataURL') {\n            return this.wave.toDataURL(format, quality);\n        }\n    }\n}\n","import * as util from './util';\n\n/**\n * Parent class for renderers\n *\n * @extends {Observer}\n */\nexport default class Drawer extends util.Observer {\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    constructor(container, params) {\n        super();\n\n        this.container = util.withOrientation(container, params.vertical);\n        /**\n         * @type {WavesurferParams}\n         */\n        this.params = params;\n        /**\n         * The width of the renderer\n         * @type {number}\n         */\n        this.width = 0;\n        /**\n         * The height of the renderer\n         * @type {number}\n         */\n        this.height = params.height * this.params.pixelRatio;\n\n        this.lastPos = 0;\n        /**\n         * The `<wave>` element which is added to the container\n         * @type {HTMLElement}\n         */\n        this.wrapper = null;\n    }\n\n    /**\n     * Alias of `util.style`\n     *\n     * @param {HTMLElement} el The element that the styles will be applied to\n     * @param {Object} styles The map of propName: attribute, both are used as-is\n     * @return {HTMLElement} el\n     */\n    style(el, styles) {\n        return util.style(el, styles);\n    }\n\n    /**\n     * Create the wrapper `<wave>` element, style it and set up the events for\n     * interaction\n     */\n    createWrapper() {\n        this.wrapper = util.withOrientation(\n            this.container.appendChild(document.createElement('wave')),\n            this.params.vertical\n        );\n\n        this.style(this.wrapper, {\n            display: 'block',\n            position: 'relative',\n            userSelect: 'none',\n            webkitUserSelect: 'none',\n            height: this.params.height + 'px'\n        });\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: '100%',\n                overflowX: this.params.hideScrollbar ? 'hidden' : 'auto',\n                overflowY: 'hidden'\n            });\n        }\n\n        this.setupWrapperEvents();\n    }\n\n    /**\n     * Handle click event\n     *\n     * @param {Event} e Click event\n     * @param {?boolean} noPrevent Set to true to not call `e.preventDefault()`\n     * @return {number} Playback position from 0 to 1\n     */\n    handleEvent(e, noPrevent) {\n        !noPrevent && e.preventDefault();\n\n        const clientX = util.withOrientation(\n            e.targetTouches ? e.targetTouches[0] : e,\n            this.params.vertical\n        ).clientX;\n        const bbox = this.wrapper.getBoundingClientRect();\n\n        const nominalWidth = this.width;\n        const parentWidth = this.getWidth();\n        const progressPixels = this.getProgressPixels(bbox, clientX);\n\n        let progress;\n        if (!this.params.fillParent && nominalWidth < parentWidth) {\n            progress = progressPixels *\n                (this.params.pixelRatio / nominalWidth) || 0;\n        } else {\n            progress = (progressPixels + this.wrapper.scrollLeft) /\n                this.wrapper.scrollWidth || 0;\n        }\n\n        return util.clamp(progress, 0, 1);\n    }\n\n    getProgressPixels(wrapperBbox, clientX) {\n        if (this.params.rtl) {\n            return wrapperBbox.right - clientX;\n        } else {\n            return clientX - wrapperBbox.left;\n        }\n    }\n\n    setupWrapperEvents() {\n        this.wrapper.addEventListener('click', e => {\n            const orientedEvent = util.withOrientation(e, this.params.vertical);\n            const scrollbarHeight = this.wrapper.offsetHeight -\n                  this.wrapper.clientHeight;\n\n            if (scrollbarHeight !== 0) {\n                // scrollbar is visible.  Check if click was on it\n                const bbox = this.wrapper.getBoundingClientRect();\n                if (orientedEvent.clientY >= bbox.bottom - scrollbarHeight) {\n                    // ignore mousedown as it was on the scrollbar\n                    return;\n                }\n            }\n\n            if (this.params.interact) {\n                this.fireEvent('click', e, this.handleEvent(e));\n            }\n        });\n\n        this.wrapper.addEventListener('dblclick', e => {\n            if (this.params.interact) {\n                this.fireEvent('dblclick', e, this.handleEvent(e));\n            }\n        });\n\n        this.wrapper.addEventListener('scroll', e =>\n            this.fireEvent('scroll', e)\n        );\n    }\n\n    /**\n     * Draw peaks on the canvas\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} length The width of the area that should be drawn\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawPeaks(peaks, length, start, end) {\n        if (!this.setWidth(length)) {\n            this.clearWave();\n        }\n\n        this.params.barWidth\n            ? this.drawBars(peaks, 0, start, end)\n            : this.drawWave(peaks, 0, start, end);\n    }\n\n    /**\n     * Scroll to the beginning\n     */\n    resetScroll() {\n        if (this.wrapper !== null) {\n            this.wrapper.scrollLeft = 0;\n        }\n    }\n\n    /**\n     * Recenter the view-port at a certain percent of the waveform\n     *\n     * @param {number} percent Value from 0 to 1 on the waveform\n     */\n    recenter(percent) {\n        const position = this.wrapper.scrollWidth * percent;\n        this.recenterOnPosition(position, true);\n    }\n\n    /**\n     * Recenter the view-port on a position, either scroll there immediately or\n     * in steps of 5 pixels\n     *\n     * @param {number} position X-offset in pixels\n     * @param {boolean} immediate Set to true to immediately scroll somewhere\n     */\n    recenterOnPosition(position, immediate) {\n        const scrollLeft = this.wrapper.scrollLeft;\n        const half = ~~(this.wrapper.clientWidth / 2);\n        const maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n        let target = position - half;\n        let offset = target - scrollLeft;\n\n        if (maxScroll == 0) {\n            // no need to continue if scrollbar is not there\n            return;\n        }\n\n        // if the cursor is currently visible...\n        if (!immediate && -half <= offset && offset < half) {\n            // set rate at which waveform is centered\n            let rate = this.params.autoCenterRate;\n\n            // make rate depend on width of view and length of waveform\n            rate /= half;\n            rate *= maxScroll;\n\n            offset = Math.max(-rate, Math.min(rate, offset));\n            target = scrollLeft + offset;\n        }\n\n        // limit target to valid range (0 to maxScroll)\n        target = Math.max(0, Math.min(maxScroll, target));\n        // no use attempting to scroll if we're not moving\n        if (target != scrollLeft) {\n            this.wrapper.scrollLeft = target;\n        }\n    }\n\n    /**\n     * Get the current scroll position in pixels\n     *\n     * @return {number} Horizontal scroll position in pixels\n     */\n    getScrollX() {\n        let x = 0;\n        if (this.wrapper) {\n            const pixelRatio = this.params.pixelRatio;\n            x = Math.round(this.wrapper.scrollLeft * pixelRatio);\n\n            // In cases of elastic scroll (safari with mouse wheel) you can\n            // scroll beyond the limits of the container\n            // Calculate and floor the scrollable extent to make sure an out\n            // of bounds value is not returned\n            // Ticket #1312\n            if (this.params.scrollParent) {\n                const maxScroll = ~~(\n                    this.wrapper.scrollWidth * pixelRatio -\n                    this.getWidth()\n                );\n                x = Math.min(maxScroll, Math.max(0, x));\n            }\n        }\n        return x;\n    }\n\n    /**\n     * Get the width of the container\n     *\n     * @return {number} The width of the container\n     */\n    getWidth() {\n        return Math.round(this.container.clientWidth * this.params.pixelRatio);\n    }\n\n    /**\n     * Set the width of the container\n     *\n     * @param {number} width The new width of the container\n     * @return {boolean} Whether the width of the container was updated or not\n     */\n    setWidth(width) {\n        if (this.width == width) {\n            return false;\n        }\n\n        this.width = width;\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: ''\n            });\n        } else {\n            const newWidth = ~~(this.width / this.params.pixelRatio) + 'px';\n            this.style(this.wrapper, {\n                width: newWidth\n            });\n        }\n\n        this.updateSize();\n        return true;\n    }\n\n    /**\n     * Set the height of the container\n     *\n     * @param {number} height The new height of the container.\n     * @return {boolean} Whether the height of the container was updated or not\n     */\n    setHeight(height) {\n        if (height == this.height) {\n            return false;\n        }\n        this.height = height;\n\n        this.style(this.wrapper, {\n            height: ~~(this.height / this.params.pixelRatio) + 'px'\n        });\n\n        this.updateSize();\n        return true;\n    }\n\n    /**\n     * Called by wavesurfer when progress should be rendered\n     *\n     * @param {number} progress From 0 to 1\n     */\n    progress(progress) {\n        const minPxDelta = 1 / this.params.pixelRatio;\n        const pos = Math.round(progress * this.width) * minPxDelta;\n\n        if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\n            this.lastPos = pos;\n\n            if (this.params.scrollParent && this.params.autoCenter) {\n                const newPos = ~~(this.wrapper.scrollWidth * progress);\n                this.recenterOnPosition(\n                    newPos,\n                    this.params.autoCenterImmediately\n                );\n            }\n\n            this.updateProgress(pos);\n        }\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n    destroy() {\n        this.unAll();\n        if (this.wrapper) {\n            if (this.wrapper.parentNode == this.container.domElement) {\n                this.container.removeChild(this.wrapper.domElement);\n            }\n            this.wrapper = null;\n        }\n    }\n\n    /* Renderer-specific methods */\n\n    /**\n     * Called after cursor related params have changed.\n     *\n     * @abstract\n     */\n    updateCursor() {}\n\n    /**\n     * Called when the size of the container changes so the renderer can adjust\n     *\n     * @abstract\n     */\n    updateSize() {}\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @abstract\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawBars(peaks, channelIndex, start, end) {}\n\n    /**\n     * Draw a waveform\n     *\n     * @abstract\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawWave(peaks, channelIndex, start, end) {}\n\n    /**\n     * Clear the waveform\n     *\n     * @abstract\n     */\n    clearWave() {}\n\n    /**\n     * Render the new progress\n     *\n     * @abstract\n     * @param {number} position X-Offset of progress position in pixels\n     */\n    updateProgress(position) {}\n}\n","import Drawer from './drawer';\nimport * as util from './util';\nimport CanvasEntry from './drawer.canvasentry';\n\n/**\n * MultiCanvas renderer for wavesurfer. Is currently the default and sole\n * builtin renderer.\n *\n * A `MultiCanvas` consists of one or more `CanvasEntry` instances, depending\n * on the zoom level.\n */\nexport default class MultiCanvas extends Drawer {\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    constructor(container, params) {\n        super(container, params);\n\n        /**\n         * @type {number}\n         */\n        this.maxCanvasWidth = params.maxCanvasWidth;\n\n        /**\n         * @type {number}\n         */\n        this.maxCanvasElementWidth = Math.round(\n            params.maxCanvasWidth / params.pixelRatio\n        );\n\n        /**\n         * Whether or not the progress wave is rendered. If the `waveColor`\n         * and `progressColor` are the same color it is not.\n         *\n         * @type {boolean}\n         */\n        this.hasProgressCanvas = params.waveColor != params.progressColor;\n\n        /**\n         * @type {number}\n         */\n        this.halfPixel = 0.5 / params.pixelRatio;\n\n        /**\n         * List of `CanvasEntry` instances.\n         *\n         * @type {Array}\n         */\n        this.canvases = [];\n\n        /**\n         * @type {HTMLElement}\n         */\n        this.progressWave = null;\n\n        /**\n         * Class used to generate entries.\n         *\n         * @type {function}\n         */\n        this.EntryClass = CanvasEntry;\n\n        /**\n         * Canvas 2d context attributes.\n         *\n         * @type {object}\n         */\n        this.canvasContextAttributes = params.drawingContextAttributes;\n\n        /**\n         * Overlap added between entries to prevent vertical white stripes\n         * between `canvas` elements.\n         *\n         * @type {number}\n         */\n        this.overlap = 2 * Math.ceil(params.pixelRatio / 2);\n\n        /**\n         * The radius of the wave bars. Makes bars rounded\n         *\n         * @type {number}\n         */\n        this.barRadius = params.barRadius || 0;\n\n        /**\n         * Whether to render the waveform vertically. Defaults to false.\n         *\n         * @type {boolean}\n         */\n        this.vertical = params.vertical;\n    }\n\n    /**\n     * Initialize the drawer\n     */\n    init() {\n        this.createWrapper();\n        this.createElements();\n    }\n\n    /**\n     * Create the canvas elements and style them\n     *\n     */\n    createElements() {\n        this.progressWave = util.withOrientation(\n            this.wrapper.appendChild(document.createElement('wave')),\n            this.params.vertical\n        );\n        this.style(this.progressWave, {\n            position: 'absolute',\n            zIndex: 3,\n            left: 0,\n            top: 0,\n            bottom: 0,\n            overflow: 'hidden',\n            width: '0',\n            display: 'none',\n            boxSizing: 'border-box',\n            borderRightStyle: 'solid',\n            pointerEvents: 'none'\n        });\n\n        this.addCanvas();\n        this.updateCursor();\n    }\n\n    /**\n     * Update cursor style\n     */\n    updateCursor() {\n        this.style(this.progressWave, {\n            borderRightWidth: this.params.cursorWidth + 'px',\n            borderRightColor: this.params.cursorColor\n        });\n    }\n\n    /**\n     * Adjust to the updated size by adding or removing canvases\n     */\n    updateSize() {\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\n        const requiredCanvases = Math.ceil(\n            totalWidth / (this.maxCanvasElementWidth + this.overlap)\n        );\n\n        // add required canvases\n        while (this.canvases.length < requiredCanvases) {\n            this.addCanvas();\n        }\n\n        // remove older existing canvases, if any\n        while (this.canvases.length > requiredCanvases) {\n            this.removeCanvas();\n        }\n\n        let canvasWidth = this.maxCanvasWidth + this.overlap;\n        const lastCanvas = this.canvases.length - 1;\n        this.canvases.forEach((entry, i) => {\n            if (i == lastCanvas) {\n                canvasWidth = this.width - this.maxCanvasWidth * lastCanvas;\n            }\n            this.updateDimensions(entry, canvasWidth, this.height);\n\n            entry.clearWave();\n        });\n    }\n\n    /**\n     * Add a canvas to the canvas list\n     *\n     */\n    addCanvas() {\n        const entry = new this.EntryClass();\n        entry.canvasContextAttributes = this.canvasContextAttributes;\n        entry.hasProgressCanvas = this.hasProgressCanvas;\n        entry.halfPixel = this.halfPixel;\n        const leftOffset = this.maxCanvasElementWidth * this.canvases.length;\n\n        // wave\n        let wave = util.withOrientation(\n            this.wrapper.appendChild(document.createElement('canvas')),\n            this.params.vertical\n        );\n        this.style(wave, {\n            position: 'absolute',\n            zIndex: 2,\n            left: leftOffset + 'px',\n            top: 0,\n            bottom: 0,\n            height: '100%',\n            pointerEvents: 'none'\n        });\n        entry.initWave(wave);\n\n        // progress\n        if (this.hasProgressCanvas) {\n            let progress = util.withOrientation(\n                this.progressWave.appendChild(document.createElement('canvas')),\n                this.params.vertical\n            );\n            this.style(progress, {\n                position: 'absolute',\n                left: leftOffset + 'px',\n                top: 0,\n                bottom: 0,\n                height: '100%'\n            });\n            entry.initProgress(progress);\n        }\n\n        this.canvases.push(entry);\n    }\n\n    /**\n     * Pop single canvas from the list\n     *\n     */\n    removeCanvas() {\n        let lastEntry = this.canvases[this.canvases.length - 1];\n\n        // wave\n        lastEntry.wave.parentElement.removeChild(lastEntry.wave.domElement);\n\n        // progress\n        if (this.hasProgressCanvas) {\n            lastEntry.progress.parentElement.removeChild(lastEntry.progress.domElement);\n        }\n\n        // cleanup\n        if (lastEntry) {\n            lastEntry.destroy();\n            lastEntry = null;\n        }\n\n        this.canvases.pop();\n    }\n\n    /**\n     * Update the dimensions of a canvas element\n     *\n     * @param {CanvasEntry} entry Target entry\n     * @param {number} width The new width of the element\n     * @param {number} height The new height of the element\n     */\n    updateDimensions(entry, width, height) {\n        const elementWidth = Math.round(width / this.params.pixelRatio);\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\n\n        // update canvas dimensions\n        entry.updateDimensions(elementWidth, totalWidth, width, height);\n\n        // style element\n        this.style(this.progressWave, { display: 'block' });\n    }\n\n    /**\n     * Clear the whole multi-canvas\n     */\n    clearWave() {\n        util.frame(() => {\n            this.canvases.forEach(entry => entry.clearWave());\n        })();\n    }\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0. Must be an integer.\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     * @returns {void}\n     */\n    drawBars(peaks, channelIndex, start, end) {\n        return this.prepareDraw(\n            peaks,\n            channelIndex,\n            start,\n            end,\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks, channelIndex: ch }) => {\n                // if drawBars was called within ws.empty we don't pass a start and\n                // don't want anything to happen\n                if (start === undefined) {\n                    return;\n                }\n                // Skip every other value if there are negatives.\n                const peakIndexScale = hasMinVals ? 2 : 1;\n                const length = peaks.length / peakIndexScale;\n                const bar = this.params.barWidth * this.params.pixelRatio;\n                const gap =\n                    this.params.barGap === null\n                        ? Math.max(this.params.pixelRatio, ~~(bar / 2))\n                        : Math.max(\n                            this.params.pixelRatio,\n                            this.params.barGap * this.params.pixelRatio\n                        );\n                const step = bar + gap;\n\n                const scale = length / this.width;\n                const first = start;\n                const last = end;\n                let i = first;\n\n                for (i; i < last; i += step) {\n                    const peak =\n                        peaks[Math.floor(i * scale * peakIndexScale)] || 0;\n                    let h = Math.round((peak / absmax) * halfH);\n\n                    /* in case of silences, allow the user to specify that we\n                     * always draw *something* (normally a 1px high bar) */\n                    if (h == 0 && this.params.barMinHeight) {\n                        h = this.params.barMinHeight;\n                    }\n\n                    this.fillRect(\n                        i + this.halfPixel,\n                        halfH - h + offsetY,\n                        bar + this.halfPixel,\n                        h * 2,\n                        this.barRadius,\n                        ch\n                    );\n                }\n            }\n        );\n    }\n\n    /**\n     * Draw a waveform\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number?} start The x-offset of the beginning of the area that\n     * should be rendered (If this isn't set only a flat line is rendered)\n     * @param {number?} end The x-offset of the end of the area that should be\n     * rendered\n     * @returns {void}\n     */\n    drawWave(peaks, channelIndex, start, end) {\n        return this.prepareDraw(\n            peaks,\n            channelIndex,\n            start,\n            end,\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks, channelIndex }) => {\n                if (!hasMinVals) {\n                    const reflectedPeaks = [];\n                    const len = peaks.length;\n                    let i = 0;\n                    for (i; i < len; i++) {\n                        reflectedPeaks[2 * i] = peaks[i];\n                        reflectedPeaks[2 * i + 1] = -peaks[i];\n                    }\n                    peaks = reflectedPeaks;\n                }\n\n                // if drawWave was called within ws.empty we don't pass a start and\n                // end and simply want a flat line\n                if (start !== undefined) {\n                    this.drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex);\n                }\n\n                // always draw a median line\n                this.fillRect(\n                    0,\n                    halfH + offsetY - this.halfPixel,\n                    this.width,\n                    this.halfPixel,\n                    this.barRadius,\n                    channelIndex\n                );\n            }\n        );\n    }\n\n    /**\n     * Tell the canvas entries to render their portion of the waveform\n     *\n     * @param {number[]} peaks Peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     * @param {channelIndex} channelIndex The channel index of the line drawn\n     */\n    drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex) {\n        const { waveColor, progressColor } = this.params.splitChannelsOptions.channelColors[channelIndex] || {};\n        this.canvases.forEach((entry, i) => {\n            this.setFillStyles(entry, waveColor, progressColor);\n            this.applyCanvasTransforms(entry, this.params.vertical);\n            entry.drawLines(peaks, absmax, halfH, offsetY, start, end);\n        });\n    }\n\n    /**\n     * Draw a rectangle on the multi-canvas\n     *\n     * @param {number} x X-position of the rectangle\n     * @param {number} y Y-position of the rectangle\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     * @param {channelIndex} channelIndex The channel index of the bar drawn\n     */\n    fillRect(x, y, width, height, radius, channelIndex) {\n        const startCanvas = Math.floor(x / this.maxCanvasWidth);\n        const endCanvas = Math.min(\n            Math.ceil((x + width) / this.maxCanvasWidth) + 1,\n            this.canvases.length\n        );\n        let i = startCanvas;\n        for (i; i < endCanvas; i++) {\n            const entry = this.canvases[i];\n            const leftOffset = i * this.maxCanvasWidth;\n\n            const intersection = {\n                x1: Math.max(x, i * this.maxCanvasWidth),\n                y1: y,\n                x2: Math.min(\n                    x + width,\n                    i * this.maxCanvasWidth + entry.wave.width\n                ),\n                y2: y + height\n            };\n\n            if (intersection.x1 < intersection.x2) {\n                const { waveColor, progressColor } = this.params.splitChannelsOptions.channelColors[channelIndex] || {};\n                this.setFillStyles(entry, waveColor, progressColor);\n                this.applyCanvasTransforms(entry, this.params.vertical);\n\n                entry.fillRects(\n                    intersection.x1 - leftOffset,\n                    intersection.y1,\n                    intersection.x2 - intersection.x1,\n                    intersection.y2 - intersection.y1,\n                    radius\n                );\n            }\n        }\n    }\n\n    /**\n     * Returns whether to hide the channel from being drawn based on params.\n     *\n     * @param {number} channelIndex The index of the current channel.\n     * @returns {bool} True to hide the channel, false to draw.\n     */\n    hideChannel(channelIndex) {\n        return this.params.splitChannels && this.params.splitChannelsOptions.filterChannels.includes(channelIndex);\n    }\n\n    /**\n     * Performs preparation tasks and calculations which are shared by `drawBars`\n     * and `drawWave`\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for\n     * split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number?} start The x-offset of the beginning of the area that\n     * should be rendered. If this isn't set only a flat line is rendered\n     * @param {number?} end The x-offset of the end of the area that should be\n     * rendered\n     * @param {function} fn The render function to call, e.g. `drawWave`\n     * @param {number} drawIndex The index of the current channel after filtering.\n     * @param {number?} normalizedMax Maximum modulation value across channels for use with relativeNormalization. Ignored when undefined\n     * @returns {void}\n     */\n    prepareDraw(peaks, channelIndex, start, end, fn, drawIndex, normalizedMax) {\n        return util.frame(() => {\n            // Split channels and call this function with the channelIndex set\n            if (peaks[0] instanceof Array) {\n                const channels = peaks;\n\n                if (this.params.splitChannels) {\n                    const filteredChannels = channels.filter((c, i) => !this.hideChannel(i));\n                    if (!this.params.splitChannelsOptions.overlay) {\n                        this.setHeight(\n                            Math.max(filteredChannels.length, 1) *\n                                this.params.height *\n                                this.params.pixelRatio\n                        );\n                    }\n\n                    let overallAbsMax;\n                    if (this.params.splitChannelsOptions && this.params.splitChannelsOptions.relativeNormalization) {\n                        // calculate maximum peak across channels to use for normalization\n                        overallAbsMax = util.max(channels.map((channelPeaks => util.absMax(channelPeaks))));\n                    }\n\n\n                    return channels.forEach((channelPeaks, i) =>\n                        this.prepareDraw(channelPeaks, i, start, end, fn, filteredChannels.indexOf(channelPeaks), overallAbsMax)\n                    );\n                }\n                peaks = channels[0];\n            }\n\n            // Return and do not draw channel peaks if hidden.\n            if (this.hideChannel(channelIndex)) {\n                return;\n            }\n\n            // calculate maximum modulation value, either from the barHeight\n            // parameter or if normalize=true from the largest value in the peak\n            // set\n            let absmax = 1 / this.params.barHeight;\n            if (this.params.normalize) {\n                absmax = normalizedMax === undefined ? util.absMax(peaks) : normalizedMax;\n            }\n\n            // Bar wave draws the bottom only as a reflection of the top,\n            // so we don't need negative values\n            const hasMinVals = [].some.call(peaks, val => val < 0);\n            const height = this.params.height * this.params.pixelRatio;\n            const halfH = height / 2;\n\n            let offsetY = height * drawIndex || 0;\n\n            // Override offsetY if overlay is true\n            if (this.params.splitChannelsOptions && this.params.splitChannelsOptions.overlay) {\n                offsetY = 0;\n            }\n\n            return fn({\n                absmax: absmax,\n                hasMinVals: hasMinVals,\n                height: height,\n                offsetY: offsetY,\n                halfH: halfH,\n                peaks: peaks,\n                channelIndex: channelIndex\n            });\n        })();\n    }\n\n    /**\n     * Set the fill styles for a certain entry (wave and progress)\n     *\n     * @param {CanvasEntry} entry Target entry\n     * @param {string} waveColor Wave color to draw this entry\n     * @param {string} progressColor Progress color to draw this entry\n     */\n    setFillStyles(entry, waveColor = this.params.waveColor, progressColor = this.params.progressColor) {\n        entry.setFillStyles(waveColor, progressColor);\n    }\n\n    /**\n     * Set the canvas transforms for a certain entry (wave and progress)\n     *\n     * @param {CanvasEntry} entry Target entry\n     * @param {boolean} vertical Whether to render the waveform vertically\n     */\n    applyCanvasTransforms(entry, vertical = false) {\n        entry.applyCanvasTransforms(vertical);\n    }\n\n    /**\n     * Return image data of the multi-canvas\n     *\n     * When using a `type` of `'blob'`, this will return a `Promise`.\n     *\n     * @param {string} format='image/png' An optional value of a format type.\n     * @param {number} quality=0.92 An optional value between 0 and 1.\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\n     * @return {string|string[]|Promise} When using the default `'dataURL'`\n     * `type` this returns a single data URL or an array of data URLs,\n     * one for each canvas. When using the `'blob'` `type` this returns a\n     * `Promise` that resolves with an array of `Blob` instances, one for each\n     * canvas.\n     */\n    getImage(format, quality, type) {\n        if (type === 'blob') {\n            return Promise.all(\n                this.canvases.map(entry => {\n                    return entry.getImage(format, quality, type);\n                })\n            );\n        } else if (type === 'dataURL') {\n            let images = this.canvases.map(entry =>\n                entry.getImage(format, quality, type)\n            );\n            return images.length > 1 ? images : images[0];\n        }\n    }\n\n    /**\n     * Render the new progress\n     *\n     * @param {number} position X-offset of progress position in pixels\n     */\n    updateProgress(position) {\n        this.style(this.progressWave, { width: position + 'px' });\n    }\n}\n","import MediaElement from './mediaelement';\n\n/**\n * MediaElementWebAudio backend: load audio via an HTML5 audio tag, but playback with the WebAudio API.\n * The advantage here is that the html5 <audio> tag can perform range requests on the server and not\n * buffer the entire file in one request, and you still get the filtering and scripting functionality\n * of the webaudio API.\n * Note that in order to use range requests and prevent buffering, you must provide peak data.\n *\n * @since 3.2.0\n */\nexport default class MediaElementWebAudio extends MediaElement {\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super(params);\n        /** @private */\n        this.params = params;\n        /** @private */\n        this.sourceMediaElement = null;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.setPlaybackRate(this.params.audioRate);\n        this.createTimer();\n        this.createVolumeNode();\n        this.createScriptNode();\n        this.createAnalyserNode();\n    }\n    /**\n     * Private method called by both `load` (from url)\n     * and `loadElt` (existing media element) methods.\n     *\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     * @private\n     */\n    _load(media, peaks, preload) {\n        super._load(media, peaks, preload);\n        this.createMediaElementSource(media);\n    }\n\n    /**\n     * Create MediaElementSource node\n     *\n     * @since 3.2.0\n     * @param {HTMLMediaElement} mediaElement HTML5 Audio to load\n     */\n    createMediaElementSource(mediaElement) {\n        this.sourceMediaElement = this.ac.createMediaElementSource(\n            mediaElement\n        );\n        this.sourceMediaElement.connect(this.analyser);\n    }\n\n    play(start, end) {\n        this.resumeAudioContext();\n        return super.play(start, end);\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     *\n     */\n    destroy() {\n        super.destroy();\n\n        this.destroyWebAudio();\n    }\n}\n","import WebAudio from './webaudio';\nimport * as util from './util';\n\n/**\n * MediaElement backend\n */\nexport default class MediaElement extends WebAudio {\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super(params);\n        /** @private */\n        this.params = params;\n\n        /**\n         * Initially a dummy media element to catch errors. Once `_load` is\n         * called, this will contain the actual `HTMLMediaElement`.\n         * @private\n         */\n        this.media = {\n            currentTime: 0,\n            duration: 0,\n            paused: true,\n            playbackRate: 1,\n            play() {},\n            pause() {},\n            volume: 0\n        };\n\n        /** @private */\n        this.mediaType = params.mediaType.toLowerCase();\n        /** @private */\n        this.elementPosition = params.elementPosition;\n        /** @private */\n        this.peaks = null;\n        /** @private */\n        this.playbackRate = 1;\n        /** @private */\n        this.volume = 1;\n        /** @private */\n        this.isMuted = false;\n        /** @private */\n        this.buffer = null;\n        /** @private */\n        this.onPlayEnd = null;\n        /** @private */\n        this.mediaListeners = {};\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.setPlaybackRate(this.params.audioRate);\n        this.createTimer();\n    }\n\n    /**\n     * Attach event listeners to media element.\n     */\n    _setupMediaListeners() {\n        this.mediaListeners.error = () => {\n            this.fireEvent('error', 'Error loading media element');\n        };\n        this.mediaListeners.canplay = () => {\n            this.fireEvent('canplay');\n        };\n        this.mediaListeners.ended = () => {\n            this.fireEvent('finish');\n        };\n        // listen to and relay play, pause and seeked events to enable\n        // playback control from the external media element\n        this.mediaListeners.play = () => {\n            this.fireEvent('play');\n        };\n        this.mediaListeners.pause = () => {\n            this.fireEvent('pause');\n        };\n        this.mediaListeners.seeked = event => {\n            this.fireEvent('seek');\n        };\n        this.mediaListeners.volumechange = event => {\n            this.isMuted = this.media.muted;\n            if (this.isMuted) {\n                this.volume = 0;\n            } else {\n                this.volume = this.media.volume;\n            }\n            this.fireEvent('volume');\n        };\n\n        // reset event listeners\n        Object.keys(this.mediaListeners).forEach(id => {\n            this.media.removeEventListener(id, this.mediaListeners[id]);\n            this.media.addEventListener(id, this.mediaListeners[id]);\n        });\n    }\n\n    /**\n     * Create a timer to provide a more precise `audioprocess` event.\n     */\n    createTimer() {\n        const onAudioProcess = () => {\n            if (this.isPaused()) {\n                return;\n            }\n            this.fireEvent('audioprocess', this.getCurrentTime());\n\n            // Call again in the next frame\n            util.frame(onAudioProcess)();\n        };\n\n        this.on('play', onAudioProcess);\n\n        // Update the progress one more time to prevent it from being stuck in\n        // case of lower framerates\n        this.on('pause', () => {\n            this.fireEvent('audioprocess', this.getCurrentTime());\n        });\n    }\n\n    /**\n     * Create media element with url as its source,\n     * and append to container element.\n     *\n     * @param {string} url Path to media file\n     * @param {HTMLElement} container HTML element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     * @throws Will throw an error if the `url` argument is not a valid media\n     * element.\n     */\n    load(url, container, peaks, preload) {\n        const media = document.createElement(this.mediaType);\n        media.controls = this.params.mediaControls;\n        media.autoplay = this.params.autoplay || false;\n        media.preload = preload == null ? 'auto' : preload;\n        media.src = url;\n        media.style.width = '100%';\n\n        const prevMedia = container.querySelector(this.mediaType);\n        if (prevMedia) {\n            container.removeChild(prevMedia);\n        }\n        container.appendChild(media);\n\n        this._load(media, peaks, preload);\n    }\n\n    /**\n     * Load existing media element.\n     *\n     * @param {HTMLMediaElement} elt HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     */\n    loadElt(elt, peaks) {\n        elt.controls = this.params.mediaControls;\n        elt.autoplay = this.params.autoplay || false;\n\n        this._load(elt, peaks, elt.preload);\n    }\n\n    /**\n     * Method called by both `load` (from url)\n     * and `loadElt` (existing media element) methods.\n     *\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     * @throws Will throw an error if the `media` argument is not a valid media\n     * element.\n     * @private\n     */\n    _load(media, peaks, preload) {\n        // verify media element is valid\n        if (\n            !(media instanceof HTMLMediaElement) ||\n            typeof media.addEventListener === 'undefined'\n        ) {\n            throw new Error('media parameter is not a valid media element');\n        }\n\n        // load must be called manually on iOS, otherwise peaks won't draw\n        // until a user interaction triggers load --> 'ready' event\n        //\n        // note that we avoid calling media.load here when given peaks and preload == 'none'\n        // as this almost always triggers some browser fetch of the media.\n        if (typeof media.load == 'function' && !(peaks && preload == 'none')) {\n            // Resets the media element and restarts the media resource. Any\n            // pending events are discarded. How much media data is fetched is\n            // still affected by the preload attribute.\n            media.load();\n        }\n\n        this.media = media;\n        this._setupMediaListeners();\n        this.peaks = peaks;\n        this.onPlayEnd = null;\n        this.buffer = null;\n        this.isMuted = media.muted;\n        this.setPlaybackRate(this.playbackRate);\n        this.setVolume(this.volume);\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean} Media paused or not\n     */\n    isPaused() {\n        return !this.media || this.media.paused;\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number} Duration\n     */\n    getDuration() {\n        if (this.explicitDuration) {\n            return this.explicitDuration;\n        }\n        let duration = (this.buffer || this.media).duration;\n        if (duration >= Infinity) {\n            // streaming audio\n            duration = this.media.seekable.end(0);\n        }\n        return duration;\n    }\n\n    /**\n     * Returns the current time in seconds relative to the audio-clip's\n     * duration.\n     *\n     * @return {number} Current time\n     */\n    getCurrentTime() {\n        return this.media && this.media.currentTime;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number} Current position\n     */\n    getPlayedPercents() {\n        return this.getCurrentTime() / this.getDuration() || 0;\n    }\n\n    /**\n     * Get the audio source playback rate.\n     *\n     * @return {number} Playback rate\n     */\n    getPlaybackRate() {\n        return this.playbackRate || this.media.playbackRate;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value Playback rate\n     */\n    setPlaybackRate(value) {\n        this.playbackRate = value || 1;\n        this.media.playbackRate = this.playbackRate;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     */\n    seekTo(start) {\n        if (start != null) {\n            this.media.currentTime = start;\n        }\n        this.clearPlayEnd();\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {number} end When to stop, relative to the beginning of a clip.\n     * @emits MediaElement#play\n     * @return {Promise} Result\n     */\n    play(start, end) {\n        this.seekTo(start);\n        const promise = this.media.play();\n        end && this.setPlayEnd(end);\n\n        return promise;\n    }\n\n    /**\n     * Pauses the loaded audio.\n     *\n     * @emits MediaElement#pause\n     * @return {Promise} Result\n     */\n    pause() {\n        let promise;\n\n        if (this.media) {\n            promise = this.media.pause();\n        }\n        this.clearPlayEnd();\n\n        return promise;\n    }\n\n    /**\n     * Set the play end\n     *\n     * @param {number} end Where to end\n     */\n    setPlayEnd(end) {\n        this.clearPlayEnd();\n\n        this._onPlayEnd = time => {\n            if (time >= end) {\n                this.pause();\n                this.seekTo(end);\n            }\n        };\n        this.on('audioprocess', this._onPlayEnd);\n    }\n\n    /** @private */\n    clearPlayEnd() {\n        if (this._onPlayEnd) {\n            this.un('audioprocess', this._onPlayEnd);\n            this._onPlayEnd = null;\n        }\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into\n     * <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of\n     * arrays of peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks(length, first, last) {\n        if (this.buffer) {\n            return super.getPeaks(length, first, last);\n        }\n        return this.peaks || [];\n    }\n\n    /**\n     * Set the sink id for the media player\n     *\n     * @param {string} deviceId String value representing audio device id.\n     * @returns {Promise} A Promise that resolves to `undefined` when there\n     * are no errors.\n     */\n    setSinkId(deviceId) {\n        if (deviceId) {\n            if (!this.media.setSinkId) {\n                return Promise.reject(\n                    new Error('setSinkId is not supported in your browser')\n                );\n            }\n            return this.media.setSinkId(deviceId);\n        }\n\n        return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n    getVolume() {\n        return this.volume;\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n    setVolume(value) {\n        this.volume = value;\n        // no need to change when it's already at that volume\n        if (this.media.volume !== this.volume) {\n            this.media.volume = this.volume;\n        }\n    }\n\n    /**\n     * Enable or disable muted audio\n     *\n     * @since 4.0.0\n     * @param {boolean} muted Specify `true` to mute audio.\n     */\n    setMute(muted) {\n        // This causes a volume change to be emitted too through the\n        // volumechange event listener.\n        this.isMuted = this.media.muted = muted;\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     *\n     */\n    destroy() {\n        this.pause();\n        this.unAll();\n        this.destroyed = true;\n\n        // cleanup media event listeners\n        Object.keys(this.mediaListeners).forEach(id => {\n            if (this.media) {\n                this.media.removeEventListener(id, this.mediaListeners[id]);\n            }\n        });\n\n        if (\n            this.params.removeMediaElementOnDestroy &&\n            this.media &&\n            this.media.parentNode\n        ) {\n            this.media.parentNode.removeChild(this.media);\n        }\n\n        this.media = null;\n    }\n}\n","/**\n * Caches the decoded peaks data to improve rendering speed for large audio\n *\n * Is used if the option parameter `partialRender` is set to `true`\n */\nexport default class PeakCache {\n    /**\n     * Instantiate cache\n     */\n    constructor() {\n        this.clearPeakCache();\n    }\n\n    /**\n     * Empty the cache\n     */\n    clearPeakCache() {\n        /**\n         * Flat array with entries that are always in pairs to mark the\n         * beginning and end of each subrange.  This is a convenience so we can\n         * iterate over the pairs for easy set difference operations.\n         * @private\n         */\n        this.peakCacheRanges = [];\n        /**\n         * Length of the entire cachable region, used for resetting the cache\n         * when this changes (zoom events, for instance).\n         * @private\n         */\n        this.peakCacheLength = -1;\n    }\n\n    /**\n     * Add a range of peaks to the cache\n     *\n     * @param {number} length The length of the range\n     * @param {number} start The x offset of the start of the range\n     * @param {number} end The x offset of the end of the range\n     * @return {Number.<Array[]>} Array with arrays of numbers\n     */\n    addRangeToPeakCache(length, start, end) {\n        if (length != this.peakCacheLength) {\n            this.clearPeakCache();\n            this.peakCacheLength = length;\n        }\n\n        // Return ranges that weren't in the cache before the call.\n        let uncachedRanges = [];\n        let i = 0;\n        // Skip ranges before the current start.\n        while (\n            i < this.peakCacheRanges.length &&\n            this.peakCacheRanges[i] < start\n        ) {\n            i++;\n        }\n        // If |i| is even, |start| falls after an existing range.  Otherwise,\n        // |start| falls between an existing range, and the uncached region\n        // starts when we encounter the next node in |peakCacheRanges| or\n        // |end|, whichever comes first.\n        if (i % 2 == 0) {\n            uncachedRanges.push(start);\n        }\n        while (\n            i < this.peakCacheRanges.length &&\n            this.peakCacheRanges[i] <= end\n        ) {\n            uncachedRanges.push(this.peakCacheRanges[i]);\n            i++;\n        }\n        // If |i| is even, |end| is after all existing ranges.\n        if (i % 2 == 0) {\n            uncachedRanges.push(end);\n        }\n\n        // Filter out the 0-length ranges.\n        uncachedRanges = uncachedRanges.filter((item, pos, arr) => {\n            if (pos == 0) {\n                return item != arr[pos + 1];\n            } else if (pos == arr.length - 1) {\n                return item != arr[pos - 1];\n            }\n            return item != arr[pos - 1] && item != arr[pos + 1];\n        });\n\n        // Merge the two ranges together, uncachedRanges will either contain\n        // wholly new points, or duplicates of points in peakCacheRanges.  If\n        // duplicates are detected, remove both and extend the range.\n        this.peakCacheRanges = this.peakCacheRanges.concat(uncachedRanges);\n        this.peakCacheRanges = this.peakCacheRanges\n            .sort((a, b) => a - b)\n            .filter((item, pos, arr) => {\n                if (pos == 0) {\n                    return item != arr[pos + 1];\n                } else if (pos == arr.length - 1) {\n                    return item != arr[pos - 1];\n                }\n                return item != arr[pos - 1] && item != arr[pos + 1];\n            });\n\n        // Push the uncached ranges into an array of arrays for ease of\n        // iteration in the functions that call this.\n        const uncachedRangePairs = [];\n        for (i = 0; i < uncachedRanges.length; i += 2) {\n            uncachedRangePairs.push([uncachedRanges[i], uncachedRanges[i + 1]]);\n        }\n\n        return uncachedRangePairs;\n    }\n\n    /**\n     * For testing\n     *\n     * @return {Number.<Array[]>} Array with arrays of numbers\n     */\n    getCacheRanges() {\n        const peakCacheRangePairs = [];\n        let i;\n        for (i = 0; i < this.peakCacheRanges.length; i += 2) {\n            peakCacheRangePairs.push([\n                this.peakCacheRanges[i],\n                this.peakCacheRanges[i + 1]\n            ]);\n        }\n        return peakCacheRangePairs;\n    }\n}\n","import utilMax from './max';\r\nimport utilmin from './min';\r\n\r\n/**\r\n * Get the largest absolute value in an array\r\n *\r\n * @param   {Array} values Array of numbers\r\n * @returns {Number} Largest number found\r\n * @example console.log(max([-3, 2, 1]), max([-3, 2, 4])); // logs 3 4\r\n * @since 4.3.0\r\n */\r\nexport default function absMax(values) {\r\n    const max = utilMax(values);\r\n    const min = utilmin(values);\r\n    return -min > max ? -min : max;\r\n}\r\n","/**\n * Returns a number limited to the given range.\n *\n * @param {number} val The number to be limited to a range\n * @param {number} min The lower boundary of the limit range\n * @param {number} max The upper boundary of the limit range\n * @returns {number} A number in the range [min, max]\n */\nexport default function clamp(val, min, max) {\n    return Math.min(Math.max(min, val), max);\n}\n","/**\n * @since 3.0.0\n */\n\nimport Observer from './observer';\n\nclass ProgressHandler {\n    /**\n     * Instantiate ProgressHandler\n     *\n     * @param {Observer} instance The `fetchFile` observer instance.\n     * @param {Number} contentLength Content length.\n     * @param {Response} response Response object.\n     */\n    constructor(instance, contentLength, response) {\n        this.instance = instance;\n        this.instance._reader = response.body.getReader();\n\n        this.total = parseInt(contentLength, 10);\n        this.loaded = 0;\n    }\n\n    /**\n     * A method that is called once, immediately after the `ReadableStream``\n     * is constructed.\n     *\n     * @param {ReadableStreamDefaultController} controller Controller instance\n     *     used to control the stream.\n     */\n    start(controller) {\n        const read = () => {\n            // instance._reader.read() returns a promise that resolves\n            // when a value has been received\n            this.instance._reader\n                .read()\n                .then(({ done, value }) => {\n                    // result objects contain two properties:\n                    // done  - true if the stream has already given you all its data.\n                    // value - some data. Always undefined when done is true.\n                    if (done) {\n                        // ensure onProgress called when content-length=0\n                        if (this.total === 0) {\n                            this.instance.onProgress.call(this.instance, {\n                                loaded: this.loaded,\n                                total: this.total,\n                                lengthComputable: false\n                            });\n                        }\n                        // no more data needs to be consumed, close the stream\n                        controller.close();\n                        return;\n                    }\n\n                    this.loaded += value.byteLength;\n                    this.instance.onProgress.call(this.instance, {\n                        loaded: this.loaded,\n                        total: this.total,\n                        lengthComputable: !(this.total === 0)\n                    });\n                    // enqueue the next data chunk into our target stream\n                    controller.enqueue(value);\n                    read();\n                })\n                .catch(error => {\n                    controller.error(error);\n                });\n        };\n\n        read();\n    }\n}\n\n/**\n * Load a file using `fetch`.\n *\n * @param {object} options Request options to use. See example below.\n * @returns {Observer} Observer instance\n * @example\n * // default options\n * let options = {\n *     url: undefined,\n *     method: 'GET',\n *     mode: 'cors',\n *     credentials: 'same-origin',\n *     cache: 'default',\n *     responseType: 'json',\n *     requestHeaders: [],\n *     redirect: 'follow',\n *     referrer: 'client'\n * };\n *\n * // override some options\n * options.url = '../media/demo.wav';\n\n * // available types: 'arraybuffer', 'blob', 'json' or 'text'\n * options.responseType = 'arraybuffer';\n *\n * // make fetch call\n * let request = util.fetchFile(options);\n *\n * // listen for events\n * request.on('progress', e => {\n *     console.log('progress', e);\n * });\n *\n * request.on('success', data => {\n *     console.log('success!', data);\n * });\n *\n * request.on('error', e => {\n *     console.warn('fetchFile error: ', e);\n * });\n */\nexport default function fetchFile(options) {\n    if (!options) {\n        throw new Error('fetch options missing');\n    } else if (!options.url) {\n        throw new Error('fetch url missing');\n    }\n    const instance = new Observer();\n    const fetchHeaders = new Headers();\n    const fetchRequest = new Request(options.url);\n\n    // add ability to abort\n    instance.controller = new AbortController();\n\n    // check if headers have to be added\n    if (options && options.requestHeaders) {\n        // add custom request headers\n        options.requestHeaders.forEach(header => {\n            fetchHeaders.append(header.key, header.value);\n        });\n    }\n\n    // parse fetch options\n    const responseType = options.responseType || 'json';\n    const fetchOptions = {\n        method: options.method || 'GET',\n        headers: fetchHeaders,\n        mode: options.mode || 'cors',\n        credentials: options.credentials || 'same-origin',\n        cache: options.cache || 'default',\n        redirect: options.redirect || 'follow',\n        referrer: options.referrer || 'client',\n        signal: instance.controller.signal\n    };\n\n    fetch(fetchRequest, fetchOptions)\n        .then(response => {\n            // store response reference\n            instance.response = response;\n\n            let progressAvailable = true;\n            if (!response.body) {\n                // ReadableStream is not yet supported in this browser\n                // see https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream\n                progressAvailable = false;\n            }\n\n            // Server must send CORS header \"Access-Control-Expose-Headers: content-length\"\n            const contentLength = response.headers.get('content-length');\n            if (contentLength === null) {\n                // Content-Length server response header missing.\n                // Don't evaluate download progress if we can't compare against a total size\n                // see https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Access-Control-Expose-Headers\n                progressAvailable = false;\n            }\n\n            if (!progressAvailable) {\n                // not able to check download progress so skip it\n                return response;\n            }\n\n            // fire progress event when during load\n            instance.onProgress = e => {\n                instance.fireEvent('progress', e);\n            };\n\n            return new Response(\n                new ReadableStream(\n                    new ProgressHandler(instance, contentLength, response)\n                ),\n                fetchOptions\n            );\n        })\n        .then(response => {\n            let errMsg;\n            if (response.ok) {\n                switch (responseType) {\n                    case 'arraybuffer':\n                        return response.arrayBuffer();\n\n                    case 'json':\n                        return response.json();\n\n                    case 'blob':\n                        return response.blob();\n\n                    case 'text':\n                        return response.text();\n\n                    default:\n                        errMsg = 'Unknown responseType: ' + responseType;\n                        break;\n                }\n            }\n            if (!errMsg) {\n                errMsg = 'HTTP error status: ' + response.status;\n            }\n            throw new Error(errMsg);\n        })\n        .then(response => {\n            instance.fireEvent('success', response);\n        })\n        .catch(error => {\n            instance.fireEvent('error', error);\n        });\n\n    // return the fetch request\n    instance.fetchRequest = fetchRequest;\n    return instance;\n}\n","import reqAnimationFrame from './request-animation-frame';\n\n/**\n * Create a function which will be called at the next requestAnimationFrame\n * cycle\n *\n * @param {function} func The function to call\n *\n * @return {func} The function wrapped within a requestAnimationFrame\n */\nexport default function frame(func) {\n    return (...args) => reqAnimationFrame(() => func(...args));\n}\n","/**\n * Get a random prefixed ID\n *\n * @param {String} prefix Prefix to use. Default is `'wavesurfer_'`.\n * @returns {String} Random prefixed ID\n * @example\n * console.log(getId()); // logs 'wavesurfer_b5pors4ru6g'\n *\n * let prefix = 'foo-';\n * console.log(getId(prefix)); // logs 'foo-b5pors4ru6g'\n */\nexport default function getId(prefix) {\n    if (prefix === undefined) {\n        prefix = 'wavesurfer_';\n    }\n    return (\n        prefix +\n        Math.random()\n            .toString(32)\n            .substring(2)\n    );\n}\n","export { default as getId } from './get-id';\nexport { default as max } from './max';\nexport { default as min } from './min';\nexport { default as absMax } from './absMax';\nexport { default as Observer } from './observer';\nexport { default as style } from './style';\nexport { default as requestAnimationFrame } from './request-animation-frame';\nexport { default as frame } from './frame';\nexport { default as debounce } from 'debounce';\nexport { default as preventClick } from './prevent-click';\nexport { default as fetchFile } from './fetch';\nexport { default as clamp } from './clamp';\nexport { default as withOrientation } from './orientation';\nexport { default as ignoreSilenceMode } from './silence-mode';\n","/**\n * Get the largest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Largest number found\n * @example console.log(max([1, 2, 3])); // logs 3\n */\nexport default function max(values) {\n    let largest = -Infinity;\n    Object.keys(values).forEach(i => {\n        if (values[i] > largest) {\n            largest = values[i];\n        }\n    });\n    return largest;\n}\n","/**\n * Get the smallest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Smallest number found\n * @example console.log(min([1, 2, 3])); // logs 1\n */\nexport default function min(values) {\n    let smallest = Number(Infinity);\n    Object.keys(values).forEach(i => {\n        if (values[i] < smallest) {\n            smallest = values[i];\n        }\n    });\n    return smallest;\n}\n","/**\n * @typedef {Object} ListenerDescriptor\n * @property {string} name The name of the event\n * @property {function} callback The callback\n * @property {function} un The function to call to remove the listener\n */\n\n/**\n * Observer class\n */\nexport default class Observer {\n    /**\n     * Instantiate Observer\n     */\n    constructor() {\n        /**\n         * @private\n         * @todo Initialise the handlers here already and remove the conditional\n         * assignment in `on()`\n         */\n        this._disabledEventEmissions = [];\n        this.handlers = null;\n    }\n    /**\n     * Attach a handler function for an event.\n     *\n     * @param {string} event Name of the event to listen to\n     * @param {function} fn The callback to trigger when the event is fired\n     * @return {ListenerDescriptor} The event descriptor\n     */\n    on(event, fn) {\n        if (!this.handlers) {\n            this.handlers = {};\n        }\n\n        let handlers = this.handlers[event];\n        if (!handlers) {\n            handlers = this.handlers[event] = [];\n        }\n        handlers.push(fn);\n\n        // Return an event descriptor\n        return {\n            name: event,\n            callback: fn,\n            un: (e, fn) => this.un(e, fn)\n        };\n    }\n\n    /**\n     * Remove an event handler.\n     *\n     * @param {string} event Name of the event the listener that should be\n     * removed listens to\n     * @param {function} fn The callback that should be removed\n     */\n    un(event, fn) {\n        if (!this.handlers) {\n            return;\n        }\n\n        const handlers = this.handlers[event];\n        let i;\n        if (handlers) {\n            if (fn) {\n                for (i = handlers.length - 1; i >= 0; i--) {\n                    if (handlers[i] == fn) {\n                        handlers.splice(i, 1);\n                    }\n                }\n            } else {\n                handlers.length = 0;\n            }\n        }\n    }\n\n    /**\n     * Remove all event handlers.\n     */\n    unAll() {\n        this.handlers = null;\n    }\n\n    /**\n     * Attach a handler to an event. The handler is executed at most once per\n     * event type.\n     *\n     * @param {string} event The event to listen to\n     * @param {function} handler The callback that is only to be called once\n     * @return {ListenerDescriptor} The event descriptor\n     */\n    once(event, handler) {\n        const fn = (...args) => {\n            /*  eslint-disable no-invalid-this */\n            handler.apply(this, args);\n            /*  eslint-enable no-invalid-this */\n            setTimeout(() => {\n                this.un(event, fn);\n            }, 0);\n        };\n        return this.on(event, fn);\n    }\n\n    /**\n     * Disable firing a list of events by name. When specified, event handlers for any event type\n     * passed in here will not be called.\n     *\n     * @since 4.0.0\n     * @param {string[]} eventNames an array of event names to disable emissions for\n     * @example\n     * // disable seek and interaction events\n     * wavesurfer.setDisabledEventEmissions(['seek', 'interaction']);\n     */\n    setDisabledEventEmissions(eventNames) {\n        this._disabledEventEmissions = eventNames;\n    }\n\n    /**\n     * plugins borrow part of this class without calling the constructor,\n     * so we have to be careful about _disabledEventEmissions\n     */\n\n    _isDisabledEventEmission(event) {\n        return this._disabledEventEmissions && this._disabledEventEmissions.includes(event);\n    }\n\n    /**\n     * Manually fire an event\n     *\n     * @param {string} event The event to fire manually\n     * @param {...any} args The arguments with which to call the listeners\n     */\n    fireEvent(event, ...args) {\n        if (!this.handlers || this._isDisabledEventEmission(event)) {\n            return;\n        }\n\n        const handlers = this.handlers[event];\n        handlers &&\n            handlers.forEach(fn => {\n                fn(...args);\n            });\n    }\n}\n","const verticalPropMap = {\n    width: 'height',\n    height: 'width',\n\n    overflowX: 'overflowY',\n    overflowY: 'overflowX',\n\n    clientWidth: 'clientHeight',\n    clientHeight: 'clientWidth',\n\n    clientX: 'clientY',\n    clientY: 'clientX',\n\n    scrollWidth: 'scrollHeight',\n    scrollLeft: 'scrollTop',\n\n    offsetLeft: 'offsetTop',\n    offsetTop: 'offsetLeft',\n    offsetHeight: 'offsetWidth',\n    offsetWidth: 'offsetHeight',\n\n    left: 'top',\n    right: 'bottom',\n    top: 'left',\n    bottom: 'right',\n\n    borderRightStyle: 'borderBottomStyle',\n    borderRightWidth: 'borderBottomWidth',\n    borderRightColor: 'borderBottomColor'\n};\n\n/**\n * Convert a horizontally-oriented property name to a vertical one.\n *\n * @param {string} prop A property name\n * @param {bool} vertical Whether the element is oriented vertically\n * @returns {string} prop, converted appropriately\n */\nfunction mapProp(prop, vertical) {\n    if (Object.prototype.hasOwnProperty.call(verticalPropMap, prop)) {\n        return vertical ? verticalPropMap[prop] : prop;\n    } else {\n        return prop;\n    }\n}\n\nconst isProxy = Symbol(\"isProxy\");\n\n/**\n * Returns an appropriately oriented object based on vertical.\n * If vertical is true, attribute getting and setting will be mapped through\n * verticalPropMap, so that e.g. getting the object's .width will give its\n * .height instead.\n * Certain methods of an oriented object will return oriented objects as well.\n * Oriented objects can't be added to the DOM directly since they are Proxy objects\n * and thus fail typechecks. Use domElement to get the actual element for this.\n *\n * @param {object} target The object to be wrapped and oriented\n * @param {bool} vertical Whether the element is oriented vertically\n * @returns {Proxy} An oriented object with attr translation via verticalAttrMap\n * @since 5.0.0\n */\nexport default function withOrientation(target, vertical) {\n    if (target[isProxy]) {\n        return target;\n    } else {\n        return new Proxy(\n            target, {\n                get: function(obj, prop, receiver) {\n                    if (prop === isProxy) {\n                        return true;\n                    } else if (prop === 'domElement') {\n                        return obj;\n                    } else if (prop === 'style') {\n                        return withOrientation(obj.style, vertical);\n                    } else if (prop === 'canvas') {\n                        return withOrientation(obj.canvas, vertical);\n                    } else if (prop === 'getBoundingClientRect') {\n                        return function(...args) {\n                            return withOrientation(obj.getBoundingClientRect(...args), vertical);\n                        };\n                    } else if (prop === 'getContext') {\n                        return function(...args) {\n                            return withOrientation(obj.getContext(...args), vertical);\n                        };\n                    } else {\n                        let value = obj[mapProp(prop, vertical)];\n                        return typeof value == 'function' ? value.bind(obj) : value;\n                    }\n                },\n                set: function(obj, prop, value) {\n                    obj[mapProp(prop, vertical)] = value;\n                    return true;\n                }\n            }\n        );\n    }\n}\n","/**\n * Stops propagation of click event and removes event listener\n *\n * @private\n * @param {object} event The click event\n */\nfunction preventClickHandler(event) {\n    event.stopPropagation();\n    document.body.removeEventListener('click', preventClickHandler, true);\n}\n\n/**\n * Starts listening for click event and prevent propagation\n *\n * @param {object} values Values\n */\nexport default function preventClick(values) {\n    document.body.addEventListener('click', preventClickHandler, true);\n}\n","/* eslint-disable valid-jsdoc */\n/**\n * Returns the `requestAnimationFrame` function for the browser, or a shim with\n * `setTimeout` if the function is not found\n *\n * @return {function} Available `requestAnimationFrame` function for the browser\n */\nexport default (\n    window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    ((callback, element) => setTimeout(callback, 1000 / 60))\n).bind(window);\n","/**\n * Ignores device silence mode when using the `WebAudio` backend.\n *\n * Many mobile devices contain a hardware button to mute the ringtone for incoming\n * calls and messages. Unfortunately, on some platforms like iOS, this also mutes\n * wavesurfer's audio when using the `WebAudio` backend. This function creates a\n * temporary `<audio>` element that makes sure the WebAudio backend keeps playing\n * when muting the device ringer.\n *\n * @since 5.2.0\n */\nexport default function ignoreSilenceMode() {\n    // Set the src to a short bit of url encoded as a silent mp3\n    // NOTE The silence MP3 must be high quality, when web audio sounds are played\n    // in parallel the web audio sound is mixed to match the bitrate of the html sound\n    // 0.01 seconds of silence VBR220-260 Joint Stereo 859B\n    const audioData = \"data:audio/mpeg;base64,//uQxAAAAAAAAAAAAAAAAAAAAAAAWGluZwAAAA8AAAACAAACcQCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA//////////////////////////////////////////////////////////////////8AAABhTEFNRTMuMTAwA8MAAAAAAAAAABQgJAUHQQAB9AAAAnGMHkkIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//sQxAADgnABGiAAQBCqgCRMAAgEAH///////////////7+n/9FTuQsQH//////2NG0jWUGlio5gLQTOtIoeR2WX////X4s9Atb/JRVCbBUpeRUq//////////////////9RUi0f2jn/+xDECgPCjAEQAABN4AAANIAAAAQVTEFNRTMuMTAwVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVQ==\";\n\n    // disable iOS Airplay (setting the attribute in js doesn't work)\n    let tmp = document.createElement(\"div\");\n    tmp.innerHTML = '<audio x-webkit-airplay=\"deny\"></audio>';\n\n    let audioSilentMode = tmp.children.item(0);\n    audioSilentMode.src = audioData;\n    audioSilentMode.preload = \"auto\";\n    audioSilentMode.type = \"audio/mpeg\";\n    audioSilentMode.disableRemotePlayback = true;\n\n    // play\n    audioSilentMode.play();\n\n    // cleanup\n    audioSilentMode.remove();\n    tmp.remove();\n}\n","/**\n * Apply a map of styles to an element\n *\n * @param {HTMLElement} el The element that the styles will be applied to\n * @param {Object} styles The map of propName: attribute, both are used as-is\n *\n * @return {HTMLElement} el\n */\nexport default function style(el, styles) {\n    Object.keys(styles).forEach(prop => {\n        if (el.style[prop] !== styles[prop]) {\n            el.style[prop] = styles[prop];\n        }\n    });\n    return el;\n}\n","import * as util from './util';\nimport MultiCanvas from './drawer.multicanvas';\nimport WebAudio from './webaudio';\nimport MediaElement from './mediaelement';\nimport PeakCache from './peakcache';\nimport MediaElementWebAudio from './mediaelement-webaudio';\n\n/*\n * This work is licensed under a BSD-3-Clause License.\n */\n\n/** @external {HTMLElement} https://developer.mozilla.org/en/docs/Web/API/HTMLElement */\n/** @external {OfflineAudioContext} https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext */\n/** @external {File} https://developer.mozilla.org/en-US/docs/Web/API/File */\n/** @external {Blob} https://developer.mozilla.org/en-US/docs/Web/API/Blob */\n/** @external {CanvasRenderingContext2D} https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D */\n/** @external {MediaStreamConstraints} https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints */\n/** @external {AudioNode} https://developer.mozilla.org/de/docs/Web/API/AudioNode */\n\n/**\n * @typedef {Object} WavesurferParams\n * @property {AudioContext} audioContext=null Use your own previously\n * initialized AudioContext or leave blank.\n * @property {number} audioRate=1 Speed at which to play audio. Lower number is\n * slower.\n * @property {ScriptProcessorNode} audioScriptProcessor=null Use your own previously\n * initialized ScriptProcessorNode or leave blank.\n * @property {boolean} autoCenter=true If a scrollbar is present, center the\n * waveform on current progress\n * @property {number} autoCenterRate=5 If autoCenter is active, rate at which the\n * waveform is centered\n * @property {boolean} autoCenterImmediately=false If autoCenter is active, immediately\n * center waveform on current progress\n * @property {string} backend='WebAudio' `'WebAudio'|'MediaElement'|'MediaElementWebAudio'` In most cases\n * you don't have to set this manually. MediaElement is a fallback for unsupported browsers.\n * MediaElementWebAudio allows to use WebAudio API also with big audio files, loading audio like with\n * MediaElement backend (HTML5 audio tag). You have to use the same methods of MediaElement backend for loading and\n * playback, giving also peaks, so the audio data are not decoded. In this way you can use WebAudio features, like filters,\n * also with audio with big duration. For example:\n * ` wavesurfer.load(url | HTMLMediaElement, peaks, preload, duration);\n *   wavesurfer.play();\n *   wavesurfer.setFilter(customFilter);\n * `\n * @property {string} backgroundColor=null Change background color of the\n * waveform container.\n * @property {number} barHeight=1 The height of the wave bars.\n * @property {number} barRadius=0 The radius of the wave bars. Makes bars rounded\n * @property {number} barGap=null The optional spacing between bars of the wave,\n * if not provided will be calculated in legacy format.\n * @property {number} barWidth=null Draw the waveform using bars.\n * @property {number} barMinHeight=null If specified, draw at least a bar of this height,\n * eliminating waveform gaps\n * @property {boolean} closeAudioContext=false Close and nullify all audio\n * contexts when the destroy method is called.\n * @property {!string|HTMLElement} container CSS selector or HTML element where\n * the waveform should be drawn. This is the only required parameter.\n * @property {string} cursorColor='#333' The fill color of the cursor indicating\n * the playhead position.\n * @property {number} cursorWidth=1 Measured in pixels.\n * @property {object} drawingContextAttributes={desynchronized: false} Drawing context\n * attributes.\n * @property {number} duration=null Optional audio length so pre-rendered peaks\n * can be display immediately for example.\n * @property {boolean} fillParent=true Whether to fill the entire container or\n * draw only according to `minPxPerSec`.\n * @property {boolean} forceDecode=false Force decoding of audio using web audio\n * when zooming to get a more detailed waveform.\n * @property {number} height=128 The height of the waveform. Measured in\n * pixels.\n * @property {boolean} hideScrollbar=false Whether to hide the horizontal\n * scrollbar when one would normally be shown.\n * @property {boolean} ignoreSilenceMode=false If true, ignores device silence mode\n * when using the `WebAudio` backend.\n * @property {boolean} interact=true Whether the mouse interaction will be\n * enabled at initialization. You can switch this parameter at any time later\n * on.\n * @property {boolean} loopSelection=true (Use with regions plugin) Enable\n * looping of selected regions\n * @property {number} maxCanvasWidth=4000 Maximum width of a single canvas in\n * pixels, excluding a small overlap (2 * `pixelRatio`, rounded up to the next\n * even integer). If the waveform is longer than this value, additional canvases\n * will be used to render the waveform, which is useful for very large waveforms\n * that may be too wide for browsers to draw on a single canvas.\n * @property {boolean} mediaControls=false (Use with backend `MediaElement` or `MediaElementWebAudio`)\n * this enables the native controls for the media element\n * @property {string} mediaType='audio' (Use with backend `MediaElement` or `MediaElementWebAudio`)\n * `'audio'|'video'` ('video' only for `MediaElement`)\n * @property {number} minPxPerSec=20 Minimum number of pixels per second of\n * audio.\n * @property {boolean} normalize=false If true, normalize by the maximum peak\n * instead of 1.0.\n * @property {boolean} partialRender=false Use the PeakCache to improve\n * rendering speed of large waveforms\n * @property {number} pixelRatio=window.devicePixelRatio The pixel ratio used to\n * calculate display\n * @property {PluginDefinition[]} plugins=[] An array of plugin definitions to\n * register during instantiation, they will be directly initialised unless they\n * are added with the `deferInit` property set to true.\n * @property {string} progressColor='#555' The fill color of the part of the\n * waveform behind the cursor. When `progressColor` and `waveColor` are the same\n * the progress wave is not rendered at all.\n * @property {boolean} removeMediaElementOnDestroy=true Set to false to keep the\n * media element in the DOM when the player is destroyed. This is useful when\n * reusing an existing media element via the `loadMediaElement` method.\n * @property {Object} renderer=MultiCanvas Can be used to inject a custom\n * renderer.\n * @property {boolean|number} responsive=false If set to `true` resize the\n * waveform, when the window is resized. This is debounced with a `100ms`\n * timeout by default. If this parameter is a number it represents that timeout.\n * @property {boolean} rtl=false If set to `true`, renders waveform from\n * right-to-left.\n * @property {boolean} scrollParent=false Whether to scroll the container with a\n * lengthy waveform. Otherwise the waveform is shrunk to the container width\n * (see fillParent).\n * @property {number} skipLength=2 Number of seconds to skip with the\n * skipForward() and skipBackward() methods.\n * @property {boolean} splitChannels=false Render with separate waveforms for\n * the channels of the audio\n * @property {SplitChannelOptions} splitChannelsOptions={} Options for splitChannel rendering\n * @property {boolean} vertical=false Render the waveform vertically instead of horizontally.\n * @property {string} waveColor='#999' The fill color of the waveform after the\n * cursor.\n * @property {object} xhr={} XHR options. For example:\n * `let xhr = {\n *     cache: 'default',\n *     mode: 'cors',\n *     method: 'GET',\n *     credentials: 'same-origin',\n *     redirect: 'follow',\n *     referrer: 'client',\n *     requestHeaders: [\n *         {\n *             key: 'Authorization',\n *             value: 'my-token'\n *         }\n *     ]\n * };`\n */\n\n/**\n * @typedef {Object} PluginDefinition\n * @desc The Object used to describe a plugin\n * @example wavesurfer.addPlugin(pluginDefinition);\n * @property {string} name The name of the plugin, the plugin instance will be\n * added as a property to the wavesurfer instance under this name\n * @property {?Object} staticProps The properties that should be added to the\n * wavesurfer instance as static properties\n * @property {?boolean} deferInit Don't initialise plugin\n * automatically\n * @property {Object} params={} The plugin parameters, they are the first parameter\n * passed to the plugin class constructor function\n * @property {PluginClass} instance The plugin instance factory, is called with\n * the dependency specified in extends. Returns the plugin class.\n */\n\n/**\n * @typedef {Object} SplitChannelOptions\n * @desc parameters applied when splitChannels option is true\n * @property {boolean} overlay=false determines whether channels are rendered on top of each other or on separate tracks\n * @property {object} channelColors={} object describing color for each channel. Example:\n * {\n *     0: {\n *         progressColor: 'green',\n *         waveColor: 'pink'\n *     },\n *     1: {\n *         progressColor: 'orange',\n *         waveColor: 'purple'\n *     }\n * }\n * @property {number[]} filterChannels=[] indexes of channels to be hidden from rendering\n * @property {boolean} relativeNormalization=false determines whether\n * normalization is done per channel or maintains proportionality between\n * channels. Only applied when normalize and splitChannels are both true.\n * @since 4.3.0\n */\n\n/**\n * @interface PluginClass\n *\n * @desc This is the interface which is implemented by all plugin classes. Note\n * that this only turns into an observer after being passed through\n * `wavesurfer.addPlugin`.\n *\n * @extends {Observer}\n */\nclass PluginClass {\n    /**\n     * Plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * It returns a `PluginDefinition` object representing the plugin.\n     *\n     * @param {Object} params={} The plugin params (specific to the plugin)\n     */\n    create(params) {}\n    /**\n     * Construct the plugin\n     *\n     * @param {Object} params={} The plugin params (specific to the plugin)\n     * @param {Object} ws The wavesurfer instance\n     */\n    constructor(params, ws) {}\n    /**\n     * Initialise the plugin\n     *\n     * Start doing something. This is called by\n     * `wavesurfer.initPlugin(pluginName)`\n     */\n    init() {}\n    /**\n     * Destroy the plugin instance\n     *\n     * Stop doing something. This is called by\n     * `wavesurfer.destroyPlugin(pluginName)`\n     */\n    destroy() {}\n}\n\n/**\n * WaveSurfer core library class\n *\n * @extends {Observer}\n * @example\n * const params = {\n *   container: '#waveform',\n *   waveColor: 'violet',\n *   progressColor: 'purple'\n * };\n *\n * // initialise like this\n * const wavesurfer = WaveSurfer.create(params);\n *\n * // or like this ...\n * const wavesurfer = new WaveSurfer(params);\n * wavesurfer.init();\n *\n * // load audio file\n * wavesurfer.load('example/media/demo.wav');\n */\nexport default class WaveSurfer extends util.Observer {\n    /** @private */\n    defaultParams = {\n        audioContext: null,\n        audioScriptProcessor: null,\n        audioRate: 1,\n        autoCenter: true,\n        autoCenterRate: 5,\n        autoCenterImmediately: false,\n        backend: 'WebAudio',\n        backgroundColor: null,\n        barHeight: 1,\n        barRadius: 0,\n        barGap: null,\n        barMinHeight: null,\n        container: null,\n        cursorColor: '#333',\n        cursorWidth: 1,\n        dragSelection: true,\n        drawingContextAttributes: {\n            // Boolean that hints the user agent to reduce the latency\n            // by desynchronizing the canvas paint cycle from the event\n            // loop\n            desynchronized: false\n        },\n        duration: null,\n        fillParent: true,\n        forceDecode: false,\n        height: 128,\n        hideScrollbar: false,\n        ignoreSilenceMode: false,\n        interact: true,\n        loopSelection: true,\n        maxCanvasWidth: 4000,\n        mediaContainer: null,\n        mediaControls: false,\n        mediaType: 'audio',\n        minPxPerSec: 20,\n        normalize: false,\n        partialRender: false,\n        pixelRatio:\n            window.devicePixelRatio || screen.deviceXDPI / screen.logicalXDPI,\n        plugins: [],\n        progressColor: '#555',\n        removeMediaElementOnDestroy: true,\n        renderer: MultiCanvas,\n        responsive: false,\n        rtl: false,\n        scrollParent: false,\n        skipLength: 2,\n        splitChannels: false,\n        splitChannelsOptions: {\n            overlay: false,\n            channelColors: {},\n            filterChannels: [],\n            relativeNormalization: false\n        },\n        vertical: false,\n        waveColor: '#999',\n        xhr: {}\n    };\n\n    /** @private */\n    backends = {\n        MediaElement,\n        WebAudio,\n        MediaElementWebAudio\n    };\n\n    /**\n     * Instantiate this class, call its `init` function and returns it\n     *\n     * @param {WavesurferParams} params The wavesurfer parameters\n     * @return {Object} WaveSurfer instance\n     * @example const wavesurfer = WaveSurfer.create(params);\n     */\n    static create(params) {\n        const wavesurfer = new WaveSurfer(params);\n        return wavesurfer.init();\n    }\n\n    /**\n     * The library version number is available as a static property of the\n     * WaveSurfer class\n     *\n     * @type {String}\n     * @example\n     * console.log('Using wavesurfer.js ' + WaveSurfer.VERSION);\n     */\n    static VERSION = __VERSION__;\n\n    /**\n     * Functions in the `util` property are available as a prototype property to\n     * all instances\n     *\n     * @type {Object}\n     * @example\n     * const wavesurfer = WaveSurfer.create(params);\n     * wavesurfer.util.style(myElement, { background: 'blue' });\n     */\n    util = util;\n\n    /**\n     * Functions in the `util` property are available as a static property of the\n     * WaveSurfer class\n     *\n     * @type {Object}\n     * @example\n     * WaveSurfer.util.style(myElement, { background: 'blue' });\n     */\n    static util = util;\n\n    /**\n     * Initialise wavesurfer instance\n     *\n     * @param {WavesurferParams} params Instantiation options for wavesurfer\n     * @example\n     * const wavesurfer = new WaveSurfer(params);\n     * @returns {this} Wavesurfer instance\n     */\n    constructor(params) {\n        super();\n        /**\n         * Extract relevant parameters (or defaults)\n         * @private\n         */\n        this.params = Object.assign({}, this.defaultParams, params);\n        this.params.splitChannelsOptions = Object.assign(\n            {},\n            this.defaultParams.splitChannelsOptions,\n            params.splitChannelsOptions\n        );\n        /** @private */\n        this.container =\n            'string' == typeof params.container\n                ? document.querySelector(this.params.container)\n                : this.params.container;\n\n        if (!this.container) {\n            throw new Error('Container element not found');\n        }\n\n        if (this.params.mediaContainer == null) {\n            /** @private */\n            this.mediaContainer = this.container;\n        } else if (typeof this.params.mediaContainer == 'string') {\n            /** @private */\n            this.mediaContainer = document.querySelector(\n                this.params.mediaContainer\n            );\n        } else {\n            /** @private */\n            this.mediaContainer = this.params.mediaContainer;\n        }\n\n        if (!this.mediaContainer) {\n            throw new Error('Media Container element not found');\n        }\n\n        if (this.params.maxCanvasWidth <= 1) {\n            throw new Error('maxCanvasWidth must be greater than 1');\n        } else if (this.params.maxCanvasWidth % 2 == 1) {\n            throw new Error('maxCanvasWidth must be an even number');\n        }\n\n        if (this.params.rtl === true) {\n            if (this.params.vertical === true) {\n                util.style(this.container, { transform: 'rotateX(180deg)' });\n            } else {\n                util.style(this.container, { transform: 'rotateY(180deg)' });\n            }\n        }\n\n        if (this.params.backgroundColor) {\n            this.setBackgroundColor(this.params.backgroundColor);\n        }\n\n        /**\n         * @private Used to save the current volume when muting so we can\n         * restore once unmuted\n         * @type {number}\n         */\n        this.savedVolume = 0;\n\n        /**\n         * @private The current muted state\n         * @type {boolean}\n         */\n        this.isMuted = false;\n\n        /**\n         * @private Will hold a list of event descriptors that need to be\n         * canceled on subsequent loads of audio\n         * @type {Object[]}\n         */\n        this.tmpEvents = [];\n\n        /**\n         * @private Holds any running audio downloads\n         * @type {Observer}\n         */\n        this.currentRequest = null;\n        /** @private */\n        this.arraybuffer = null;\n        /** @private */\n        this.drawer = null;\n        /** @private */\n        this.backend = null;\n        /** @private */\n        this.peakCache = null;\n\n        // cache constructor objects\n        if (typeof this.params.renderer !== 'function') {\n            throw new Error('Renderer parameter is invalid');\n        }\n        /**\n         * @private The uninitialised Drawer class\n         */\n        this.Drawer = this.params.renderer;\n        /**\n         * @private The uninitialised Backend class\n         */\n        // Back compat\n        if (this.params.backend == 'AudioElement') {\n            this.params.backend = 'MediaElement';\n        }\n\n        if (\n            (this.params.backend == 'WebAudio' ||\n                this.params.backend === 'MediaElementWebAudio') &&\n            !WebAudio.prototype.supportsWebAudio.call(null)\n        ) {\n            this.params.backend = 'MediaElement';\n        }\n        this.Backend = this.backends[this.params.backend];\n\n        /**\n         * @private map of plugin names that are currently initialised\n         */\n        this.initialisedPluginList = {};\n        /** @private */\n        this.isDestroyed = false;\n\n        /**\n         * Get the current ready status.\n         *\n         * @example const isReady = wavesurfer.isReady;\n         * @return {boolean}\n         */\n        this.isReady = false;\n\n        // responsive debounced event listener. If this.params.responsive is not\n        // set, this is never called. Use 100ms or this.params.responsive as\n        // timeout for the debounce function.\n        let prevWidth = 0;\n        this._onResize = util.debounce(\n            () => {\n                if (\n                    prevWidth != this.drawer.wrapper.clientWidth &&\n                    !this.params.scrollParent\n                ) {\n                    prevWidth = this.drawer.wrapper.clientWidth;\n                    this.drawer.fireEvent('redraw');\n                }\n            },\n            typeof this.params.responsive === 'number'\n                ? this.params.responsive\n                : 100\n        );\n\n        return this;\n    }\n\n    /**\n     * Initialise the wave\n     *\n     * @example\n     * var wavesurfer = new WaveSurfer(params);\n     * wavesurfer.init();\n     * @return {this} The wavesurfer instance\n     */\n    init() {\n        this.registerPlugins(this.params.plugins);\n        this.createDrawer();\n        this.createBackend();\n        this.createPeakCache();\n        return this;\n    }\n\n    /**\n     * Add and initialise array of plugins (if `plugin.deferInit` is falsey),\n     * this function is called in the init function of wavesurfer\n     *\n     * @param {PluginDefinition[]} plugins An array of plugin definitions\n     * @emits {WaveSurfer#plugins-registered} Called with the array of plugin definitions\n     * @return {this} The wavesurfer instance\n     */\n    registerPlugins(plugins) {\n        // first instantiate all the plugins\n        plugins.forEach(plugin => this.addPlugin(plugin));\n\n        // now run the init functions\n        plugins.forEach(plugin => {\n            // call init function of the plugin if deferInit is falsey\n            // in that case you would manually use initPlugins()\n            if (!plugin.deferInit) {\n                this.initPlugin(plugin.name);\n            }\n        });\n        this.fireEvent('plugins-registered', plugins);\n        return this;\n    }\n\n    /**\n     * Get a map of plugin names that are currently initialised\n     *\n     * @example wavesurfer.getPlugins();\n     * @return {Object} Object with plugin names\n     */\n    getActivePlugins() {\n        return this.initialisedPluginList;\n    }\n\n    /**\n     * Add a plugin object to wavesurfer\n     *\n     * @param {PluginDefinition} plugin A plugin definition\n     * @emits {WaveSurfer#plugin-added} Called with the name of the plugin that was added\n     * @example wavesurfer.addPlugin(WaveSurfer.minimap());\n     * @return {this} The wavesurfer instance\n     */\n    addPlugin(plugin) {\n        if (!plugin.name) {\n            throw new Error('Plugin does not have a name!');\n        }\n        if (!plugin.instance) {\n            throw new Error(\n                `Plugin ${plugin.name} does not have an instance property!`\n            );\n        }\n\n        // staticProps properties are applied to wavesurfer instance\n        if (plugin.staticProps) {\n            Object.keys(plugin.staticProps).forEach(pluginStaticProp => {\n                /**\n                 * Properties defined in a plugin definition's `staticProps` property are added as\n                 * staticProps properties of the WaveSurfer instance\n                 */\n                this[pluginStaticProp] = plugin.staticProps[pluginStaticProp];\n            });\n        }\n\n        const Instance = plugin.instance;\n\n        // turn the plugin instance into an observer\n        const observerPrototypeKeys = Object.getOwnPropertyNames(\n            util.Observer.prototype\n        );\n        observerPrototypeKeys.forEach(key => {\n            Instance.prototype[key] = util.Observer.prototype[key];\n        });\n\n        /**\n         * Instantiated plugin classes are added as a property of the wavesurfer\n         * instance\n         * @type {Object}\n         */\n        this[plugin.name] = new Instance(plugin.params || {}, this);\n        this.fireEvent('plugin-added', plugin.name);\n        return this;\n    }\n\n    /**\n     * Initialise a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-initialised\n     * @example wavesurfer.initPlugin('minimap');\n     * @return {this} The wavesurfer instance\n     */\n    initPlugin(name) {\n        if (!this[name]) {\n            throw new Error(`Plugin ${name} has not been added yet!`);\n        }\n        if (this.initialisedPluginList[name]) {\n            // destroy any already initialised plugins\n            this.destroyPlugin(name);\n        }\n        this[name].init();\n        this.initialisedPluginList[name] = true;\n        this.fireEvent('plugin-initialised', name);\n        return this;\n    }\n\n    /**\n     * Destroy a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-destroyed\n     * @example wavesurfer.destroyPlugin('minimap');\n     * @returns {this} The wavesurfer instance\n     */\n    destroyPlugin(name) {\n        if (!this[name]) {\n            throw new Error(\n                `Plugin ${name} has not been added yet and cannot be destroyed!`\n            );\n        }\n        if (!this.initialisedPluginList[name]) {\n            throw new Error(\n                `Plugin ${name} is not active and cannot be destroyed!`\n            );\n        }\n        if (typeof this[name].destroy !== 'function') {\n            throw new Error(`Plugin ${name} does not have a destroy function!`);\n        }\n\n        this[name].destroy();\n        delete this.initialisedPluginList[name];\n        this.fireEvent('plugin-destroyed', name);\n        return this;\n    }\n\n    /**\n     * Destroy all initialised plugins. Convenience function to use when\n     * wavesurfer is removed\n     *\n     * @private\n     */\n    destroyAllPlugins() {\n        Object.keys(this.initialisedPluginList).forEach(name =>\n            this.destroyPlugin(name)\n        );\n    }\n\n    /**\n     * Create the drawer and draw the waveform\n     *\n     * @private\n     * @emits WaveSurfer#drawer-created\n     */\n    createDrawer() {\n        this.drawer = new this.Drawer(this.container, this.params);\n        this.drawer.init();\n        this.fireEvent('drawer-created', this.drawer);\n\n        if (this.params.responsive !== false) {\n            window.addEventListener('resize', this._onResize, true);\n            window.addEventListener('orientationchange', this._onResize, true);\n        }\n\n        this.drawer.on('redraw', () => {\n            this.drawBuffer();\n            this.drawer.progress(this.backend.getPlayedPercents());\n        });\n\n        // Click-to-seek\n        this.drawer.on('click', (e, progress) => {\n            setTimeout(() => this.seekTo(progress), 0);\n        });\n\n        // Relay the scroll event from the drawer\n        this.drawer.on('scroll', e => {\n            if (this.params.partialRender) {\n                this.drawBuffer();\n            }\n            this.fireEvent('scroll', e);\n        });\n    }\n\n    /**\n     * Create the backend\n     *\n     * @private\n     * @emits WaveSurfer#backend-created\n     */\n    createBackend() {\n        if (this.backend) {\n            this.backend.destroy();\n        }\n\n        this.backend = new this.Backend(this.params);\n        this.backend.init();\n        this.fireEvent('backend-created', this.backend);\n\n        this.backend.on('finish', () => {\n            this.drawer.progress(this.backend.getPlayedPercents());\n            this.fireEvent('finish');\n        });\n        this.backend.on('play', () => this.fireEvent('play'));\n        this.backend.on('pause', () => this.fireEvent('pause'));\n\n        this.backend.on('audioprocess', time => {\n            this.drawer.progress(this.backend.getPlayedPercents());\n            this.fireEvent('audioprocess', time);\n        });\n\n        // only needed for MediaElement and MediaElementWebAudio backend\n        if (\n            this.params.backend === 'MediaElement' ||\n            this.params.backend === 'MediaElementWebAudio'\n        ) {\n            this.backend.on('seek', () => {\n                this.drawer.progress(this.backend.getPlayedPercents());\n            });\n\n            this.backend.on('volume', () => {\n                let newVolume = this.getVolume();\n                this.fireEvent('volume', newVolume);\n\n                if (this.backend.isMuted !== this.isMuted) {\n                    this.isMuted = this.backend.isMuted;\n                    this.fireEvent('mute', this.isMuted);\n                }\n            });\n        }\n    }\n\n    /**\n     * Create the peak cache\n     *\n     * @private\n     */\n    createPeakCache() {\n        if (this.params.partialRender) {\n            this.peakCache = new PeakCache();\n        }\n    }\n\n    /**\n     * Get the duration of the audio clip\n     *\n     * @example const duration = wavesurfer.getDuration();\n     * @return {number} Duration in seconds\n     */\n    getDuration() {\n        return this.backend.getDuration();\n    }\n\n    /**\n     * Get the current playback position\n     *\n     * @example const currentTime = wavesurfer.getCurrentTime();\n     * @return {number} Playback position in seconds\n     */\n    getCurrentTime() {\n        return this.backend.getCurrentTime();\n    }\n\n    /**\n     * Set the current play time in seconds.\n     *\n     * @param {number} seconds A positive number in seconds. E.g. 10 means 10\n     * seconds, 60 means 1 minute\n     */\n    setCurrentTime(seconds) {\n        if (seconds >= this.getDuration()) {\n            this.seekTo(1);\n        } else {\n            this.seekTo(seconds / this.getDuration());\n        }\n    }\n\n    /**\n     * Starts playback from the current position. Optional start and end\n     * measured in seconds can be used to set the range of audio to play.\n     *\n     * @param {?number} start Position to start at\n     * @param {?number} end Position to end at\n     * @emits WaveSurfer#interaction\n     * @return {Promise} Result of the backend play method\n     * @example\n     * // play from second 1 to 5\n     * wavesurfer.play(1, 5);\n     */\n    play(start, end) {\n        if (this.params.ignoreSilenceMode) {\n            // ignores device hardware silence mode\n            util.ignoreSilenceMode();\n        }\n\n        this.fireEvent('interaction', () => this.play(start, end));\n        return this.backend.play(start, end);\n    }\n\n    /**\n     * Set a point in seconds for playback to stop at.\n     *\n     * @param {number} position Position (in seconds) to stop at\n     * @version 3.3.0\n     */\n    setPlayEnd(position) {\n        this.backend.setPlayEnd(position);\n    }\n\n    /**\n     * Stops and pauses playback\n     *\n     * @example wavesurfer.pause();\n     * @return {Promise} Result of the backend pause method\n     */\n    pause() {\n        if (!this.backend.isPaused()) {\n            return this.backend.pause();\n        }\n    }\n\n    /**\n     * Toggle playback\n     *\n     * @example wavesurfer.playPause();\n     * @return {Promise} Result of the backend play or pause method\n     */\n    playPause() {\n        return this.backend.isPaused() ? this.play() : this.pause();\n    }\n\n    /**\n     * Get the current playback state\n     *\n     * @example const isPlaying = wavesurfer.isPlaying();\n     * @return {boolean} False if paused, true if playing\n     */\n    isPlaying() {\n        return !this.backend.isPaused();\n    }\n\n    /**\n     * Skip backward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipBackward();\n     */\n    skipBackward(seconds) {\n        this.skip(-seconds || -this.params.skipLength);\n    }\n\n    /**\n     * Skip forward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipForward();\n     */\n    skipForward(seconds) {\n        this.skip(seconds || this.params.skipLength);\n    }\n\n    /**\n     * Skip a number of seconds from the current position (use a negative value\n     * to go backwards).\n     *\n     * @param {number} offset Amount to skip back or forwards\n     * @example\n     * // go back 2 seconds\n     * wavesurfer.skip(-2);\n     */\n    skip(offset) {\n        const duration = this.getDuration() || 1;\n        let position = this.getCurrentTime() || 0;\n        position = Math.max(0, Math.min(duration, position + (offset || 0)));\n        this.seekAndCenter(position / duration);\n    }\n\n    /**\n     * Seeks to a position and centers the view\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @example\n     * // seek and go to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n    seekAndCenter(progress) {\n        this.seekTo(progress);\n        this.drawer.recenter(progress);\n    }\n\n    /**\n     * Seeks to a position\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @emits WaveSurfer#interaction\n     * @emits WaveSurfer#seek\n     * @example\n     * // seek to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n    seekTo(progress) {\n        // return an error if progress is not a number between 0 and 1\n        if (\n            typeof progress !== 'number' ||\n            !isFinite(progress) ||\n            progress < 0 ||\n            progress > 1\n        ) {\n            throw new Error(\n                'Error calling wavesurfer.seekTo, parameter must be a number between 0 and 1!'\n            );\n        }\n        this.fireEvent('interaction', () => this.seekTo(progress));\n\n        const isWebAudioBackend = this.params.backend === 'WebAudio';\n        const paused = this.backend.isPaused();\n\n        if (isWebAudioBackend && !paused) {\n            this.backend.pause();\n        }\n\n        // avoid small scrolls while paused seeking\n        const oldScrollParent = this.params.scrollParent;\n        this.params.scrollParent = false;\n        this.backend.seekTo(progress * this.getDuration());\n        this.drawer.progress(progress);\n\n        if (isWebAudioBackend && !paused) {\n            this.backend.play();\n        }\n\n        this.params.scrollParent = oldScrollParent;\n        this.fireEvent('seek', progress);\n    }\n\n    /**\n     * Stops and goes to the beginning.\n     *\n     * @example wavesurfer.stop();\n     */\n    stop() {\n        this.pause();\n        this.seekTo(0);\n        this.drawer.progress(0);\n    }\n\n    /**\n     * Sets the ID of the audio device to use for output and returns a Promise.\n     *\n     * @param {string} deviceId String value representing underlying output\n     * device\n     * @returns {Promise} `Promise` that resolves to `undefined` when there are\n     * no errors detected.\n     */\n    setSinkId(deviceId) {\n        return this.backend.setSinkId(deviceId);\n    }\n\n    /**\n     * Set the playback volume.\n     *\n     * @param {number} newVolume A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     * @emits WaveSurfer#volume\n     */\n    setVolume(newVolume) {\n        this.backend.setVolume(newVolume);\n        this.fireEvent('volume', newVolume);\n    }\n\n    /**\n     * Get the playback volume.\n     *\n     * @return {number} A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     */\n    getVolume() {\n        return this.backend.getVolume();\n    }\n\n    /**\n     * Set the playback rate.\n     *\n     * @param {number} rate A positive number. E.g. 0.5 means half the normal\n     * speed, 2 means double speed and so on.\n     * @example wavesurfer.setPlaybackRate(2);\n     */\n    setPlaybackRate(rate) {\n        this.backend.setPlaybackRate(rate);\n    }\n\n    /**\n     * Get the playback rate.\n     *\n     * @return {number} The current playback rate.\n     */\n    getPlaybackRate() {\n        return this.backend.getPlaybackRate();\n    }\n\n    /**\n     * Toggle the volume on and off. If not currently muted it will save the\n     * current volume value and turn the volume off. If currently muted then it\n     * will restore the volume to the saved value, and then rest the saved\n     * value.\n     *\n     * @example wavesurfer.toggleMute();\n     */\n    toggleMute() {\n        this.setMute(!this.isMuted);\n    }\n\n    /**\n     * Enable or disable muted audio\n     *\n     * @param {boolean} mute Specify `true` to mute audio.\n     * @emits WaveSurfer#volume\n     * @emits WaveSurfer#mute\n     * @example\n     * // unmute\n     * wavesurfer.setMute(false);\n     * console.log(wavesurfer.getMute()) // logs false\n     */\n    setMute(mute) {\n        // ignore all muting requests if the audio is already in that state\n        if (mute === this.isMuted) {\n            this.fireEvent('mute', this.isMuted);\n            return;\n        }\n\n        if (this.backend.setMute) {\n            // Backends such as the MediaElement backend have their own handling\n            // of mute, let them handle it.\n            this.backend.setMute(mute);\n            this.isMuted = mute;\n        } else {\n            if (mute) {\n                // If currently not muted then save current volume,\n                // turn off the volume and update the mute properties\n                this.savedVolume = this.backend.getVolume();\n                this.backend.setVolume(0);\n                this.isMuted = true;\n                this.fireEvent('volume', 0);\n            } else {\n                // If currently muted then restore to the saved volume\n                // and update the mute properties\n                this.backend.setVolume(this.savedVolume);\n                this.isMuted = false;\n                this.fireEvent('volume', this.savedVolume);\n            }\n        }\n        this.fireEvent('mute', this.isMuted);\n    }\n\n    /**\n     * Get the current mute status.\n     *\n     * @example const isMuted = wavesurfer.getMute();\n     * @return {boolean} Current mute status\n     */\n    getMute() {\n        return this.isMuted;\n    }\n\n    /**\n     * Get the list of current set filters as an array.\n     *\n     * Filters must be set with setFilters method first\n     *\n     * @return {array} List of enabled filters\n     */\n    getFilters() {\n        return this.backend.filters || [];\n    }\n\n    /**\n     * Toggles `scrollParent` and redraws\n     *\n     * @example wavesurfer.toggleScroll();\n     */\n    toggleScroll() {\n        this.params.scrollParent = !this.params.scrollParent;\n        this.drawBuffer();\n    }\n\n    /**\n     * Toggle mouse interaction\n     *\n     * @example wavesurfer.toggleInteraction();\n     */\n    toggleInteraction() {\n        this.params.interact = !this.params.interact;\n    }\n\n    /**\n     * Get the fill color of the waveform after the cursor.\n     *\n     * @return {string} A CSS color string.\n     */\n    getWaveColor() {\n        return this.params.waveColor;\n    }\n\n    /**\n     * Set the fill color of the waveform after the cursor.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setWaveColor('#ddd');\n     */\n    setWaveColor(color) {\n        this.params.waveColor = color;\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the fill color of the waveform behind the cursor.\n     *\n     * @return {string} A CSS color string.\n     */\n    getProgressColor() {\n        return this.params.progressColor;\n    }\n\n    /**\n     * Set the fill color of the waveform behind the cursor.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setProgressColor('#400');\n     */\n    setProgressColor(color) {\n        this.params.progressColor = color;\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the background color of the waveform container.\n     *\n     * @return {string} A CSS color string.\n     */\n    getBackgroundColor() {\n        return this.params.backgroundColor;\n    }\n\n    /**\n     * Set the background color of the waveform container.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setBackgroundColor('#FF00FF');\n     */\n    setBackgroundColor(color) {\n        this.params.backgroundColor = color;\n        util.style(this.container, { background: this.params.backgroundColor });\n    }\n\n    /**\n     * Get the fill color of the cursor indicating the playhead\n     * position.\n     *\n     * @return {string} A CSS color string.\n     */\n    getCursorColor() {\n        return this.params.cursorColor;\n    }\n\n    /**\n     * Set the fill color of the cursor indicating the playhead\n     * position.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setCursorColor('#222');\n     */\n    setCursorColor(color) {\n        this.params.cursorColor = color;\n        this.drawer.updateCursor();\n    }\n\n    /**\n     * Get the height of the waveform.\n     *\n     * @return {number} Height measured in pixels.\n     */\n    getHeight() {\n        return this.params.height;\n    }\n\n    /**\n     * Set the height of the waveform.\n     *\n     * @param {number} height Height measured in pixels.\n     * @example wavesurfer.setHeight(200);\n     */\n    setHeight(height) {\n        this.params.height = height;\n        this.drawer.setHeight(height * this.params.pixelRatio);\n        this.drawBuffer();\n    }\n\n    /**\n     * Hide channels from being drawn on the waveform if splitting channels.\n     *\n     * For example, if we want to draw only the peaks for the right stereo channel:\n     *\n     * const wavesurfer = new WaveSurfer.create({...splitChannels: true});\n     * wavesurfer.load('stereo_audio.mp3');\n     *\n     * wavesurfer.setFilteredChannel([0]); <-- hide left channel peaks.\n     *\n     * @param {array} channelIndices Channels to be filtered out from drawing.\n     * @version 4.0.0\n     */\n    setFilteredChannels(channelIndices) {\n        this.params.splitChannelsOptions.filterChannels = channelIndices;\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the correct peaks for current wave view-port and render wave\n     *\n     * @private\n     * @emits WaveSurfer#redraw\n     */\n    drawBuffer() {\n        const nominalWidth = Math.round(\n            this.getDuration() *\n                this.params.minPxPerSec *\n                this.params.pixelRatio\n        );\n        const parentWidth = this.drawer.getWidth();\n        let width = nominalWidth;\n        // always start at 0 after zooming for scrolling : issue redraw left part\n        let start = 0;\n        let end = Math.max(start + parentWidth, width);\n        // Fill container\n        if (\n            this.params.fillParent &&\n            (!this.params.scrollParent || nominalWidth < parentWidth)\n        ) {\n            width = parentWidth;\n            start = 0;\n            end = width;\n        }\n\n        let peaks;\n        if (this.params.partialRender) {\n            const newRanges = this.peakCache.addRangeToPeakCache(\n                width,\n                start,\n                end\n            );\n            let i;\n            for (i = 0; i < newRanges.length; i++) {\n                peaks = this.backend.getPeaks(\n                    width,\n                    newRanges[i][0],\n                    newRanges[i][1]\n                );\n                this.drawer.drawPeaks(\n                    peaks,\n                    width,\n                    newRanges[i][0],\n                    newRanges[i][1]\n                );\n            }\n        } else {\n            peaks = this.backend.getPeaks(width, start, end);\n            this.drawer.drawPeaks(peaks, width, start, end);\n        }\n        this.fireEvent('redraw', peaks, width);\n    }\n\n    /**\n     * Horizontally zooms the waveform in and out. It also changes the parameter\n     * `minPxPerSec` and enables the `scrollParent` option. Calling the function\n     * with a falsey parameter will reset the zoom state.\n     *\n     * @param {?number} pxPerSec Number of horizontal pixels per second of\n     * audio, if none is set the waveform returns to unzoomed state\n     * @emits WaveSurfer#zoom\n     * @example wavesurfer.zoom(20);\n     */\n    zoom(pxPerSec) {\n        if (!pxPerSec) {\n            this.params.minPxPerSec = this.defaultParams.minPxPerSec;\n            this.params.scrollParent = false;\n        } else {\n            this.params.minPxPerSec = pxPerSec;\n            this.params.scrollParent = true;\n        }\n\n        this.drawBuffer();\n        this.drawer.progress(this.backend.getPlayedPercents());\n\n        this.drawer.recenter(this.getCurrentTime() / this.getDuration());\n        this.fireEvent('zoom', pxPerSec);\n    }\n\n    /**\n     * Decode buffer and load\n     *\n     * @private\n     * @param {ArrayBuffer} arraybuffer Buffer to process\n     */\n    loadArrayBuffer(arraybuffer) {\n        this.decodeArrayBuffer(arraybuffer, data => {\n            if (!this.isDestroyed) {\n                this.loadDecodedBuffer(data);\n            }\n        });\n    }\n\n    /**\n     * Directly load an externally decoded AudioBuffer\n     *\n     * @private\n     * @param {AudioBuffer} buffer Buffer to process\n     * @emits WaveSurfer#ready\n     */\n    loadDecodedBuffer(buffer) {\n        this.backend.load(buffer);\n        this.drawBuffer();\n        this.isReady = true;\n        this.fireEvent('ready');\n    }\n\n    /**\n     * Loads audio data from a Blob or File object\n     *\n     * @param {Blob|File} blob Audio data\n     * @example\n     */\n    loadBlob(blob) {\n        // Create file reader\n        const reader = new FileReader();\n        reader.addEventListener('progress', e => this.onProgress(e));\n        reader.addEventListener('load', e =>\n            this.loadArrayBuffer(e.target.result)\n        );\n        reader.addEventListener('error', () =>\n            this.fireEvent('error', 'Error reading file')\n        );\n        reader.readAsArrayBuffer(blob);\n        this.empty();\n    }\n\n    /**\n     * Loads audio and re-renders the waveform.\n     *\n     * @param {string|HTMLMediaElement} url The url of the audio file or the\n     * audio element with the audio\n     * @param {number[]|Number.<Array[]>} peaks Wavesurfer does not have to decode\n     * the audio to render the waveform if this is specified\n     * @param {?string} preload (Use with backend `MediaElement` and `MediaElementWebAudio`)\n     * `'none'|'metadata'|'auto'` Preload attribute for the media element\n     * @param {?number} duration The duration of the audio. This is used to\n     * render the peaks data in the correct size for the audio duration (as\n     * befits the current `minPxPerSec` and zoom value) without having to decode\n     * the audio.\n     * @returns {void}\n     * @throws Will throw an error if the `url` argument is empty.\n     * @example\n     * // uses fetch or media element to load file (depending on backend)\n     * wavesurfer.load('http://example.com/demo.wav');\n     *\n     * // setting preload attribute with media element backend and supplying\n     * // peaks\n     * wavesurfer.load(\n     *   'http://example.com/demo.wav',\n     *   [0.0218, 0.0183, 0.0165, 0.0198, 0.2137, 0.2888],\n     *   true\n     * );\n     */\n    load(url, peaks, preload, duration) {\n        if (!url) {\n            throw new Error('url parameter cannot be empty');\n        }\n        this.empty();\n        if (preload) {\n            // check whether the preload attribute will be usable and if not log\n            // a warning listing the reasons why not and nullify the variable\n            const preloadIgnoreReasons = {\n                \"Preload is not 'auto', 'none' or 'metadata'\":\n                    ['auto', 'metadata', 'none'].indexOf(preload) === -1,\n                'Peaks are not provided': !peaks,\n                \"Backend is not of type 'MediaElement' or 'MediaElementWebAudio'\":\n                    ['MediaElement', 'MediaElementWebAudio'].indexOf(\n                        this.params.backend\n                    ) === -1,\n                'Url is not of type string': typeof url !== 'string'\n            };\n            const activeReasons = Object.keys(preloadIgnoreReasons).filter(\n                reason => preloadIgnoreReasons[reason]\n            );\n            if (activeReasons.length) {\n                // eslint-disable-next-line no-console\n                console.warn(\n                    'Preload parameter of wavesurfer.load will be ignored because:\\n\\t- ' +\n                        activeReasons.join('\\n\\t- ')\n                );\n                // stop invalid values from being used\n                preload = null;\n            }\n        }\n\n        // loadBuffer(url, peaks, duration) requires that url is a string\n        // but users can pass in a HTMLMediaElement to WaveSurfer\n        if (this.params.backend === 'WebAudio' && url instanceof HTMLMediaElement) {\n            url = url.src;\n        }\n\n        switch (this.params.backend) {\n            case 'WebAudio':\n                return this.loadBuffer(url, peaks, duration);\n            case 'MediaElement':\n            case 'MediaElementWebAudio':\n                return this.loadMediaElement(url, peaks, preload, duration);\n        }\n    }\n\n    /**\n     * Loads audio using Web Audio buffer backend.\n     *\n     * @private\n     * @emits WaveSurfer#waveform-ready\n     * @param {string} url URL of audio file\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\n     * @param {?number} duration Optional duration of audio file\n     * @returns {void}\n     */\n    loadBuffer(url, peaks, duration) {\n        const load = action => {\n            if (action) {\n                this.tmpEvents.push(this.once('ready', action));\n            }\n            return this.getArrayBuffer(url, data => this.loadArrayBuffer(data));\n        };\n\n        if (peaks) {\n            this.backend.setPeaks(peaks, duration);\n            this.drawBuffer();\n            this.fireEvent('waveform-ready');\n            this.tmpEvents.push(this.once('interaction', load));\n        } else {\n            return load();\n        }\n    }\n\n    /**\n     * Either create a media element, or load an existing media element.\n     *\n     * @private\n     * @emits WaveSurfer#waveform-ready\n     * @param {string|HTMLMediaElement} urlOrElt Either a path to a media file, or an\n     * existing HTML5 Audio/Video Element\n     * @param {number[]|Number.<Array[]>} peaks Array of peaks. Required to bypass web audio\n     * dependency\n     * @param {?boolean} preload Set to true if the preload attribute of the\n     * audio element should be enabled\n     * @param {?number} duration Optional duration of audio file\n     */\n    loadMediaElement(urlOrElt, peaks, preload, duration) {\n        let url = urlOrElt;\n\n        if (typeof urlOrElt === 'string') {\n            this.backend.load(url, this.mediaContainer, peaks, preload);\n        } else {\n            const elt = urlOrElt;\n            this.backend.loadElt(elt, peaks);\n\n            // If peaks are not provided,\n            // url = element.src so we can get peaks with web audio\n            url = elt.src;\n        }\n\n        this.tmpEvents.push(\n            this.backend.once('canplay', () => {\n                // ignore when backend was already destroyed\n                if (!this.backend.destroyed) {\n                    this.drawBuffer();\n                    this.isReady = true;\n                    this.fireEvent('ready');\n                }\n            }),\n            this.backend.once('error', err => this.fireEvent('error', err))\n        );\n\n        // If peaks are provided, render them and fire the `waveform-ready` event.\n        if (peaks) {\n            this.backend.setPeaks(peaks, duration);\n            this.drawBuffer();\n            this.fireEvent('waveform-ready');\n        }\n\n        // If no pre-decoded peaks are provided, or are provided with\n        // forceDecode flag, attempt to download the audio file and decode it\n        // with Web Audio.\n        if (\n            (!peaks || this.params.forceDecode) &&\n            this.backend.supportsWebAudio()\n        ) {\n            this.getArrayBuffer(url, arraybuffer => {\n                this.decodeArrayBuffer(arraybuffer, buffer => {\n                    this.backend.buffer = buffer;\n                    this.backend.setPeaks(null);\n                    this.drawBuffer();\n                    this.fireEvent('waveform-ready');\n                });\n            });\n        }\n    }\n\n    /**\n     * Decode an array buffer and pass data to a callback\n     *\n     * @private\n     * @param {Object} arraybuffer The array buffer to decode\n     * @param {function} callback The function to call on complete\n     */\n    decodeArrayBuffer(arraybuffer, callback) {\n        if (!this.isDestroyed) {\n            this.arraybuffer = arraybuffer;\n            this.backend.decodeArrayBuffer(\n                arraybuffer,\n                data => {\n                    // Only use the decoded data if we haven't been destroyed or\n                    // another decode started in the meantime\n                    if (!this.isDestroyed && this.arraybuffer == arraybuffer) {\n                        callback(data);\n                        this.arraybuffer = null;\n                    }\n                },\n                () => this.fireEvent('error', 'Error decoding audiobuffer')\n            );\n        }\n    }\n\n    /**\n     * Load an array buffer using fetch and pass the result to a callback\n     *\n     * @param {string} url The URL of the file object\n     * @param {function} callback The function to call on complete\n     * @returns {util.fetchFile} fetch call\n     * @private\n     */\n    getArrayBuffer(url, callback) {\n        let options = Object.assign(\n            {\n                url: url,\n                responseType: 'arraybuffer'\n            },\n            this.params.xhr\n        );\n        const request = util.fetchFile(options);\n\n        this.currentRequest = request;\n\n        this.tmpEvents.push(\n            request.on('progress', e => {\n                this.onProgress(e);\n            }),\n            request.on('success', data => {\n                callback(data);\n                this.currentRequest = null;\n            }),\n            request.on('error', e => {\n                this.fireEvent('error', e);\n                this.currentRequest = null;\n            })\n        );\n\n        return request;\n    }\n\n    /**\n     * Called while the audio file is loading\n     *\n     * @private\n     * @param {Event} e Progress event\n     * @emits WaveSurfer#loading\n     */\n    onProgress(e) {\n        let percentComplete;\n        if (e.lengthComputable) {\n            percentComplete = e.loaded / e.total;\n        } else {\n            // Approximate progress with an asymptotic\n            // function, and assume downloads in the 1-3 MB range.\n            percentComplete = e.loaded / (e.loaded + 1000000);\n        }\n        this.fireEvent('loading', Math.round(percentComplete * 100), e.target);\n    }\n\n    /**\n     * Exports PCM data into a JSON array and optionally opens in a new window\n     * as valid JSON Blob instance.\n     *\n     * @param {number} length=1024 The scale in which to export the peaks\n     * @param {number} accuracy=10000\n     * @param {?boolean} noWindow Set to true to disable opening a new\n     * window with the JSON\n     * @param {number} start Start index\n     * @param {number} end End index\n     * @return {Promise} Promise that resolves with array of peaks\n     */\n    exportPCM(length, accuracy, noWindow, start, end) {\n        length = length || 1024;\n        start = start || 0;\n        accuracy = accuracy || 10000;\n        noWindow = noWindow || false;\n        const peaks = this.backend.getPeaks(length, start, end);\n        const arr = [].map.call(\n            peaks,\n            val => Math.round(val * accuracy) / accuracy\n        );\n\n        return new Promise((resolve, reject) => {\n            if (!noWindow){\n                const blobJSON = new Blob(\n                    [JSON.stringify(arr)],\n                    {type: 'application/json;charset=utf-8'}\n                );\n                const objURL = URL.createObjectURL(blobJSON);\n                window.open(objURL);\n                URL.revokeObjectURL(objURL);\n            }\n            resolve(arr);\n        });\n    }\n\n    /**\n     * Save waveform image as data URI.\n     *\n     * The default format is `'image/png'`. Other supported types are\n     * `'image/jpeg'` and `'image/webp'`.\n     *\n     * @param {string} format='image/png' A string indicating the image format.\n     * The default format type is `'image/png'`.\n     * @param {number} quality=1 A number between 0 and 1 indicating the image\n     * quality to use for image formats that use lossy compression such as\n     * `'image/jpeg'`` and `'image/webp'`.\n     * @param {string} type Image data type to return. Either 'dataURL' (default)\n     * or 'blob'.\n     * @return {string|string[]|Promise} When using `'dataURL'` type this returns\n     * a single data URL or an array of data URLs, one for each canvas. When using\n     * `'blob'` type this returns a `Promise` resolving with an array of `Blob`\n     * instances, one for each canvas.\n     */\n    exportImage(format, quality, type) {\n        if (!format) {\n            format = 'image/png';\n        }\n        if (!quality) {\n            quality = 1;\n        }\n        if (!type) {\n            type = 'dataURL';\n        }\n\n        return this.drawer.getImage(format, quality, type);\n    }\n\n    /**\n     * Cancel any fetch request currently in progress\n     */\n    cancelAjax() {\n        if (this.currentRequest && this.currentRequest.controller) {\n            // If the current request has a ProgressHandler, then its ReadableStream might need to be cancelled too\n            // See: Wavesurfer issue #2042\n            // See Firefox bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1583815\n            if (this.currentRequest._reader) {\n                // Ignoring exceptions thrown by call to cancel()\n                this.currentRequest._reader.cancel().catch(err => {});\n            }\n\n            this.currentRequest.controller.abort();\n            this.currentRequest = null;\n        }\n    }\n\n    /**\n     * @private\n     */\n    clearTmpEvents() {\n        this.tmpEvents.forEach(e => e.un());\n    }\n\n    /**\n     * Display empty waveform.\n     */\n    empty() {\n        if (!this.backend.isPaused()) {\n            this.stop();\n            this.backend.disconnectSource();\n        }\n        this.isReady = false;\n        this.cancelAjax();\n        this.clearTmpEvents();\n\n        // empty drawer\n        this.drawer.progress(0);\n        this.drawer.setWidth(0);\n        this.drawer.drawPeaks({ length: this.drawer.getWidth() }, 0);\n    }\n\n    /**\n     * Remove events, elements and disconnect WebAudio nodes.\n     *\n     * @emits WaveSurfer#destroy\n     */\n    destroy() {\n        this.destroyAllPlugins();\n        this.fireEvent('destroy');\n        this.cancelAjax();\n        this.clearTmpEvents();\n        this.unAll();\n        if (this.params.responsive !== false) {\n            window.removeEventListener('resize', this._onResize, true);\n            window.removeEventListener(\n                'orientationchange',\n                this._onResize,\n                true\n            );\n        }\n        if (this.backend) {\n            this.backend.destroy();\n            // clears memory usage\n            this.backend = null;\n        }\n        if (this.drawer) {\n            this.drawer.destroy();\n        }\n        this.isDestroyed = true;\n        this.isReady = false;\n        this.arraybuffer = null;\n    }\n}\n","import * as util from './util';\n\n// using constants to prevent someone writing the string wrong\nconst PLAYING = 'playing';\nconst PAUSED = 'paused';\nconst FINISHED = 'finished';\n\n/**\n * WebAudio backend\n *\n * @extends {Observer}\n */\nexport default class WebAudio extends util.Observer {\n    /** scriptBufferSize: size of the processing buffer */\n    static scriptBufferSize = 256;\n    /** audioContext: allows to process audio with WebAudio API */\n    audioContext = null;\n    /** @private */\n    offlineAudioContext = null;\n    /** @private */\n    stateBehaviors = {\n        [PLAYING]: {\n            init() {\n                this.addOnAudioProcess();\n            },\n            getPlayedPercents() {\n                const duration = this.getDuration();\n                return this.getCurrentTime() / duration || 0;\n            },\n            getCurrentTime() {\n                return this.startPosition + this.getPlayedTime();\n            }\n        },\n        [PAUSED]: {\n            init() {\n                this.removeOnAudioProcess();\n            },\n            getPlayedPercents() {\n                const duration = this.getDuration();\n                return this.getCurrentTime() / duration || 0;\n            },\n            getCurrentTime() {\n                return this.startPosition;\n            }\n        },\n        [FINISHED]: {\n            init() {\n                this.removeOnAudioProcess();\n                this.fireEvent('finish');\n            },\n            getPlayedPercents() {\n                return 1;\n            },\n            getCurrentTime() {\n                return this.getDuration();\n            }\n        }\n    };\n\n    /**\n     * Does the browser support this backend\n     *\n     * @return {boolean} Whether or not this browser supports this backend\n     */\n    supportsWebAudio() {\n        return !!(window.AudioContext || window.webkitAudioContext);\n    }\n\n    /**\n     * Get the audio context used by this backend or create one\n     *\n     * @return {AudioContext} Existing audio context, or creates a new one\n     */\n    getAudioContext() {\n        if (!window.WaveSurferAudioContext) {\n            window.WaveSurferAudioContext = new (window.AudioContext ||\n                window.webkitAudioContext)();\n        }\n        return window.WaveSurferAudioContext;\n    }\n\n    /**\n     * Get the offline audio context used by this backend or create one\n     *\n     * @param {number} sampleRate The sample rate to use\n     * @return {OfflineAudioContext} Existing offline audio context, or creates\n     * a new one\n     */\n    getOfflineAudioContext(sampleRate) {\n        if (!window.WaveSurferOfflineAudioContext) {\n            window.WaveSurferOfflineAudioContext = new (window.OfflineAudioContext ||\n                window.webkitOfflineAudioContext)(1, 2, sampleRate);\n        }\n        return window.WaveSurferOfflineAudioContext;\n    }\n\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super();\n        /** @private */\n        this.params = params;\n        /** ac: Audio Context instance */\n        this.ac =\n            params.audioContext ||\n            (this.supportsWebAudio() ? this.getAudioContext() : {});\n        /**@private */\n        this.lastPlay = this.ac.currentTime;\n        /** @private */\n        this.startPosition = 0;\n        /** @private */\n        this.scheduledPause = null;\n        /** @private */\n        this.states = {\n            [PLAYING]: Object.create(this.stateBehaviors[PLAYING]),\n            [PAUSED]: Object.create(this.stateBehaviors[PAUSED]),\n            [FINISHED]: Object.create(this.stateBehaviors[FINISHED])\n        };\n        /** @private */\n        this.buffer = null;\n        /** @private */\n        this.filters = [];\n        /** gainNode: allows to control audio volume */\n        this.gainNode = null;\n        /** @private */\n        this.mergedPeaks = null;\n        /** @private */\n        this.offlineAc = null;\n        /** @private */\n        this.peaks = null;\n        /** @private */\n        this.playbackRate = 1;\n        /** analyser: provides audio analysis information */\n        this.analyser = null;\n        /** scriptNode: allows processing audio */\n        this.scriptNode = null;\n        /** @private */\n        this.source = null;\n        /** @private */\n        this.splitPeaks = [];\n        /** @private */\n        this.state = null;\n        /** @private */\n        this.explicitDuration = params.duration;\n        /**\n         * Boolean indicating if the backend was destroyed.\n         */\n        this.destroyed = false;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.createVolumeNode();\n        this.createScriptNode();\n        this.createAnalyserNode();\n\n        this.setState(PAUSED);\n        this.setPlaybackRate(this.params.audioRate);\n        this.setLength(0);\n    }\n\n    /** @private */\n    disconnectFilters() {\n        if (this.filters) {\n            this.filters.forEach(filter => {\n                filter && filter.disconnect();\n            });\n            this.filters = null;\n            // Reconnect direct path\n            this.analyser.connect(this.gainNode);\n        }\n    }\n\n    /**\n     * @private\n     *\n     * @param {string} state The new state\n     */\n    setState(state) {\n        if (this.state !== this.states[state]) {\n            this.state = this.states[state];\n            this.state.init.call(this);\n        }\n    }\n\n    /**\n     * Unpacked `setFilters()`\n     *\n     * @param {...AudioNode} filters One or more filters to set\n     */\n    setFilter(...filters) {\n        this.setFilters(filters);\n    }\n\n    /**\n     * Insert custom Web Audio nodes into the graph\n     *\n     * @param {AudioNode[]} filters Packed filters array\n     * @example\n     * const lowpass = wavesurfer.backend.ac.createBiquadFilter();\n     * wavesurfer.backend.setFilter(lowpass);\n     */\n    setFilters(filters) {\n        // Remove existing filters\n        this.disconnectFilters();\n\n        // Insert filters if filter array not empty\n        if (filters && filters.length) {\n            this.filters = filters;\n\n            // Disconnect direct path before inserting filters\n            this.analyser.disconnect();\n\n            // Connect each filter in turn\n            filters\n                .reduce((prev, curr) => {\n                    prev.connect(curr);\n                    return curr;\n                }, this.analyser)\n                .connect(this.gainNode);\n        }\n    }\n    /** Create ScriptProcessorNode to process audio */\n    createScriptNode() {\n        if (this.params.audioScriptProcessor) {\n            this.scriptNode = this.params.audioScriptProcessor;\n        } else {\n            if (this.ac.createScriptProcessor) {\n                this.scriptNode = this.ac.createScriptProcessor(\n                    WebAudio.scriptBufferSize\n                );\n            } else {\n                this.scriptNode = this.ac.createJavaScriptNode(\n                    WebAudio.scriptBufferSize\n                );\n            }\n        }\n        this.scriptNode.connect(this.ac.destination);\n    }\n\n    /** @private */\n    addOnAudioProcess() {\n        this.scriptNode.onaudioprocess = () => {\n            const time = this.getCurrentTime();\n\n            if (time >= this.getDuration()) {\n                this.setState(FINISHED);\n                this.fireEvent('pause');\n            } else if (time >= this.scheduledPause) {\n                this.pause();\n            } else if (this.state === this.states[PLAYING]) {\n                this.fireEvent('audioprocess', time);\n            }\n        };\n    }\n\n    /** @private */\n    removeOnAudioProcess() {\n        this.scriptNode.onaudioprocess = null;\n    }\n    /** Create analyser node to perform audio analysis */\n    createAnalyserNode() {\n        this.analyser = this.ac.createAnalyser();\n        this.analyser.connect(this.gainNode);\n    }\n\n    /**\n     * Create the gain node needed to control the playback volume.\n     *\n     */\n    createVolumeNode() {\n        // Create gain node using the AudioContext\n        if (this.ac.createGain) {\n            this.gainNode = this.ac.createGain();\n        } else {\n            this.gainNode = this.ac.createGainNode();\n        }\n        // Add the gain node to the graph\n        this.gainNode.connect(this.ac.destination);\n    }\n\n    /**\n     * Set the sink id for the media player\n     *\n     * @param {string} deviceId String value representing audio device id.\n     * @returns {Promise} A Promise that resolves to `undefined` when there\n     * are no errors.\n     */\n    setSinkId(deviceId) {\n        if (deviceId) {\n            /**\n             * The webaudio API doesn't currently support setting the device\n             * output. Here we create an HTMLAudioElement, connect the\n             * webaudio stream to that element and setSinkId there.\n             */\n            let audio = new window.Audio();\n            if (!audio.setSinkId) {\n                return Promise.reject(\n                    new Error('setSinkId is not supported in your browser')\n                );\n            }\n            audio.autoplay = true;\n            const dest = this.ac.createMediaStreamDestination();\n            this.gainNode.disconnect();\n            this.gainNode.connect(dest);\n            audio.srcObject = dest.stream;\n\n            return audio.setSinkId(deviceId);\n        } else {\n            return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\n        }\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n    setVolume(value) {\n        this.gainNode.gain.setValueAtTime(value, this.ac.currentTime);\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n    getVolume() {\n        return this.gainNode.gain.value;\n    }\n\n    /**\n     * Decode an array buffer and pass data to a callback\n     *\n     * @private\n     * @param {ArrayBuffer} arraybuffer The array buffer to decode\n     * @param {function} callback The function to call on complete.\n     * @param {function} errback The function to call on error.\n     */\n    decodeArrayBuffer(arraybuffer, callback, errback) {\n        if (!this.offlineAc) {\n            this.offlineAc = this.getOfflineAudioContext(\n                this.ac && this.ac.sampleRate ? this.ac.sampleRate : 44100\n            );\n        }\n        if ('webkitAudioContext' in window) {\n            // Safari: no support for Promise-based decodeAudioData enabled\n            // Enable it in Safari using the Experimental Features > Modern WebAudio API option\n            this.offlineAc.decodeAudioData(\n                arraybuffer,\n                data => callback(data),\n                errback\n            );\n        } else {\n            this.offlineAc.decodeAudioData(arraybuffer).then(\n                (data) => callback(data)\n            ).catch(\n                (err) => errback(err)\n            );\n        }\n    }\n\n    /**\n     * Set pre-decoded peaks\n     *\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\n     * @param {?number} duration Explicit duration\n     */\n    setPeaks(peaks, duration) {\n        if (duration != null) {\n            this.explicitDuration = duration;\n        }\n        this.peaks = peaks;\n    }\n\n    /**\n     * Set the rendered length (different from the length of the audio)\n     *\n     * @param {number} length The rendered length\n     */\n    setLength(length) {\n        // No resize, we can preserve the cached peaks.\n        if (this.mergedPeaks && length == 2 * this.mergedPeaks.length - 1 + 2) {\n            return;\n        }\n\n        this.splitPeaks = [];\n        this.mergedPeaks = [];\n        // Set the last element of the sparse array so the peak arrays are\n        // appropriately sized for other calculations.\n        const channels = this.buffer ? this.buffer.numberOfChannels : 1;\n        let c;\n        for (c = 0; c < channels; c++) {\n            this.splitPeaks[c] = [];\n            this.splitPeaks[c][2 * (length - 1)] = 0;\n            this.splitPeaks[c][2 * (length - 1) + 1] = 0;\n        }\n        this.mergedPeaks[2 * (length - 1)] = 0;\n        this.mergedPeaks[2 * (length - 1) + 1] = 0;\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of arrays of\n     * peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks(length, first, last) {\n        if (this.peaks) {\n            return this.peaks;\n        }\n        if (!this.buffer) {\n            return [];\n        }\n\n        first = first || 0;\n        last = last || length - 1;\n\n        this.setLength(length);\n\n        if (!this.buffer) {\n            return this.params.splitChannels\n                ? this.splitPeaks\n                : this.mergedPeaks;\n        }\n\n        /**\n         * The following snippet fixes a buffering data issue on the Safari\n         * browser which returned undefined It creates the missing buffer based\n         * on 1 channel, 4096 samples and the sampleRate from the current\n         * webaudio context 4096 samples seemed to be the best fit for rendering\n         * will review this code once a stable version of Safari TP is out\n         */\n        if (!this.buffer.length) {\n            const newBuffer = this.createBuffer(1, 4096, this.sampleRate);\n            this.buffer = newBuffer.buffer;\n        }\n\n        const sampleSize = this.buffer.length / length;\n        const sampleStep = ~~(sampleSize / 10) || 1;\n        const channels = this.buffer.numberOfChannels;\n        let c;\n\n        for (c = 0; c < channels; c++) {\n            const peaks = this.splitPeaks[c];\n            const chan = this.buffer.getChannelData(c);\n            let i;\n\n            for (i = first; i <= last; i++) {\n                const start = ~~(i * sampleSize);\n                const end = ~~(start + sampleSize);\n                /**\n                 * Initialize the max and min to the first sample of this\n                 * subrange, so that even if the samples are entirely\n                 * on one side of zero, we still return the true max and\n                 * min values in the subrange.\n                 */\n                let min = chan[start];\n                let max = min;\n                let j;\n\n                for (j = start; j < end; j += sampleStep) {\n                    const value = chan[j];\n\n                    if (value > max) {\n                        max = value;\n                    }\n\n                    if (value < min) {\n                        min = value;\n                    }\n                }\n\n                peaks[2 * i] = max;\n                peaks[2 * i + 1] = min;\n\n                if (c == 0 || max > this.mergedPeaks[2 * i]) {\n                    this.mergedPeaks[2 * i] = max;\n                }\n\n                if (c == 0 || min < this.mergedPeaks[2 * i + 1]) {\n                    this.mergedPeaks[2 * i + 1] = min;\n                }\n            }\n        }\n\n        return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number} Position\n     */\n    getPlayedPercents() {\n        return this.state.getPlayedPercents.call(this);\n    }\n\n    /** @private */\n    disconnectSource() {\n        if (this.source) {\n            this.source.disconnect();\n        }\n    }\n    /**\n     * Destroy all references with WebAudio, disconnecting audio nodes and closing Audio Context\n     */\n    destroyWebAudio() {\n        this.disconnectFilters();\n        this.disconnectSource();\n        this.gainNode.disconnect();\n        this.scriptNode.disconnect();\n        this.analyser.disconnect();\n\n        // close the audioContext if closeAudioContext option is set to true\n        if (this.params.closeAudioContext) {\n            // check if browser supports AudioContext.close()\n            if (\n                typeof this.ac.close === 'function' &&\n                this.ac.state != 'closed'\n            ) {\n                this.ac.close();\n            }\n            // clear the reference to the audiocontext\n            this.ac = null;\n            // clear the actual audiocontext, either passed as param or the\n            // global singleton\n            if (!this.params.audioContext) {\n                window.WaveSurferAudioContext = null;\n            } else {\n                this.params.audioContext = null;\n            }\n            // clear the offlineAudioContext\n            window.WaveSurferOfflineAudioContext = null;\n        }\n    }\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n    destroy() {\n        if (!this.isPaused()) {\n            this.pause();\n        }\n        this.unAll();\n        this.buffer = null;\n        this.destroyed = true;\n\n        this.destroyWebAudio();\n    }\n\n    /**\n     * Loaded a decoded audio buffer\n     *\n     * @param {Object} buffer Decoded audio buffer to load\n     */\n    load(buffer) {\n        this.startPosition = 0;\n        this.lastPlay = this.ac.currentTime;\n        this.buffer = buffer;\n        this.createSource();\n    }\n\n    /** @private */\n    createSource() {\n        this.disconnectSource();\n        this.source = this.ac.createBufferSource();\n\n        // adjust for old browsers\n        this.source.start = this.source.start || this.source.noteGrainOn;\n        this.source.stop = this.source.stop || this.source.noteOff;\n\n        this.setPlaybackRate(this.playbackRate);\n        this.source.buffer = this.buffer;\n        this.source.connect(this.analyser);\n    }\n\n    /**\n     * @private\n     *\n     * some browsers require an explicit call to #resume before they will play back audio\n     */\n    resumeAudioContext() {\n        if (this.ac.state == 'suspended') {\n            this.ac.resume && this.ac.resume();\n        }\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean} Whether or not this backend is currently paused\n     */\n    isPaused() {\n        return this.state !== this.states[PLAYING];\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number} Duration of loaded buffer\n     */\n    getDuration() {\n        if (this.explicitDuration) {\n            return this.explicitDuration;\n        }\n        if (!this.buffer) {\n            return 0;\n        }\n        return this.buffer.duration;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     * @param {number} end Position to end at in seconds\n     * @return {{start: number, end: number}} Object containing start and end\n     * positions\n     */\n    seekTo(start, end) {\n        if (!this.buffer) {\n            return;\n        }\n\n        this.scheduledPause = null;\n\n        if (start == null) {\n            start = this.getCurrentTime();\n            if (start >= this.getDuration()) {\n                start = 0;\n            }\n        }\n        if (end == null) {\n            end = this.getDuration();\n        }\n\n        this.startPosition = start;\n        this.lastPlay = this.ac.currentTime;\n\n        if (this.state === this.states[FINISHED]) {\n            this.setState(PAUSED);\n        }\n\n        return {\n            start: start,\n            end: end\n        };\n    }\n\n    /**\n     * Get the playback position in seconds\n     *\n     * @return {number} The playback position in seconds\n     */\n    getPlayedTime() {\n        return (this.ac.currentTime - this.lastPlay) * this.playbackRate;\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {number} end When to stop relative to the beginning of a clip.\n     */\n    play(start, end) {\n        if (!this.buffer) {\n            return;\n        }\n\n        // need to re-create source on each playback\n        this.createSource();\n\n        const adjustedTime = this.seekTo(start, end);\n\n        start = adjustedTime.start;\n        end = adjustedTime.end;\n\n        this.scheduledPause = end;\n\n        this.source.start(0, start);\n\n        this.resumeAudioContext();\n\n        this.setState(PLAYING);\n\n        this.fireEvent('play');\n    }\n\n    /**\n     * Pauses the loaded audio.\n     */\n    pause() {\n        this.scheduledPause = null;\n\n        this.startPosition += this.getPlayedTime();\n        try {\n            this.source && this.source.stop(0);\n        } catch (err) {\n            // Calling stop can throw the following 2 errors:\n            // - RangeError (The value specified for when is negative.)\n            // - InvalidStateNode (The node has not been started by calling start().)\n            // We can safely ignore both errors, because:\n            // - The range is surely correct\n            // - The node might not have been started yet, in which case we just want to carry on without causing any trouble.\n        }\n\n        this.setState(PAUSED);\n\n        this.fireEvent('pause');\n    }\n\n    /**\n     * Returns the current time in seconds relative to the audio-clip's\n     * duration.\n     *\n     * @return {number} The current time in seconds\n     */\n    getCurrentTime() {\n        return this.state.getCurrentTime.call(this);\n    }\n\n    /**\n     * Returns the current playback rate. (0=no playback, 1=normal playback)\n     *\n     * @return {number} The current playback rate\n     */\n    getPlaybackRate() {\n        return this.playbackRate;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value The playback rate to use\n     */\n    setPlaybackRate(value) {\n        this.playbackRate = value || 1;\n        this.source && this.source.playbackRate.setValueAtTime(\n            this.playbackRate,\n            this.ac.currentTime\n        );\n    }\n\n    /**\n     * Set a point in seconds for playback to stop at.\n     *\n     * @param {number} end Position to end at\n     * @version 3.3.0\n     */\n    setPlayEnd(end) {\n        this.scheduledPause = end;\n    }\n}\n","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/wavesurfer.js\");\n",""],"mappings":"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A;AACA;AACA;AACA;AACA;AACA;UACe,SAASpZ,KAATA,CAAeC,EAAf,EAAmBC,MAAnB,EAA2B;YACtCiO,MAAM,CAACC,IAAP,CAAYlO,MAAZ,EAAoBgH,OAApB,CAA4B,UAAAyQ,IAAI,EAAI;cAChC,IAAI1X,EAAE,CAACD,KAAH,CAAS2X,IAAT,MAAmBzX,MAAM,CAACyX,IAAD,CAA7B,EAAqC;gBACjC1X,EAAE,CAACD,KAAH,CAAS2X,IAAT,IAAiBzX,MAAM,CAACyX,IAAD,CAAvB;cACH;YACJ,CAJD;YAKA,OAAO1X,EAAP;UACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCfD,IAAAb,IAAA,GAAAC,uBAAA,CAAApF,mBAAA;UACA,IAAAmL,OAAA,GAAApL,sBAAA,CAAAC,mBAAA;UACA,IAAA2S,SAAA,GAAA5S,sBAAA,CAAAC,mBAAA;UACA,IAAAmR,aAAA,GAAApR,sBAAA,CAAAC,mBAAA;UACA,IAAAof,UAAA,GAAArf,sBAAA,CAAAC,mBAAA;UACA,IAAAqf,qBAAA,GAAAtf,sBAAA,CAAAC,mBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAEA;AACA;AACA;;UAEA;;UACA;;UACA;;UACA;;UACA;;UACA;;UACA;;UAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;UAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;UAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;UAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;cACMsf,WAAA;YAYF;AACJ;AACA;AACA;AACA;AACA;YACI,SAAAA,YAAY9Z,MAAZ,EAAoB+Z,EAApB,EAAwB;cAAApf,eAAA,OAAAmf,WAAA;YAAE;YAC1B;AACJ;AACA;AACA;AACA;AACA;;;;;cAvBI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;cACI,SAAAE,OAAOha,MAAP,EAAe,CAAE;;;qBAcjB,SAAAwG,KAAA,EAAO,CAAE;cACT;AACJ;AACA;AACA;AACA;AACA;;;qBACI,SAAAvH,QAAA,EAAU,CAAE;;;;UAGhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;cACqBgb,UAAA,0BAAAna,cAAA;;;;YAgHjB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;YACI,SAAAma,WAAYja,MAAZ,EAAoB;cAAA,IAAAV,KAAA;cAAA3E,eAAA,OAAAsf,UAAA;cAChB3a,KAAA,GAAAW,MAAA,CAAAC,IAAA;cACA;AACR;AACA;AACA;;cALwBZ,KAAA,CAtHpB4a,aAsHoB,GAtHJ;gBACZC,YAAY,EAAE,IADF;gBAEZC,oBAAoB,EAAE,IAFV;gBAGZpO,SAAS,EAAE,CAHC;gBAIZhH,UAAU,EAAE,IAJA;gBAKZV,cAAc,EAAE,CA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"},"metadata":{},"sourceType":"script"}