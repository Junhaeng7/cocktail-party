{"ast":null,"code":"import _classCallCheck from \"/Users/Junhaeng/Desktop/cocktail/cocktail-party/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/Junhaeng/Desktop/cocktail/cocktail-party/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/Junhaeng/Desktop/cocktail/cocktail-party/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/Junhaeng/Desktop/cocktail/cocktail-party/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/Junhaeng/Desktop/cocktail/cocktail-party/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _get from \"/Users/Junhaeng/Desktop/cocktail/cocktail-party/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/Junhaeng/Desktop/cocktail/cocktail-party/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport { MixedType } from './MixedType';\nfunction toNumber(value) {\n  return +value;\n}\nexport var NumberType = /*#__PURE__*/function (_MixedType) {\n  _inherits(NumberType, _MixedType);\n  var _super = _createSuper(NumberType);\n  function NumberType(errorMessage) {\n    var _thisSuper, _this;\n    _classCallCheck(this, NumberType);\n    _this = _super.call(this, 'number');\n    _get((_thisSuper = _assertThisInitialized(_this), _getPrototypeOf(NumberType.prototype)), \"pushRule\", _thisSuper).call(_thisSuper, {\n      onValid: function onValid(value) {\n        return /^-?(?:\\d+|\\d{1,3}(?:,\\d{3})+)(?:\\.\\d+)?$/.test(value + '');\n      },\n      errorMessage: errorMessage || _this.locale.type\n    });\n    return _this;\n  }\n  _createClass(NumberType, [{\n    key: \"isInteger\",\n    value: function isInteger() {\n      var errorMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.locale.isInteger;\n      _get(_getPrototypeOf(NumberType.prototype), \"pushRule\", this).call(this, {\n        onValid: function onValid(value) {\n          return /^-?\\d+$/.test(value + '');\n        },\n        errorMessage: errorMessage\n      });\n      return this;\n    }\n  }, {\n    key: \"pattern\",\n    value: function pattern(regexp) {\n      var errorMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.locale.pattern;\n      _get(_getPrototypeOf(NumberType.prototype), \"pushRule\", this).call(this, {\n        onValid: function onValid(value) {\n          return regexp.test(value + '');\n        },\n        errorMessage: errorMessage,\n        params: {\n          regexp: regexp\n        }\n      });\n      return this;\n    }\n  }, {\n    key: \"isOneOf\",\n    value: function isOneOf(values) {\n      var errorMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.locale.isOneOf;\n      _get(_getPrototypeOf(NumberType.prototype), \"pushRule\", this).call(this, {\n        onValid: function onValid(value) {\n          return values.includes(toNumber(value));\n        },\n        errorMessage: errorMessage,\n        params: {\n          values: values\n        }\n      });\n      return this;\n    }\n  }, {\n    key: \"range\",\n    value: function range(min, max) {\n      var errorMessage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.locale.range;\n      _get(_getPrototypeOf(NumberType.prototype), \"pushRule\", this).call(this, {\n        onValid: function onValid(value) {\n          return toNumber(value) >= min && toNumber(value) <= max;\n        },\n        errorMessage: errorMessage,\n        params: {\n          min: min,\n          max: max\n        }\n      });\n      return this;\n    }\n  }, {\n    key: \"min\",\n    value: function min(_min) {\n      var errorMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.locale.min;\n      _get(_getPrototypeOf(NumberType.prototype), \"pushRule\", this).call(this, {\n        onValid: function onValid(value) {\n          return toNumber(value) >= _min;\n        },\n        errorMessage: errorMessage,\n        params: {\n          min: _min\n        }\n      });\n      return this;\n    }\n  }, {\n    key: \"max\",\n    value: function max(_max) {\n      var errorMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.locale.max;\n      _get(_getPrototypeOf(NumberType.prototype), \"pushRule\", this).call(this, {\n        onValid: function onValid(value) {\n          return toNumber(value) <= _max;\n        },\n        errorMessage: errorMessage,\n        params: {\n          max: _max\n        }\n      });\n      return this;\n    }\n  }]);\n  return NumberType;\n}(MixedType);\nexport default function getNumberType(errorMessage) {\n  return new NumberType(errorMessage);\n}","map":{"version":3,"sources":["../src/NumberType.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { MixedType } from './MixedType';\nfunction toNumber(value) {\n    return +value;\n}\nexport class NumberType extends MixedType {\n    constructor(errorMessage) {\n        super('number');\n        super.pushRule({\n            onValid: value => /^-?(?:\\d+|\\d{1,3}(?:,\\d{3})+)(?:\\.\\d+)?$/.test(value + ''),\n            errorMessage: errorMessage || this.locale.type\n        });\n    }\n    isInteger(errorMessage = this.locale.isInteger) {\n        super.pushRule({\n            onValid: value => /^-?\\d+$/.test(value + ''),\n            errorMessage\n        });\n        return this;\n    }\n    pattern(regexp, errorMessage = this.locale.pattern) {\n        super.pushRule({\n            onValid: value => regexp.test(value + ''),\n            errorMessage,\n            params: { regexp }\n        });\n        return this;\n    }\n    isOneOf(values, errorMessage = this.locale.isOneOf) {\n        super.pushRule({\n            onValid: value => values.includes(toNumber(value)),\n            errorMessage,\n            params: { values }\n        });\n        return this;\n    }\n    range(min, max, errorMessage = this.locale.range) {\n        super.pushRule({\n            onValid: value => toNumber(value) >= min && toNumber(value) <= max,\n            errorMessage,\n            params: { min, max }\n        });\n        return this;\n    }\n    min(min, errorMessage = this.locale.min) {\n        super.pushRule({\n            onValid: value => toNumber(value) >= min,\n            errorMessage,\n            params: { min }\n        });\n        return this;\n    }\n    max(max, errorMessage = this.locale.max) {\n        super.pushRule({\n            onValid: value => toNumber(value) <= max,\n            errorMessage,\n            params: { max }\n        });\n        return this;\n    }\n}\nexport default function getNumberType(errorMessage) {\n    return new NumberType(errorMessage);\n}\n//# sourceMappingURL=NumberType.js.map"]},"metadata":{},"sourceType":"module"}