{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2]) _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) {\n    ar = ar.concat(__read(arguments[i]));\n  }\n  return ar;\n};\nimport API, { GRAPHQL_AUTH_MODE } from '@aws-amplify/api';\nimport Auth from '@aws-amplify/auth';\nimport Cache from '@aws-amplify/cache';\nimport { ConsoleLogger as Logger, Hub } from '@aws-amplify/core';\nimport { CONTROL_MSG as PUBSUB_CONTROL_MSG } from '@aws-amplify/pubsub';\nimport Observable from 'zen-observable-ts';\nimport { buildSubscriptionGraphQLOperation, getAuthorizationRules, getModelAuthModes, getUserGroupsFromToken, TransformerMutationType, getTokenForCustomAuth } from '../utils';\nimport { ModelPredicateCreator } from '../../predicates';\nimport { validatePredicate } from '../../util';\nvar logger = new Logger('DataStore');\nexport var CONTROL_MSG;\n(function (CONTROL_MSG) {\n  CONTROL_MSG[\"CONNECTED\"] = \"CONNECTED\";\n})(CONTROL_MSG || (CONTROL_MSG = {}));\nexport var USER_CREDENTIALS;\n(function (USER_CREDENTIALS) {\n  USER_CREDENTIALS[USER_CREDENTIALS[\"none\"] = 0] = \"none\";\n  USER_CREDENTIALS[USER_CREDENTIALS[\"unauth\"] = 1] = \"unauth\";\n  USER_CREDENTIALS[USER_CREDENTIALS[\"auth\"] = 2] = \"auth\";\n})(USER_CREDENTIALS || (USER_CREDENTIALS = {}));\nvar SubscriptionProcessor = /** @class */function () {\n  function SubscriptionProcessor(schema, syncPredicates, amplifyConfig, authModeStrategy) {\n    if (amplifyConfig === void 0) {\n      amplifyConfig = {};\n    }\n    this.schema = schema;\n    this.syncPredicates = syncPredicates;\n    this.amplifyConfig = amplifyConfig;\n    this.authModeStrategy = authModeStrategy;\n    this.typeQuery = new WeakMap();\n    this.buffer = [];\n  }\n  SubscriptionProcessor.prototype.buildSubscription = function (namespace, model, transformerMutationType, userCredentials, cognitoTokenPayload, oidcTokenPayload, authMode) {\n    var aws_appsync_authenticationType = this.amplifyConfig.aws_appsync_authenticationType;\n    var _a = this.getAuthorizationInfo(model, userCredentials, aws_appsync_authenticationType, cognitoTokenPayload, oidcTokenPayload, authMode) || {},\n      isOwner = _a.isOwner,\n      ownerField = _a.ownerField,\n      ownerValue = _a.ownerValue;\n    var _b = __read(buildSubscriptionGraphQLOperation(namespace, model, transformerMutationType, isOwner, ownerField), 3),\n      opType = _b[0],\n      opName = _b[1],\n      query = _b[2];\n    return {\n      authMode: authMode,\n      opType: opType,\n      opName: opName,\n      query: query,\n      isOwner: isOwner,\n      ownerField: ownerField,\n      ownerValue: ownerValue\n    };\n  };\n  SubscriptionProcessor.prototype.getAuthorizationInfo = function (model, userCredentials, defaultAuthType, cognitoTokenPayload, oidcTokenPayload, authMode) {\n    if (cognitoTokenPayload === void 0) {\n      cognitoTokenPayload = {};\n    }\n    if (oidcTokenPayload === void 0) {\n      oidcTokenPayload = {};\n    }\n    var rules = getAuthorizationRules(model);\n    // Return null if user doesn't have proper credentials for private API with IAM auth\n    var iamPrivateAuth = authMode === GRAPHQL_AUTH_MODE.AWS_IAM && rules.find(function (rule) {\n      return rule.authStrategy === 'private' && rule.provider === 'iam';\n    });\n    if (iamPrivateAuth && userCredentials === USER_CREDENTIALS.unauth) {\n      return null;\n    }\n    // Group auth should take precedence over owner auth, so we are checking\n    // if rule(s) have group authorization as well as if either the Cognito or\n    // OIDC token has a groupClaim. If so, we are returning auth info before\n    // any further owner-based auth checks.\n    var groupAuthRules = rules.filter(function (rule) {\n      return rule.authStrategy === 'groups' && ['userPools', 'oidc'].includes(rule.provider);\n    });\n    var validGroup = (authMode === GRAPHQL_AUTH_MODE.AMAZON_COGNITO_USER_POOLS || authMode === GRAPHQL_AUTH_MODE.OPENID_CONNECT) && groupAuthRules.find(function (groupAuthRule) {\n      // validate token against groupClaim\n      var cognitoUserGroups = getUserGroupsFromToken(cognitoTokenPayload, groupAuthRule);\n      var oidcUserGroups = getUserGroupsFromToken(oidcTokenPayload, groupAuthRule);\n      return __spread(cognitoUserGroups, oidcUserGroups).find(function (userGroup) {\n        return groupAuthRule.groups.find(function (group) {\n          return group === userGroup;\n        });\n      });\n    });\n    if (validGroup) {\n      return {\n        authMode: authMode,\n        isOwner: false\n      };\n    }\n    // Owner auth needs additional values to be returned in order to create the subscription with\n    // the correct parameters so we are getting the owner value from the Cognito token via the\n    // identityClaim from the auth rule.\n    var cognitoOwnerAuthRules = authMode === GRAPHQL_AUTH_MODE.AMAZON_COGNITO_USER_POOLS ? rules.filter(function (rule) {\n      return rule.authStrategy === 'owner' && rule.provider === 'userPools';\n    }) : [];\n    var ownerAuthInfo;\n    cognitoOwnerAuthRules.forEach(function (ownerAuthRule) {\n      var ownerValue = cognitoTokenPayload[ownerAuthRule.identityClaim];\n      if (ownerValue) {\n        ownerAuthInfo = {\n          authMode: GRAPHQL_AUTH_MODE.AMAZON_COGNITO_USER_POOLS,\n          isOwner: ownerAuthRule.areSubscriptionsPublic ? false : true,\n          ownerField: ownerAuthRule.ownerField,\n          ownerValue: ownerValue\n        };\n      }\n    });\n    if (ownerAuthInfo) {\n      return ownerAuthInfo;\n    }\n    // Owner auth needs additional values to be returned in order to create the subscription with\n    // the correct parameters so we are getting the owner value from the OIDC token via the\n    // identityClaim from the auth rule.\n    var oidcOwnerAuthRules = authMode === GRAPHQL_AUTH_MODE.OPENID_CONNECT ? rules.filter(function (rule) {\n      return rule.authStrategy === 'owner' && rule.provider === 'oidc';\n    }) : [];\n    oidcOwnerAuthRules.forEach(function (ownerAuthRule) {\n      var ownerValue = oidcTokenPayload[ownerAuthRule.identityClaim];\n      if (ownerValue) {\n        ownerAuthInfo = {\n          authMode: GRAPHQL_AUTH_MODE.OPENID_CONNECT,\n          isOwner: ownerAuthRule.areSubscriptionsPublic ? false : true,\n          ownerField: ownerAuthRule.ownerField,\n          ownerValue: ownerValue\n        };\n      }\n    });\n    if (ownerAuthInfo) {\n      return ownerAuthInfo;\n    }\n    // Fallback: return authMode or default auth type\n    return {\n      authMode: authMode || defaultAuthType,\n      isOwner: false\n    };\n  };\n  SubscriptionProcessor.prototype.hubQueryCompletionListener = function (completed, capsule) {\n    var event = capsule.payload.event;\n    if (event === PUBSUB_CONTROL_MSG.SUBSCRIPTION_ACK) {\n      completed();\n    }\n  };\n  SubscriptionProcessor.prototype.start = function () {\n    var _this = this;\n    var ctlObservable = new Observable(function (observer) {\n      var promises = [];\n      // Creating subs for each model/operation combo so they can be unsubscribed\n      // independently, since the auth retry behavior is asynchronous.\n      var subscriptions = {};\n      var cognitoTokenPayload, oidcTokenPayload;\n      var userCredentials = USER_CREDENTIALS.none;\n      (function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var credentials, err_1, session, err_2, _a, aws_cognito_region, AuthConfig, token, federatedInfo, currentUser, payload, err_3;\n          var _this = this;\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                _b.trys.push([0, 2,, 3]);\n                return [4 /*yield*/, Auth.currentCredentials()];\n              case 1:\n                credentials = _b.sent();\n                userCredentials = credentials.authenticated ? USER_CREDENTIALS.auth : USER_CREDENTIALS.unauth;\n                return [3 /*break*/, 3];\n              case 2:\n                err_1 = _b.sent();\n                return [3 /*break*/, 3];\n              case 3:\n                _b.trys.push([3, 5,, 6]);\n                return [4 /*yield*/, Auth.currentSession()];\n              case 4:\n                session = _b.sent();\n                cognitoTokenPayload = session.getIdToken().decodePayload();\n                return [3 /*break*/, 6];\n              case 5:\n                err_2 = _b.sent();\n                return [3 /*break*/, 6];\n              case 6:\n                _b.trys.push([6, 11,, 12]);\n                _a = this.amplifyConfig, aws_cognito_region = _a.aws_cognito_region, AuthConfig = _a.Auth;\n                if (!aws_cognito_region || AuthConfig && !AuthConfig.region) {\n                  throw 'Auth is not configured';\n                }\n                token = void 0;\n                return [4 /*yield*/, Cache.getItem('federatedInfo')];\n              case 7:\n                federatedInfo = _b.sent();\n                if (!federatedInfo) return [3 /*break*/, 8];\n                token = federatedInfo.token;\n                return [3 /*break*/, 10];\n              case 8:\n                return [4 /*yield*/, Auth.currentAuthenticatedUser()];\n              case 9:\n                currentUser = _b.sent();\n                if (currentUser) {\n                  token = currentUser.token;\n                }\n                _b.label = 10;\n              case 10:\n                if (token) {\n                  payload = token.split('.')[1];\n                  oidcTokenPayload = JSON.parse(Buffer.from(payload, 'base64').toString('utf8'));\n                }\n                return [3 /*break*/, 12];\n              case 11:\n                err_3 = _b.sent();\n                logger.debug('error getting OIDC JWT', err_3);\n                return [3 /*break*/, 12];\n              case 12:\n                Object.values(this.schema.namespaces).forEach(function (namespace) {\n                  Object.values(namespace.models).filter(function (_a) {\n                    var syncable = _a.syncable;\n                    return syncable;\n                  }).forEach(function (modelDefinition) {\n                    return __awaiter(_this, void 0, void 0, function () {\n                      var modelAuthModes, readAuthModes, operations, operationAuthModeAttempts, _authModeRetry;\n                      var _a, _b, _c;\n                      var _this = this;\n                      return __generator(this, function (_d) {\n                        switch (_d.label) {\n                          case 0:\n                            return [4 /*yield*/, getModelAuthModes({\n                              authModeStrategy: this.authModeStrategy,\n                              defaultAuthMode: this.amplifyConfig.aws_appsync_authenticationType,\n                              modelName: modelDefinition.name,\n                              schema: this.schema\n                            })];\n                          case 1:\n                            modelAuthModes = _d.sent();\n                            readAuthModes = modelAuthModes.READ;\n                            subscriptions = __assign(__assign({}, subscriptions), (_a = {}, _a[modelDefinition.name] = (_b = {}, _b[TransformerMutationType.CREATE] = [], _b[TransformerMutationType.UPDATE] = [], _b[TransformerMutationType.DELETE] = [], _b), _a));\n                            operations = [TransformerMutationType.CREATE, TransformerMutationType.UPDATE, TransformerMutationType.DELETE];\n                            operationAuthModeAttempts = (_c = {}, _c[TransformerMutationType.CREATE] = 0, _c[TransformerMutationType.UPDATE] = 0, _c[TransformerMutationType.DELETE] = 0, _c);\n                            _authModeRetry = function authModeRetry(operation) {\n                              return __awaiter(_this, void 0, void 0, function () {\n                                var _a, transformerMutationType, opName, query, isOwner, ownerField, ownerValue, authMode, authToken, variables, queryObservable, subscriptionReadyCallback;\n                                var _this = this;\n                                return __generator(this, function (_b) {\n                                  switch (_b.label) {\n                                    case 0:\n                                      _a = this.buildSubscription(namespace, modelDefinition, operation, userCredentials, cognitoTokenPayload, oidcTokenPayload, readAuthModes[operationAuthModeAttempts[operation]]), transformerMutationType = _a.opType, opName = _a.opName, query = _a.query, isOwner = _a.isOwner, ownerField = _a.ownerField, ownerValue = _a.ownerValue, authMode = _a.authMode;\n                                      return [4 /*yield*/, getTokenForCustomAuth(authMode, this.amplifyConfig)];\n                                    case 1:\n                                      authToken = _b.sent();\n                                      variables = {};\n                                      if (isOwner) {\n                                        if (!ownerValue) {\n                                          observer.error('Owner field required, sign in is needed in order to perform this operation');\n                                          return [2 /*return*/];\n                                        }\n\n                                        variables[ownerField] = ownerValue;\n                                      }\n                                      logger.debug(\"Attempting \" + operation + \" subscription with authMode: \" + readAuthModes[operationAuthModeAttempts[operation]]);\n                                      queryObservable = API.graphql(__assign(__assign({\n                                        query: query,\n                                        variables: variables\n                                      }, {\n                                        authMode: authMode\n                                      }), {\n                                        authToken: authToken\n                                      }));\n                                      subscriptions[modelDefinition.name][transformerMutationType].push(queryObservable.map(function (_a) {\n                                        var value = _a.value;\n                                        return value;\n                                      }).subscribe({\n                                        next: function next(_a) {\n                                          var data = _a.data,\n                                            errors = _a.errors;\n                                          if (Array.isArray(errors) && errors.length > 0) {\n                                            var messages = errors.map(function (_a) {\n                                              var message = _a.message;\n                                              return message;\n                                            });\n                                            logger.warn(\"Skipping incoming subscription. Messages: \" + messages.join('\\n'));\n                                            _this.drainBuffer();\n                                            return;\n                                          }\n                                          var predicatesGroup = ModelPredicateCreator.getPredicates(_this.syncPredicates.get(modelDefinition), false);\n                                          var _b = data,\n                                            _c = opName,\n                                            record = _b[_c];\n                                          // checking incoming subscription against syncPredicate.\n                                          // once AppSync implements filters on subscriptions, we'll be\n                                          // able to set these when establishing the subscription instead.\n                                          // Until then, we'll need to filter inbound\n                                          if (_this.passesPredicateValidation(record, predicatesGroup)) {\n                                            _this.pushToBuffer(transformerMutationType, modelDefinition, record);\n                                          }\n                                          _this.drainBuffer();\n                                        },\n                                        error: function error(subscriptionError) {\n                                          var _a = subscriptionError.error,\n                                            _b = __read((_a === void 0 ? {\n                                              errors: []\n                                            } : _a).errors, 1),\n                                            _c = _b[0],\n                                            _d = (_c === void 0 ? {} : _c).message,\n                                            message = _d === void 0 ? '' : _d;\n                                          if (message.includes(PUBSUB_CONTROL_MSG.REALTIME_SUBSCRIPTION_INIT_ERROR) || message.includes(PUBSUB_CONTROL_MSG.CONNECTION_FAILED)) {\n                                            // Unsubscribe and clear subscription array for model/operation\n                                            subscriptions[modelDefinition.name][transformerMutationType].forEach(function (subscription) {\n                                              return subscription.unsubscribe();\n                                            });\n                                            subscriptions[modelDefinition.name][transformerMutationType] = [];\n                                            operationAuthModeAttempts[operation]++;\n                                            if (operationAuthModeAttempts[operation] >= readAuthModes.length) {\n                                              logger.debug(operation + \" subscription failed with authMode: \" + readAuthModes[operationAuthModeAttempts[operation] - 1]);\n                                              logger.warn('subscriptionError', message);\n                                              return;\n                                            } else {\n                                              logger.debug(operation + \" subscription failed with authMode: \" + readAuthModes[operationAuthModeAttempts[operation] - 1] + \". Retrying with authMode: \" + readAuthModes[operationAuthModeAttempts[operation]]);\n                                              _authModeRetry(operation);\n                                              return;\n                                            }\n                                          }\n                                          logger.warn('subscriptionError', message);\n                                          if (typeof subscriptionReadyCallback === 'function') {\n                                            subscriptionReadyCallback();\n                                          }\n                                          if (message.includes('\"errorType\":\"Unauthorized\"') || message.includes('\"errorType\":\"OperationDisabled\"')) {\n                                            return;\n                                          }\n                                          observer.error(message);\n                                        }\n                                      }));\n                                      promises.push(function () {\n                                        return __awaiter(_this, void 0, void 0, function () {\n                                          var boundFunction;\n                                          var _this = this;\n                                          return __generator(this, function (_a) {\n                                            switch (_a.label) {\n                                              case 0:\n                                                return [4 /*yield*/, new Promise(function (res) {\n                                                  subscriptionReadyCallback = res;\n                                                  boundFunction = _this.hubQueryCompletionListener.bind(_this, res);\n                                                  Hub.listen('api', boundFunction);\n                                                })];\n                                              case 1:\n                                                _a.sent();\n                                                Hub.remove('api', boundFunction);\n                                                return [2 /*return*/];\n                                            }\n                                          });\n                                        });\n                                      }());\n\n                                      return [2 /*return*/];\n                                  }\n                                });\n                              });\n                            };\n\n                            operations.forEach(function (op) {\n                              return _authModeRetry(op);\n                            });\n                            return [2 /*return*/];\n                        }\n                      });\n                    });\n                  });\n                });\n\n                Promise.all(promises).then(function () {\n                  return observer.next(CONTROL_MSG.CONNECTED);\n                });\n                return [2 /*return*/];\n            }\n          });\n        });\n      })();\n\n      return function () {\n        Object.keys(subscriptions).forEach(function (modelName) {\n          subscriptions[modelName][TransformerMutationType.CREATE].forEach(function (subscription) {\n            return subscription.unsubscribe();\n          });\n          subscriptions[modelName][TransformerMutationType.UPDATE].forEach(function (subscription) {\n            return subscription.unsubscribe();\n          });\n          subscriptions[modelName][TransformerMutationType.DELETE].forEach(function (subscription) {\n            return subscription.unsubscribe();\n          });\n        });\n      };\n    });\n    var dataObservable = new Observable(function (observer) {\n      _this.dataObserver = observer;\n      _this.drainBuffer();\n      return function () {\n        _this.dataObserver = null;\n      };\n    });\n    return [ctlObservable, dataObservable];\n  };\n  SubscriptionProcessor.prototype.passesPredicateValidation = function (record, predicatesGroup) {\n    if (!predicatesGroup) {\n      return true;\n    }\n    var predicates = predicatesGroup.predicates,\n      type = predicatesGroup.type;\n    return validatePredicate(record, type, predicates);\n  };\n  SubscriptionProcessor.prototype.pushToBuffer = function (transformerMutationType, modelDefinition, data) {\n    this.buffer.push([transformerMutationType, modelDefinition, data]);\n  };\n  SubscriptionProcessor.prototype.drainBuffer = function () {\n    var _this = this;\n    if (this.dataObserver) {\n      this.buffer.forEach(function (data) {\n        return _this.dataObserver.next(data);\n      });\n      this.buffer = [];\n    }\n  };\n  return SubscriptionProcessor;\n}();\nexport { SubscriptionProcessor };","map":{"version":3,"names":["API","GRAPHQL_AUTH_MODE","Auth","Cache","ConsoleLogger","Logger","Hub","CONTROL_MSG","PUBSUB_CONTROL_MSG","Observable","buildSubscriptionGraphQLOperation","getAuthorizationRules","getModelAuthModes","getUserGroupsFromToken","TransformerMutationType","getTokenForCustomAuth","ModelPredicateCreator","validatePredicate","logger","USER_CREDENTIALS","SubscriptionProcessor","schema","syncPredicates","amplifyConfig","authModeStrategy","typeQuery","WeakMap","buffer","prototype","buildSubscription","namespace","model","transformerMutationType","userCredentials","cognitoTokenPayload","oidcTokenPayload","authMode","aws_appsync_authenticationType","_a","getAuthorizationInfo","isOwner","ownerField","ownerValue","_b","__read","opType","opName","query","defaultAuthType","rules","iamPrivateAuth","AWS_IAM","find","rule","authStrategy","provider","unauth","groupAuthRules","filter","includes","validGroup","AMAZON_COGNITO_USER_POOLS","OPENID_CONNECT","groupAuthRule","cognitoUserGroups","oidcUserGroups","__spread","userGroup","groups","group","cognitoOwnerAuthRules","ownerAuthInfo","forEach","ownerAuthRule","identityClaim","areSubscriptionsPublic","oidcOwnerAuthRules","hubQueryCompletionListener","completed","capsule","event","payload","SUBSCRIPTION_ACK","start","_this","ctlObservable","observer","promises","subscriptions","none","__awaiter","currentCredentials","credentials","sent","authenticated","auth","currentSession","session","getIdToken","decodePayload","aws_cognito_region","AuthConfig","region","token","getItem","federatedInfo","currentAuthenticatedUser","currentUser","split","JSON","parse","Buffer","from","toString","debug","err_3","Object","values","namespaces","models","syncable","modelDefinition","defaultAuthMode","modelName","name","modelAuthModes","_d","readAuthModes","READ","__assign","CREATE","UPDATE","DELETE","operations","operationAuthModeAttempts","_c","authModeRetry","operation","authToken","variables","error","queryObservable","graphql","push","map","value","subscribe","next","data","errors","Array","isArray","length","messages","message","warn","join","drainBuffer","predicatesGroup","getPredicates","get","record","passesPredicateValidation","pushToBuffer","subscriptionError","REALTIME_SUBSCRIPTION_INIT_ERROR","CONNECTION_FAILED","subscription","unsubscribe","subscriptionReadyCallback","Promise","res","boundFunction","bind","listen","remove","op","all","then","CONNECTED","keys","dataObservable","dataObserver","predicates","type"],"sources":["../../../src/sync/processors/subscription.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module"}