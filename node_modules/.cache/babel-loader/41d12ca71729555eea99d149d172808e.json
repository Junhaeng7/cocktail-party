{"ast":null,"code":"function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (it) return (it = it.call(o)).next.bind(it);\n  if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n    if (it) o = it;\n    var i = 0;\n    return function () {\n      if (i >= o.length) return {\n        done: true\n      };\n      return {\n        done: false,\n        value: o[i++]\n      };\n    };\n  }\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nimport on from 'dom-lib/on';\nimport { useCallback, useRef, useState } from 'react';\nimport AutoScroller from './AutoScroller';\nimport { closestNode, getEdgeOffset, getScrollingParent, isContainInteractiveElement, setInlineStyles, setTransitionDuration, setTranslate3d } from './utils';\nimport { useIsMounted } from '../../utils';\nimport useManager from './useManager';\nvar useSortHelper = function useSortHelper(config) {\n  var autoScroll = config.autoScroll,\n    pressDelay = config.pressDelay,\n    transitionDuration = config.transitionDuration,\n    onSort = config.onSort,\n    onSortEnd = config.onSortEnd,\n    onSortMove = config.onSortMove,\n    onSortStart = config.onSortStart;\n  var _useState = useState(false),\n    sorting = _useState[0],\n    setSorting = _useState[1];\n  var containerRef = useRef(null);\n  var pressTimer = useRef();\n  var _useManager = useManager(),\n    listItemRegister = _useManager.listItemRegister,\n    getManagedItem = _useManager.getManagedItem,\n    getOrderedItems = _useManager.getOrderedItems;\n  var isMounted = useIsMounted();\n  /**\n   * start dragging\n   * */\n\n  var handlePress = useCallback(function (mouseDownEvent, targetNode, curManagedItem) {\n    var _activeNodeHelper;\n    if (!isMounted()) return;\n    var listItemBaseClassName = targetNode.classList[0]; // get list item base className\n\n    var helperElementClass = listItemBaseClassName + \"-helper\";\n    var holderElementClass = listItemBaseClassName + \"-holder\"; // data\n\n    var containerElement = containerRef.current;\n    var activeNode = curManagedItem.node;\n    var activeNodeOldIndex = curManagedItem.info.index;\n    var activeNodeNextIndex = curManagedItem.info.index;\n    var activeNodeHolderTranslate = {\n      x: 0,\n      y: 0\n    };\n    var animatedNodesOffset = []; // all list item offset\n    // init scroller\n\n    var scrollContainer = getScrollingParent(containerElement) || containerElement;\n    var initScroll = {\n      x: scrollContainer.scrollLeft,\n      y: scrollContainer.scrollTop\n    };\n    var autoScroller = new AutoScroller(scrollContainer, function (offset) {\n      activeNodeHolderTranslate.x += offset.left;\n      activeNodeHolderTranslate.y += offset.top;\n    });\n    var activeNodeBoundingClientRect = activeNode.getBoundingClientRect();\n    var activeNodeOffsetEdge = getEdgeOffset(activeNode, containerElement);\n    var activeNodeStyle = getComputedStyle(activeNode);\n    var activeNodeHelper = activeNode.cloneNode(true);\n    (_activeNodeHelper = activeNodeHelper) === null || _activeNodeHelper === void 0 ? void 0 : _activeNodeHelper.classList.add(helperElementClass);\n    setInlineStyles(activeNodeHelper, {\n      position: 'fixed',\n      width: activeNodeBoundingClientRect.width + \"px\",\n      height: activeNodeBoundingClientRect.height + \"px\",\n      left: activeNodeBoundingClientRect.left - parseFloat(activeNodeStyle.marginLeft) + \"px\",\n      top: activeNodeBoundingClientRect.top - parseFloat(activeNodeStyle.marginTop) + \"px\"\n    });\n    activeNode.classList.add(holderElementClass);\n    document.body.appendChild(activeNodeHelper);\n    var getContainerScrollDelta = function getContainerScrollDelta() {\n      return {\n        left: scrollContainer.scrollLeft - initScroll.x,\n        top: scrollContainer.scrollTop - initScroll.y\n      };\n    };\n    var getHolderTranslate = function getHolderTranslate() {\n      return animatedNodesOffset.reduce(function (acc, item) {\n        return {\n          x: acc.x + item.x,\n          y: acc.y + item.y\n        };\n      }, {\n        x: 0,\n        y: 0\n      });\n    };\n    var sortMouseMoveListener = on(window, 'mousemove', function (mouseOverEvent) {\n      // Update helper position\n      var offset = {\n        x: (mouseOverEvent === null || mouseOverEvent === void 0 ? void 0 : mouseOverEvent.pageX) || 0,\n        y: (mouseOverEvent === null || mouseOverEvent === void 0 ? void 0 : mouseOverEvent.pageY) || 0\n      };\n      var containerScrollDelta = getContainerScrollDelta();\n      var containerBoundingRect = scrollContainer.getBoundingClientRect();\n      activeNodeHolderTranslate = {\n        x: offset.x - mouseDownEvent.pageX,\n        y: offset.y - mouseDownEvent.pageY\n      };\n      setTranslate3d(activeNodeHelper, activeNodeHolderTranslate); // animate\n\n      activeNodeNextIndex = -1;\n      var listItemManagerRefs = getOrderedItems(curManagedItem.info.collection);\n      var sortingOffsetY = activeNodeOffsetEdge.top + activeNodeHolderTranslate.y + containerScrollDelta.top;\n      var activeNodeHeight = parseFloat(activeNodeStyle.height) || 0;\n      for (var i = 0, len = listItemManagerRefs.length; i < len; i++) {\n        var currentNode = listItemManagerRefs[i].node;\n        var currentNodeIndex = listItemManagerRefs[i].info.index;\n        var offsetY = activeNodeBoundingClientRect.height > currentNode.offsetHeight ? currentNode.offsetHeight / 2 : activeNodeBoundingClientRect.height / 2;\n        var translate = {\n          x: 0,\n          y: 0\n        }; // If we haven't cached the node's offsetTop / offsetLeft value\n\n        var curEdgeOffset = listItemManagerRefs[i].edgeOffset || getEdgeOffset(currentNode, containerElement);\n        listItemManagerRefs[i].edgeOffset = curEdgeOffset; // Get a reference to the next node\n\n        var prvNode = i > 0 && listItemManagerRefs[i - 1];\n        var nextNode = i < len - 1 && listItemManagerRefs[i + 1]; // Also cache the node's edge offset if needed.\n\n        if (prvNode && !prvNode.edgeOffset) {\n          prvNode.edgeOffset = getEdgeOffset(prvNode.node, containerElement);\n        }\n        if (nextNode && !nextNode.edgeOffset) {\n          nextNode.edgeOffset = getEdgeOffset(nextNode.node, containerElement);\n        } // If the node is the one we're currently animating, skip it\n\n        if (currentNodeIndex === activeNodeOldIndex) {\n          continue;\n        }\n        if (prvNode && currentNodeIndex > activeNodeOldIndex && sortingOffsetY + offsetY >= curEdgeOffset.top) {\n          translate.y = -activeNodeHeight;\n          animatedNodesOffset[currentNodeIndex] = {\n            x: 0,\n            y: currentNode.offsetHeight\n          };\n          activeNodeNextIndex = currentNodeIndex;\n        } else if (nextNode && currentNodeIndex < activeNodeOldIndex && sortingOffsetY <= curEdgeOffset.top + offsetY) {\n          translate.y = activeNodeHeight;\n          animatedNodesOffset[currentNodeIndex] = {\n            x: 0,\n            y: -currentNode.offsetHeight\n          };\n          if (activeNodeNextIndex === -1) {\n            activeNodeNextIndex = currentNodeIndex;\n          }\n        } else {\n          animatedNodesOffset[currentNodeIndex] = {\n            x: 0,\n            y: 0\n          };\n        }\n        setTransitionDuration(currentNode, transitionDuration);\n        setTranslate3d(currentNode, translate); // translate holder\n\n        setTranslate3d(activeNode, getHolderTranslate());\n      }\n      if (activeNodeNextIndex === -1) {\n        activeNodeNextIndex = activeNodeOldIndex;\n      } // auto scroll\n\n      if (autoScroll) {\n        autoScroller.update({\n          width: activeNodeBoundingClientRect.width,\n          height: activeNodeBoundingClientRect.height,\n          translate: activeNodeHolderTranslate,\n          maxTranslate: {\n            y: containerBoundingRect.top + containerBoundingRect.height - activeNodeBoundingClientRect.top - activeNodeBoundingClientRect.height / 2\n          },\n          minTranslate: {\n            y: containerBoundingRect.top - activeNodeBoundingClientRect.top - activeNodeBoundingClientRect.height / 2\n          }\n        });\n      }\n      onSortMove === null || onSortMove === void 0 ? void 0 : onSortMove({\n        collection: curManagedItem.info.collection,\n        node: activeNode,\n        oldIndex: activeNodeOldIndex,\n        newIndex: activeNodeNextIndex\n      }, mouseOverEvent);\n    }, {\n      passive: false\n    });\n    var sortMouseEndListener = on(window, 'mouseup', function (event) {\n      // Remove the event listeners\n      sortMouseMoveListener.off();\n      sortMouseEndListener.off();\n      var holderTranslate = getHolderTranslate();\n      var containerScrollDelta = getContainerScrollDelta();\n      setTranslate3d(activeNodeHelper, {\n        x: holderTranslate.x - containerScrollDelta.left,\n        y: holderTranslate.y - containerScrollDelta.top\n      });\n      setTransitionDuration(activeNodeHelper, transitionDuration); // wait for animation\n\n      setTimeout(function () {\n        var _activeNodeHelper2, _activeNodeHelper2$pa;\n        if (!isMounted()) return; // Remove the helper from the DOM\n\n        (_activeNodeHelper2 = activeNodeHelper) === null || _activeNodeHelper2 === void 0 ? void 0 : (_activeNodeHelper2$pa = _activeNodeHelper2.parentNode) === null || _activeNodeHelper2$pa === void 0 ? void 0 : _activeNodeHelper2$pa.removeChild(activeNodeHelper);\n        activeNodeHelper = null; // Remove redundant styles\n\n        activeNode.classList.remove(holderElementClass);\n        setTranslate3d(activeNode, null);\n        animatedNodesOffset = [];\n        for (var _iterator = _createForOfIteratorHelperLoose(getOrderedItems(curManagedItem.info.collection)), _step; !(_step = _iterator()).done;) {\n          var item = _step.value;\n          // Clear the cached offsetTop / offsetLeft value\n          item.edgeOffset = null; // Remove the transforms / transitions\n\n          var el = item.node;\n          setTranslate3d(el, null);\n          setTransitionDuration(el, null);\n        } // Stop autoScroll\n\n        autoScroller.clear(); // Update manager state\n\n        setSorting(false); // callbacks\n\n        var callbackPayload = {\n          collection: curManagedItem.info.collection,\n          node: curManagedItem.node,\n          newIndex: activeNodeNextIndex,\n          oldIndex: activeNodeOldIndex\n        };\n        onSortEnd === null || onSortEnd === void 0 ? void 0 : onSortEnd(callbackPayload, event);\n        onSort === null || onSort === void 0 ? void 0 : onSort(callbackPayload, event);\n      }, transitionDuration);\n    }, {\n      passive: false\n    });\n    setSorting(true); // start callback\n\n    onSortStart === null || onSortStart === void 0 ? void 0 : onSortStart({\n      collection: curManagedItem.info.collection,\n      node: activeNode,\n      oldIndex: activeNodeOldIndex,\n      newIndex: activeNodeNextIndex\n    }, mouseDownEvent.nativeEvent);\n  }, [autoScroll, getOrderedItems, isMounted, onSort, onSortEnd, onSortMove, onSortStart, transitionDuration]);\n  /**\n   * Determine whether to start dragging\n   * */\n\n  var handleStart = useCallback(function (mouseDownEvent) {\n    var triggeredNode = mouseDownEvent.target;\n    var targetNode = closestNode(triggeredNode, function (el) {\n      return Boolean(getManagedItem(el));\n    });\n    var curManagedItem = getManagedItem(targetNode);\n    if (\n    // is not secondary button pressed\n    mouseDownEvent.button !== 2 &&\n    // is list item\n    Boolean(curManagedItem) && !curManagedItem.info.disabled &&\n    // is not sorting\n    !sorting &&\n    // is valid node\n    targetNode instanceof HTMLElement &&\n    // excludes interactive elements\n    !targetNode.contains(closestNode(triggeredNode, isContainInteractiveElement))) {\n      mouseDownEvent.preventDefault();\n      pressTimer.current = setTimeout(handlePress, pressDelay, mouseDownEvent, targetNode, curManagedItem);\n    }\n  }, [getManagedItem, handlePress, pressDelay, sorting]);\n  /**\n   * Clear timer after drag\n   * */\n\n  var handleEnd = useCallback(function () {\n    return clearTimeout(pressTimer.current);\n  }, []);\n  return {\n    handleStart: handleStart,\n    handleEnd: handleEnd,\n    containerRef: containerRef,\n    sorting: sorting,\n    register: listItemRegister\n  };\n};\nexport default useSortHelper;","map":{"version":3,"names":["_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","call","next","bind","Array","isArray","_unsupportedIterableToArray","length","i","done","value","TypeError","minLen","_arrayLikeToArray","n","Object","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","on","useCallback","useRef","useState","AutoScroller","closestNode","getEdgeOffset","getScrollingParent","isContainInteractiveElement","setInlineStyles","setTransitionDuration","setTranslate3d","useIsMounted","useManager","useSortHelper","config","autoScroll","pressDelay","transitionDuration","onSort","onSortEnd","onSortMove","onSortStart","_useState","sorting","setSorting","containerRef","pressTimer","_useManager","listItemRegister","getManagedItem","getOrderedItems","isMounted","handlePress","mouseDownEvent","targetNode","curManagedItem","_activeNodeHelper","listItemBaseClassName","classList","helperElementClass","holderElementClass","containerElement","current","activeNode","node","activeNodeOldIndex","info","index","activeNodeNextIndex","activeNodeHolderTranslate","x","y","animatedNodesOffset","scrollContainer","initScroll","scrollLeft","scrollTop","autoScroller","offset","left","top","activeNodeBoundingClientRect","getBoundingClientRect","activeNodeOffsetEdge","activeNodeStyle","getComputedStyle","activeNodeHelper","cloneNode","add","position","width","height","parseFloat","marginLeft","marginTop","document","body","appendChild","getContainerScrollDelta","getHolderTranslate","reduce","acc","item","sortMouseMoveListener","window","mouseOverEvent","pageX","pageY","containerScrollDelta","containerBoundingRect","listItemManagerRefs","collection","sortingOffsetY","activeNodeHeight","currentNode","currentNodeIndex","offsetY","offsetHeight","translate","curEdgeOffset","edgeOffset","prvNode","nextNode","update","maxTranslate","minTranslate","oldIndex","newIndex","passive","sortMouseEndListener","event","off","holderTranslate","setTimeout","_activeNodeHelper2","_activeNodeHelper2$pa","parentNode","removeChild","remove","_iterator","_step","el","clear","callbackPayload","nativeEvent","handleStart","triggeredNode","target","Boolean","button","disabled","HTMLElement","contains","preventDefault","handleEnd","clearTimeout","register"],"sources":["/Users/Junhaeng/untitled folder/junior-design/amplifyapp/node_modules/rsuite/esm/List/helper/useSortHelper.js"],"sourcesContent":["function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport on from 'dom-lib/on';\nimport { useCallback, useRef, useState } from 'react';\nimport AutoScroller from './AutoScroller';\nimport { closestNode, getEdgeOffset, getScrollingParent, isContainInteractiveElement, setInlineStyles, setTransitionDuration, setTranslate3d } from './utils';\nimport { useIsMounted } from '../../utils';\nimport useManager from './useManager';\n\nvar useSortHelper = function useSortHelper(config) {\n  var autoScroll = config.autoScroll,\n      pressDelay = config.pressDelay,\n      transitionDuration = config.transitionDuration,\n      onSort = config.onSort,\n      onSortEnd = config.onSortEnd,\n      onSortMove = config.onSortMove,\n      onSortStart = config.onSortStart;\n\n  var _useState = useState(false),\n      sorting = _useState[0],\n      setSorting = _useState[1];\n\n  var containerRef = useRef(null);\n  var pressTimer = useRef();\n\n  var _useManager = useManager(),\n      listItemRegister = _useManager.listItemRegister,\n      getManagedItem = _useManager.getManagedItem,\n      getOrderedItems = _useManager.getOrderedItems;\n\n  var isMounted = useIsMounted();\n  /**\n   * start dragging\n   * */\n\n  var handlePress = useCallback(function (mouseDownEvent, targetNode, curManagedItem) {\n    var _activeNodeHelper;\n\n    if (!isMounted()) return;\n    var listItemBaseClassName = targetNode.classList[0]; // get list item base className\n\n    var helperElementClass = listItemBaseClassName + \"-helper\";\n    var holderElementClass = listItemBaseClassName + \"-holder\"; // data\n\n    var containerElement = containerRef.current;\n    var activeNode = curManagedItem.node;\n    var activeNodeOldIndex = curManagedItem.info.index;\n    var activeNodeNextIndex = curManagedItem.info.index;\n    var activeNodeHolderTranslate = {\n      x: 0,\n      y: 0\n    };\n    var animatedNodesOffset = []; // all list item offset\n    // init scroller\n\n    var scrollContainer = getScrollingParent(containerElement) || containerElement;\n    var initScroll = {\n      x: scrollContainer.scrollLeft,\n      y: scrollContainer.scrollTop\n    };\n    var autoScroller = new AutoScroller(scrollContainer, function (offset) {\n      activeNodeHolderTranslate.x += offset.left;\n      activeNodeHolderTranslate.y += offset.top;\n    });\n    var activeNodeBoundingClientRect = activeNode.getBoundingClientRect();\n    var activeNodeOffsetEdge = getEdgeOffset(activeNode, containerElement);\n    var activeNodeStyle = getComputedStyle(activeNode);\n    var activeNodeHelper = activeNode.cloneNode(true);\n    (_activeNodeHelper = activeNodeHelper) === null || _activeNodeHelper === void 0 ? void 0 : _activeNodeHelper.classList.add(helperElementClass);\n    setInlineStyles(activeNodeHelper, {\n      position: 'fixed',\n      width: activeNodeBoundingClientRect.width + \"px\",\n      height: activeNodeBoundingClientRect.height + \"px\",\n      left: activeNodeBoundingClientRect.left - parseFloat(activeNodeStyle.marginLeft) + \"px\",\n      top: activeNodeBoundingClientRect.top - parseFloat(activeNodeStyle.marginTop) + \"px\"\n    });\n    activeNode.classList.add(holderElementClass);\n    document.body.appendChild(activeNodeHelper);\n\n    var getContainerScrollDelta = function getContainerScrollDelta() {\n      return {\n        left: scrollContainer.scrollLeft - initScroll.x,\n        top: scrollContainer.scrollTop - initScroll.y\n      };\n    };\n\n    var getHolderTranslate = function getHolderTranslate() {\n      return animatedNodesOffset.reduce(function (acc, item) {\n        return {\n          x: acc.x + item.x,\n          y: acc.y + item.y\n        };\n      }, {\n        x: 0,\n        y: 0\n      });\n    };\n\n    var sortMouseMoveListener = on(window, 'mousemove', function (mouseOverEvent) {\n      // Update helper position\n      var offset = {\n        x: (mouseOverEvent === null || mouseOverEvent === void 0 ? void 0 : mouseOverEvent.pageX) || 0,\n        y: (mouseOverEvent === null || mouseOverEvent === void 0 ? void 0 : mouseOverEvent.pageY) || 0\n      };\n      var containerScrollDelta = getContainerScrollDelta();\n      var containerBoundingRect = scrollContainer.getBoundingClientRect();\n      activeNodeHolderTranslate = {\n        x: offset.x - mouseDownEvent.pageX,\n        y: offset.y - mouseDownEvent.pageY\n      };\n      setTranslate3d(activeNodeHelper, activeNodeHolderTranslate); // animate\n\n      activeNodeNextIndex = -1;\n      var listItemManagerRefs = getOrderedItems(curManagedItem.info.collection);\n      var sortingOffsetY = activeNodeOffsetEdge.top + activeNodeHolderTranslate.y + containerScrollDelta.top;\n      var activeNodeHeight = parseFloat(activeNodeStyle.height) || 0;\n\n      for (var i = 0, len = listItemManagerRefs.length; i < len; i++) {\n        var currentNode = listItemManagerRefs[i].node;\n        var currentNodeIndex = listItemManagerRefs[i].info.index;\n        var offsetY = activeNodeBoundingClientRect.height > currentNode.offsetHeight ? currentNode.offsetHeight / 2 : activeNodeBoundingClientRect.height / 2;\n        var translate = {\n          x: 0,\n          y: 0\n        }; // If we haven't cached the node's offsetTop / offsetLeft value\n\n        var curEdgeOffset = listItemManagerRefs[i].edgeOffset || getEdgeOffset(currentNode, containerElement);\n        listItemManagerRefs[i].edgeOffset = curEdgeOffset; // Get a reference to the next node\n\n        var prvNode = i > 0 && listItemManagerRefs[i - 1];\n        var nextNode = i < len - 1 && listItemManagerRefs[i + 1]; // Also cache the node's edge offset if needed.\n\n        if (prvNode && !prvNode.edgeOffset) {\n          prvNode.edgeOffset = getEdgeOffset(prvNode.node, containerElement);\n        }\n\n        if (nextNode && !nextNode.edgeOffset) {\n          nextNode.edgeOffset = getEdgeOffset(nextNode.node, containerElement);\n        } // If the node is the one we're currently animating, skip it\n\n\n        if (currentNodeIndex === activeNodeOldIndex) {\n          continue;\n        }\n\n        if (prvNode && currentNodeIndex > activeNodeOldIndex && sortingOffsetY + offsetY >= curEdgeOffset.top) {\n          translate.y = -activeNodeHeight;\n          animatedNodesOffset[currentNodeIndex] = {\n            x: 0,\n            y: currentNode.offsetHeight\n          };\n          activeNodeNextIndex = currentNodeIndex;\n        } else if (nextNode && currentNodeIndex < activeNodeOldIndex && sortingOffsetY <= curEdgeOffset.top + offsetY) {\n          translate.y = activeNodeHeight;\n          animatedNodesOffset[currentNodeIndex] = {\n            x: 0,\n            y: -currentNode.offsetHeight\n          };\n\n          if (activeNodeNextIndex === -1) {\n            activeNodeNextIndex = currentNodeIndex;\n          }\n        } else {\n          animatedNodesOffset[currentNodeIndex] = {\n            x: 0,\n            y: 0\n          };\n        }\n\n        setTransitionDuration(currentNode, transitionDuration);\n        setTranslate3d(currentNode, translate); // translate holder\n\n        setTranslate3d(activeNode, getHolderTranslate());\n      }\n\n      if (activeNodeNextIndex === -1) {\n        activeNodeNextIndex = activeNodeOldIndex;\n      } // auto scroll\n\n\n      if (autoScroll) {\n        autoScroller.update({\n          width: activeNodeBoundingClientRect.width,\n          height: activeNodeBoundingClientRect.height,\n          translate: activeNodeHolderTranslate,\n          maxTranslate: {\n            y: containerBoundingRect.top + containerBoundingRect.height - activeNodeBoundingClientRect.top - activeNodeBoundingClientRect.height / 2\n          },\n          minTranslate: {\n            y: containerBoundingRect.top - activeNodeBoundingClientRect.top - activeNodeBoundingClientRect.height / 2\n          }\n        });\n      }\n\n      onSortMove === null || onSortMove === void 0 ? void 0 : onSortMove({\n        collection: curManagedItem.info.collection,\n        node: activeNode,\n        oldIndex: activeNodeOldIndex,\n        newIndex: activeNodeNextIndex\n      }, mouseOverEvent);\n    }, {\n      passive: false\n    });\n    var sortMouseEndListener = on(window, 'mouseup', function (event) {\n      // Remove the event listeners\n      sortMouseMoveListener.off();\n      sortMouseEndListener.off();\n      var holderTranslate = getHolderTranslate();\n      var containerScrollDelta = getContainerScrollDelta();\n      setTranslate3d(activeNodeHelper, {\n        x: holderTranslate.x - containerScrollDelta.left,\n        y: holderTranslate.y - containerScrollDelta.top\n      });\n      setTransitionDuration(activeNodeHelper, transitionDuration); // wait for animation\n\n      setTimeout(function () {\n        var _activeNodeHelper2, _activeNodeHelper2$pa;\n\n        if (!isMounted()) return; // Remove the helper from the DOM\n\n        (_activeNodeHelper2 = activeNodeHelper) === null || _activeNodeHelper2 === void 0 ? void 0 : (_activeNodeHelper2$pa = _activeNodeHelper2.parentNode) === null || _activeNodeHelper2$pa === void 0 ? void 0 : _activeNodeHelper2$pa.removeChild(activeNodeHelper);\n        activeNodeHelper = null; // Remove redundant styles\n\n        activeNode.classList.remove(holderElementClass);\n        setTranslate3d(activeNode, null);\n        animatedNodesOffset = [];\n\n        for (var _iterator = _createForOfIteratorHelperLoose(getOrderedItems(curManagedItem.info.collection)), _step; !(_step = _iterator()).done;) {\n          var item = _step.value;\n          // Clear the cached offsetTop / offsetLeft value\n          item.edgeOffset = null; // Remove the transforms / transitions\n\n          var el = item.node;\n          setTranslate3d(el, null);\n          setTransitionDuration(el, null);\n        } // Stop autoScroll\n\n\n        autoScroller.clear(); // Update manager state\n\n        setSorting(false); // callbacks\n\n        var callbackPayload = {\n          collection: curManagedItem.info.collection,\n          node: curManagedItem.node,\n          newIndex: activeNodeNextIndex,\n          oldIndex: activeNodeOldIndex\n        };\n        onSortEnd === null || onSortEnd === void 0 ? void 0 : onSortEnd(callbackPayload, event);\n        onSort === null || onSort === void 0 ? void 0 : onSort(callbackPayload, event);\n      }, transitionDuration);\n    }, {\n      passive: false\n    });\n    setSorting(true); // start callback\n\n    onSortStart === null || onSortStart === void 0 ? void 0 : onSortStart({\n      collection: curManagedItem.info.collection,\n      node: activeNode,\n      oldIndex: activeNodeOldIndex,\n      newIndex: activeNodeNextIndex\n    }, mouseDownEvent.nativeEvent);\n  }, [autoScroll, getOrderedItems, isMounted, onSort, onSortEnd, onSortMove, onSortStart, transitionDuration]);\n  /**\n   * Determine whether to start dragging\n   * */\n\n  var handleStart = useCallback(function (mouseDownEvent) {\n    var triggeredNode = mouseDownEvent.target;\n    var targetNode = closestNode(triggeredNode, function (el) {\n      return Boolean(getManagedItem(el));\n    });\n    var curManagedItem = getManagedItem(targetNode);\n\n    if ( // is not secondary button pressed\n    mouseDownEvent.button !== 2 && // is list item\n    Boolean(curManagedItem) && !curManagedItem.info.disabled && // is not sorting\n    !sorting && // is valid node\n    targetNode instanceof HTMLElement && // excludes interactive elements\n    !targetNode.contains(closestNode(triggeredNode, isContainInteractiveElement))) {\n      mouseDownEvent.preventDefault();\n      pressTimer.current = setTimeout(handlePress, pressDelay, mouseDownEvent, targetNode, curManagedItem);\n    }\n  }, [getManagedItem, handlePress, pressDelay, sorting]);\n  /**\n   * Clear timer after drag\n   * */\n\n  var handleEnd = useCallback(function () {\n    return clearTimeout(pressTimer.current);\n  }, []);\n  return {\n    handleStart: handleStart,\n    handleEnd: handleEnd,\n    containerRef: containerRef,\n    sorting: sorting,\n    register: listItemRegister\n  };\n};\n\nexport default useSortHelper;"],"mappings":"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"},"metadata":{},"sourceType":"module"}