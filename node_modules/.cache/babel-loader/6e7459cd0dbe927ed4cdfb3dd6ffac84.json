{"ast":null,"code":"/**\n * formatErrorMessage('${name} is a required field', {name: 'email'});\n * output: 'email is a required field'\n */\nexport default function formatErrorMessage(errorMessage, params) {\n  if (typeof errorMessage === 'string') {\n    return errorMessage.replace(/\\$\\{\\s*(\\w+)\\s*\\}/g, function (_, key) {\n      return (params === null || params === void 0 ? void 0 : params[key]) || \"[\".concat(key, \"]\");\n    });\n  }\n  return errorMessage;\n}","map":{"version":3,"sources":["../../src/utils/formatErrorMessage.ts"],"names":[],"mappings":"AAAA;;;AAGG;AACH,eAAc,SAAU,kBAAkB,CAAI,YAAyB,EAAE,MAAY,EAAA;EACnF,IAAI,OAAO,YAAY,KAAK,QAAQ,EAAE;IACpC,OAAO,YAAY,CAAC,OAAO,CAAC,oBAAoB,EAAE,UAAC,CAAC,EAAE,GAAG,EAAI;MAC3D,OAAO,CAAA,MAAM,KAAA,IAAA,IAAN,MAAM,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAN,MAAM,CAAG,GAAG,CAAC,SAAA,MAAA,CAAQ,GAAG,MAAG;IACpC,CAAC,CAAC;EACH;EAED,OAAO,YAAY;AACrB","sourceRoot":"","sourcesContent":["/**\n * formatErrorMessage('${name} is a required field', {name: 'email'});\n * output: 'email is a required field'\n */\nexport default function formatErrorMessage(errorMessage, params) {\n    if (typeof errorMessage === 'string') {\n        return errorMessage.replace(/\\$\\{\\s*(\\w+)\\s*\\}/g, (_, key) => {\n            return (params === null || params === void 0 ? void 0 : params[key]) || `[${key}]`;\n        });\n    }\n    return errorMessage;\n}\n//# sourceMappingURL=formatErrorMessage.js.map"]},"metadata":{},"sourceType":"module"}