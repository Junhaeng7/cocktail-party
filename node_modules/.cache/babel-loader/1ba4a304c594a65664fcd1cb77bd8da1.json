{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport flatten from 'lodash/flatten';\nimport ColumnGroup from '../ColumnGroup';\n/**\n * Get the columns ReactElement array.\n * - Handling the case where there is an array of <Column> in children.\n * - Filter empty items in children.\n */\n\nfunction getTableColumns(children) {\n  if (!Array.isArray(children)) {\n    return children;\n  }\n  var flattenColumns = flatten(children).map(function (column) {\n    if ((column === null || column === void 0 ? void 0 : column.type) === ColumnGroup) {\n      var _column$props = column === null || column === void 0 ? void 0 : column.props,\n        header = _column$props.header,\n        childColumns = _column$props.children,\n        align = _column$props.align,\n        fixed = _column$props.fixed,\n        verticalAlign = _column$props.verticalAlign,\n        groupHeaderHeight = _column$props.groupHeaderHeight;\n      return childColumns.map(function (childColumn, index) {\n        // Overwrite the props set by ColumnGroup to Column.\n        var groupCellProps = _extends({}, childColumn === null || childColumn === void 0 ? void 0 : childColumn.props, {\n          groupHeaderHeight: groupHeaderHeight,\n          align: align,\n          fixed: fixed,\n          verticalAlign: verticalAlign\n        });\n        /**\n         * Set attributes for the first column in the group:\n         * @field groupCount: The number of grouping sub-items.\n         * @field groupHeader: Group header title.\n         * @field resizable: Set to not resizable.\n         */\n\n        if (index === 0) {\n          groupCellProps.groupCount = childColumns.length;\n          groupCellProps.groupHeader = header;\n          groupCellProps.resizable = false;\n        }\n        return /*#__PURE__*/React.cloneElement(childColumn, groupCellProps);\n      });\n    }\n    return column;\n  }); // Flatten the array in Columns into a one-dimensional array, and calculate lastColumn and firstColumn.\n\n  return flatten(flattenColumns).filter(function (col) {\n    return col;\n  });\n}\nexport default getTableColumns;","map":{"version":3,"names":["_extends","React","flatten","ColumnGroup","getTableColumns","children","Array","isArray","flattenColumns","map","column","type","_column$props","props","header","childColumns","align","fixed","verticalAlign","groupHeaderHeight","childColumn","index","groupCellProps","groupCount","length","groupHeader","resizable","cloneElement","filter","col"],"sources":["/Users/Junhaeng/untitled folder/junior-design/amplifyapp/node_modules/rsuite-table/es/utils/getTableColumns.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport flatten from 'lodash/flatten';\nimport ColumnGroup from '../ColumnGroup';\n/**\n * Get the columns ReactElement array.\n * - Handling the case where there is an array of <Column> in children.\n * - Filter empty items in children.\n */\n\nfunction getTableColumns(children) {\n  if (!Array.isArray(children)) {\n    return children;\n  }\n\n  var flattenColumns = flatten(children).map(function (column) {\n    if ((column === null || column === void 0 ? void 0 : column.type) === ColumnGroup) {\n      var _column$props = column === null || column === void 0 ? void 0 : column.props,\n          header = _column$props.header,\n          childColumns = _column$props.children,\n          align = _column$props.align,\n          fixed = _column$props.fixed,\n          verticalAlign = _column$props.verticalAlign,\n          groupHeaderHeight = _column$props.groupHeaderHeight;\n\n      return childColumns.map(function (childColumn, index) {\n        // Overwrite the props set by ColumnGroup to Column.\n        var groupCellProps = _extends({}, childColumn === null || childColumn === void 0 ? void 0 : childColumn.props, {\n          groupHeaderHeight: groupHeaderHeight,\n          align: align,\n          fixed: fixed,\n          verticalAlign: verticalAlign\n        });\n        /**\n         * Set attributes for the first column in the group:\n         * @field groupCount: The number of grouping sub-items.\n         * @field groupHeader: Group header title.\n         * @field resizable: Set to not resizable.\n         */\n\n\n        if (index === 0) {\n          groupCellProps.groupCount = childColumns.length;\n          groupCellProps.groupHeader = header;\n          groupCellProps.resizable = false;\n        }\n\n        return /*#__PURE__*/React.cloneElement(childColumn, groupCellProps);\n      });\n    }\n\n    return column;\n  }); // Flatten the array in Columns into a one-dimensional array, and calculate lastColumn and firstColumn.\n\n  return flatten(flattenColumns).filter(function (col) {\n    return col;\n  });\n}\n\nexport default getTableColumns;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,gBAAgB;AACpC,OAAOC,WAAW,MAAM,gBAAgB;AACxC;AACA;AACA;AACA;AACA;;AAEA,SAASC,eAAeA,CAACC,QAAQ,EAAE;EACjC,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,EAAE;IAC5B,OAAOA,QAAQ;EACjB;EAEA,IAAIG,cAAc,GAAGN,OAAO,CAACG,QAAQ,CAAC,CAACI,GAAG,CAAC,UAAUC,MAAM,EAAE;IAC3D,IAAI,CAACA,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACC,IAAI,MAAMR,WAAW,EAAE;MACjF,IAAIS,aAAa,GAAGF,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACG,KAAK;QAC5EC,MAAM,GAAGF,aAAa,CAACE,MAAM;QAC7BC,YAAY,GAAGH,aAAa,CAACP,QAAQ;QACrCW,KAAK,GAAGJ,aAAa,CAACI,KAAK;QAC3BC,KAAK,GAAGL,aAAa,CAACK,KAAK;QAC3BC,aAAa,GAAGN,aAAa,CAACM,aAAa;QAC3CC,iBAAiB,GAAGP,aAAa,CAACO,iBAAiB;MAEvD,OAAOJ,YAAY,CAACN,GAAG,CAAC,UAAUW,WAAW,EAAEC,KAAK,EAAE;QACpD;QACA,IAAIC,cAAc,GAAGtB,QAAQ,CAAC,CAAC,CAAC,EAAEoB,WAAW,KAAK,IAAI,IAAIA,WAAW,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,WAAW,CAACP,KAAK,EAAE;UAC7GM,iBAAiB,EAAEA,iBAAiB;UACpCH,KAAK,EAAEA,KAAK;UACZC,KAAK,EAAEA,KAAK;UACZC,aAAa,EAAEA;QACjB,CAAC,CAAC;QACF;AACR;AACA;AACA;AACA;AACA;;QAGQ,IAAIG,KAAK,KAAK,CAAC,EAAE;UACfC,cAAc,CAACC,UAAU,GAAGR,YAAY,CAACS,MAAM;UAC/CF,cAAc,CAACG,WAAW,GAAGX,MAAM;UACnCQ,cAAc,CAACI,SAAS,GAAG,KAAK;QAClC;QAEA,OAAO,aAAazB,KAAK,CAAC0B,YAAY,CAACP,WAAW,EAAEE,cAAc,CAAC;MACrE,CAAC,CAAC;IACJ;IAEA,OAAOZ,MAAM;EACf,CAAC,CAAC,CAAC,CAAC;;EAEJ,OAAOR,OAAO,CAACM,cAAc,CAAC,CAACoB,MAAM,CAAC,UAAUC,GAAG,EAAE;IACnD,OAAOA,GAAG;EACZ,CAAC,CAAC;AACJ;AAEA,eAAezB,eAAe"},"metadata":{},"sourceType":"module"}