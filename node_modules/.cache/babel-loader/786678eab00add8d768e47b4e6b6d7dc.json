{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2]) _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) {\n    ar = ar.concat(__read(arguments[i]));\n  }\n  return ar;\n};\nimport { browserOrNode, ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { CONTROL_MSG as PUBSUB_CONTROL_MSG } from '@aws-amplify/pubsub';\nimport Observable from 'zen-observable-ts';\nimport { ModelPredicateCreator } from '../predicates';\nimport { OpType } from '../types';\nimport { exhaustiveCheck, getNow, SYNC, USER } from '../util';\nimport DataStoreConnectivity from './datastoreConnectivity';\nimport { ModelMerger } from './merger';\nimport { MutationEventOutbox } from './outbox';\nimport { MutationProcessor } from './processors/mutation';\nimport { CONTROL_MSG, SubscriptionProcessor } from './processors/subscription';\nimport { SyncProcessor } from './processors/sync';\nimport { createMutationInstanceFromModelOperation, predicateToGraphQLCondition } from './utils';\nvar isNode = browserOrNode().isNode;\nvar logger = new Logger('DataStore');\nvar ownSymbol = Symbol('sync');\nexport var ControlMessage;\n(function (ControlMessage) {\n  ControlMessage[\"SYNC_ENGINE_STORAGE_SUBSCRIBED\"] = \"storageSubscribed\";\n  ControlMessage[\"SYNC_ENGINE_SUBSCRIPTIONS_ESTABLISHED\"] = \"subscriptionsEstablished\";\n  ControlMessage[\"SYNC_ENGINE_SYNC_QUERIES_STARTED\"] = \"syncQueriesStarted\";\n  ControlMessage[\"SYNC_ENGINE_SYNC_QUERIES_READY\"] = \"syncQueriesReady\";\n  ControlMessage[\"SYNC_ENGINE_MODEL_SYNCED\"] = \"modelSynced\";\n  ControlMessage[\"SYNC_ENGINE_OUTBOX_MUTATION_ENQUEUED\"] = \"outboxMutationEnqueued\";\n  ControlMessage[\"SYNC_ENGINE_OUTBOX_MUTATION_PROCESSED\"] = \"outboxMutationProcessed\";\n  ControlMessage[\"SYNC_ENGINE_OUTBOX_STATUS\"] = \"outboxStatus\";\n  ControlMessage[\"SYNC_ENGINE_NETWORK_STATUS\"] = \"networkStatus\";\n  ControlMessage[\"SYNC_ENGINE_READY\"] = \"ready\";\n})(ControlMessage || (ControlMessage = {}));\nvar SyncEngine = /** @class */function () {\n  function SyncEngine(schema, namespaceResolver, modelClasses, userModelClasses, storage, modelInstanceCreator, maxRecordsToSync, syncPageSize, conflictHandler, errorHandler, syncPredicates, amplifyConfig, authModeStrategy) {\n    if (amplifyConfig === void 0) {\n      amplifyConfig = {};\n    }\n    this.schema = schema;\n    this.namespaceResolver = namespaceResolver;\n    this.modelClasses = modelClasses;\n    this.userModelClasses = userModelClasses;\n    this.storage = storage;\n    this.modelInstanceCreator = modelInstanceCreator;\n    this.maxRecordsToSync = maxRecordsToSync;\n    this.syncPageSize = syncPageSize;\n    this.syncPredicates = syncPredicates;\n    this.amplifyConfig = amplifyConfig;\n    this.authModeStrategy = authModeStrategy;\n    this.online = false;\n    this.modelSyncedStatus = new WeakMap();\n    var MutationEvent = this.modelClasses['MutationEvent'];\n    this.outbox = new MutationEventOutbox(this.schema, MutationEvent, modelInstanceCreator, ownSymbol);\n    this.modelMerger = new ModelMerger(this.outbox, ownSymbol);\n    this.syncQueriesProcessor = new SyncProcessor(this.schema, this.syncPredicates, this.amplifyConfig, this.authModeStrategy);\n    this.subscriptionsProcessor = new SubscriptionProcessor(this.schema, this.syncPredicates, this.amplifyConfig, this.authModeStrategy);\n    this.mutationsProcessor = new MutationProcessor(this.schema, this.storage, this.userModelClasses, this.outbox, this.modelInstanceCreator, MutationEvent, this.amplifyConfig, this.authModeStrategy, conflictHandler, errorHandler);\n    this.datastoreConnectivity = new DataStoreConnectivity();\n  }\n  SyncEngine.prototype.getModelSyncedStatus = function (modelConstructor) {\n    return this.modelSyncedStatus.get(modelConstructor);\n  };\n  SyncEngine.prototype.start = function (params) {\n    var _this = this;\n    return new Observable(function (observer) {\n      logger.log('starting sync engine...');\n      var subscriptions = [];\n      (function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var err_1, startPromise, hasMutationsInOutbox;\n          var _this = this;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                _a.trys.push([0, 2,, 3]);\n                return [4 /*yield*/, this.setupModels(params)];\n              case 1:\n                _a.sent();\n                return [3 /*break*/, 3];\n              case 2:\n                err_1 = _a.sent();\n                observer.error(err_1);\n                return [2 /*return*/];\n              case 3:\n                startPromise = new Promise(function (resolve) {\n                  _this.datastoreConnectivity.status().subscribe(function (_a) {\n                    var online = _a.online;\n                    return __awaiter(_this, void 0, void 0, function () {\n                      var ctlSubsObservable_1, dataSubsObservable, err_2, error_1;\n                      var _b;\n                      var _this = this;\n                      return __generator(this, function (_c) {\n                        switch (_c.label) {\n                          case 0:\n                            if (!(online && !this.online)) return [3 /*break*/, 10];\n                            this.online = online;\n                            observer.next({\n                              type: ControlMessage.SYNC_ENGINE_NETWORK_STATUS,\n                              data: {\n                                active: this.online\n                              }\n                            });\n                            dataSubsObservable = void 0;\n                            if (!isNode) return [3 /*break*/, 1];\n                            logger.warn('Realtime disabled when in a server-side environment');\n                            return [3 /*break*/, 6];\n                          case 1:\n                            //#region GraphQL Subscriptions\n                            _b = __read(this.subscriptionsProcessor.start(), 2),\n                            // const ctlObservable: Observable<CONTROL_MSG>\n                            ctlSubsObservable_1 = _b[0],\n                            // const dataObservable: Observable<[TransformerMutationType, SchemaModel, Readonly<{\n                            // id: string;\n                            // } & Record<string, any>>]>\n                            dataSubsObservable = _b[1];\n                            _c.label = 2;\n                          case 2:\n                            _c.trys.push([2, 4,, 5]);\n                            return [4 /*yield*/, new Promise(function (resolve, reject) {\n                              var ctlSubsSubscription = ctlSubsObservable_1.subscribe({\n                                next: function next(msg) {\n                                  if (msg === CONTROL_MSG.CONNECTED) {\n                                    resolve();\n                                  }\n                                },\n                                error: function error(err) {\n                                  reject(err);\n                                  var handleDisconnect = _this.disconnectionHandler();\n                                  handleDisconnect(err);\n                                }\n                              });\n                              subscriptions.push(ctlSubsSubscription);\n                            })];\n                          case 3:\n                            _c.sent();\n                            return [3 /*break*/, 5];\n                          case 4:\n                            err_2 = _c.sent();\n                            observer.error(err_2);\n                            return [2 /*return*/];\n                          case 5:\n                            logger.log('Realtime ready');\n                            observer.next({\n                              type: ControlMessage.SYNC_ENGINE_SUBSCRIPTIONS_ESTABLISHED\n                            });\n                            _c.label = 6;\n                          case 6:\n                            _c.trys.push([6, 8,, 9]);\n                            return [4 /*yield*/, new Promise(function (resolve, reject) {\n                              var syncQuerySubscription = _this.syncQueriesObservable().subscribe({\n                                next: function next(message) {\n                                  var type = message.type;\n                                  if (type === ControlMessage.SYNC_ENGINE_SYNC_QUERIES_READY) {\n                                    resolve();\n                                  }\n                                  observer.next(message);\n                                },\n                                complete: function complete() {\n                                  resolve();\n                                },\n                                error: function error(_error) {\n                                  reject(_error);\n                                }\n                              });\n                              if (syncQuerySubscription) {\n                                subscriptions.push(syncQuerySubscription);\n                              }\n                            })];\n                          case 7:\n                            _c.sent();\n                            return [3 /*break*/, 9];\n                          case 8:\n                            error_1 = _c.sent();\n                            observer.error(error_1);\n                            return [2 /*return*/];\n                          case 9:\n                            //#endregion\n                            //#region process mutations\n                            subscriptions.push(this.mutationsProcessor.start().subscribe(function (_a) {\n                              var modelDefinition = _a.modelDefinition,\n                                item = _a.model,\n                                hasMore = _a.hasMore;\n                              var modelConstructor = _this.userModelClasses[modelDefinition.name];\n                              var model = _this.modelInstanceCreator(modelConstructor, item);\n                              _this.storage.runExclusive(function (storage) {\n                                return _this.modelMerger.merge(storage, model);\n                              });\n                              observer.next({\n                                type: ControlMessage.SYNC_ENGINE_OUTBOX_MUTATION_PROCESSED,\n                                data: {\n                                  model: modelConstructor,\n                                  element: model\n                                }\n                              });\n                              observer.next({\n                                type: ControlMessage.SYNC_ENGINE_OUTBOX_STATUS,\n                                data: {\n                                  isEmpty: !hasMore\n                                }\n                              });\n                            }));\n                            //#endregion\n                            //#region Merge subscriptions buffer\n                            // TODO: extract to function\n                            if (!isNode) {\n                              subscriptions.push(dataSubsObservable.subscribe(function (_a) {\n                                var _b = __read(_a, 3),\n                                  _transformerMutationType = _b[0],\n                                  modelDefinition = _b[1],\n                                  item = _b[2];\n                                var modelConstructor = _this.userModelClasses[modelDefinition.name];\n                                var model = _this.modelInstanceCreator(modelConstructor, item);\n                                _this.storage.runExclusive(function (storage) {\n                                  return _this.modelMerger.merge(storage, model);\n                                });\n                              }));\n                            }\n                            return [3 /*break*/, 11];\n                          case 10:\n                            if (!online) {\n                              this.online = online;\n                              observer.next({\n                                type: ControlMessage.SYNC_ENGINE_NETWORK_STATUS,\n                                data: {\n                                  active: this.online\n                                }\n                              });\n                              subscriptions.forEach(function (sub) {\n                                return sub.unsubscribe();\n                              });\n                              subscriptions = [];\n                            }\n                            _c.label = 11;\n                          case 11:\n                            resolve();\n                            return [2 /*return*/];\n                        }\n                      });\n                    });\n                  });\n                });\n\n                this.storage.observe(null, null, ownSymbol).filter(function (_a) {\n                  var model = _a.model;\n                  var modelDefinition = _this.getModelDefinition(model);\n                  return modelDefinition.syncable === true;\n                }).subscribe({\n                  next: function next(_a) {\n                    var opType = _a.opType,\n                      model = _a.model,\n                      element = _a.element,\n                      condition = _a.condition;\n                    return __awaiter(_this, void 0, void 0, function () {\n                      var namespace, MutationEventConstructor, graphQLCondition, mutationEvent;\n                      return __generator(this, function (_b) {\n                        switch (_b.label) {\n                          case 0:\n                            namespace = this.schema.namespaces[this.namespaceResolver(model)];\n                            MutationEventConstructor = this.modelClasses['MutationEvent'];\n                            graphQLCondition = predicateToGraphQLCondition(condition);\n                            mutationEvent = createMutationInstanceFromModelOperation(namespace.relationships, this.getModelDefinition(model), opType, model, element, graphQLCondition, MutationEventConstructor, this.modelInstanceCreator);\n                            return [4 /*yield*/, this.outbox.enqueue(this.storage, mutationEvent)];\n                          case 1:\n                            _b.sent();\n                            observer.next({\n                              type: ControlMessage.SYNC_ENGINE_OUTBOX_MUTATION_ENQUEUED,\n                              data: {\n                                model: model,\n                                element: element\n                              }\n                            });\n                            observer.next({\n                              type: ControlMessage.SYNC_ENGINE_OUTBOX_STATUS,\n                              data: {\n                                isEmpty: false\n                              }\n                            });\n                            return [4 /*yield*/, startPromise];\n                          case 2:\n                            _b.sent();\n                            if (this.online) {\n                              this.mutationsProcessor.resume();\n                            }\n                            return [2 /*return*/];\n                        }\n                      });\n                    });\n                  }\n                });\n\n                observer.next({\n                  type: ControlMessage.SYNC_ENGINE_STORAGE_SUBSCRIBED\n                });\n                return [4 /*yield*/, this.outbox.peek(this.storage)];\n              case 4:\n                hasMutationsInOutbox = _a.sent() === undefined;\n                observer.next({\n                  type: ControlMessage.SYNC_ENGINE_OUTBOX_STATUS,\n                  data: {\n                    isEmpty: hasMutationsInOutbox\n                  }\n                });\n                return [4 /*yield*/, startPromise];\n              case 5:\n                _a.sent();\n                observer.next({\n                  type: ControlMessage.SYNC_ENGINE_READY\n                });\n                return [2 /*return*/];\n            }\n          });\n        });\n      })();\n\n      return function () {\n        subscriptions.forEach(function (sub) {\n          return sub.unsubscribe();\n        });\n      };\n    });\n  };\n  SyncEngine.prototype.getModelsMetadataWithNextFullSync = function (currentTimeStamp) {\n    return __awaiter(this, void 0, void 0, function () {\n      var modelLastSync, _a;\n      var _this = this;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = Map.bind;\n            return [4 /*yield*/, this.getModelsMetadata()];\n          case 1:\n            modelLastSync = new (_a.apply(Map, [void 0, _b.sent().map(function (_a) {\n              var namespace = _a.namespace,\n                model = _a.model,\n                lastSync = _a.lastSync,\n                lastFullSync = _a.lastFullSync,\n                fullSyncInterval = _a.fullSyncInterval,\n                lastSyncPredicate = _a.lastSyncPredicate;\n              var nextFullSync = lastFullSync + fullSyncInterval;\n              var syncFrom = !lastFullSync || nextFullSync < currentTimeStamp ? 0 // perform full sync if expired\n              : lastSync; // perform delta sync\n              return [_this.schema.namespaces[namespace].models[model], [namespace, syncFrom]];\n            })]))();\n            return [2 /*return*/, modelLastSync];\n        }\n      });\n    });\n  };\n  SyncEngine.prototype.syncQueriesObservable = function () {\n    var _this = this;\n    if (!this.online) {\n      return Observable.of();\n    }\n    return new Observable(function (observer) {\n      var syncQueriesSubscription;\n      var waitTimeoutId;\n      (function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var _loop_1, this_1;\n          var _this = this;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                _loop_1 = function _loop_1() {\n                  var count, modelLastSync, paginatingModels, newestFullSyncStartedAt, theInterval, start, duration, newestStartedAt, msNextFullSync;\n                  return __generator(this, function (_a) {\n                    switch (_a.label) {\n                      case 0:\n                        count = new WeakMap();\n                        return [4 /*yield*/, this_1.getModelsMetadataWithNextFullSync(Date.now())];\n                      case 1:\n                        modelLastSync = _a.sent();\n                        paginatingModels = new Set(modelLastSync.keys());\n                        return [4 /*yield*/, new Promise(function (resolve) {\n                          syncQueriesSubscription = _this.syncQueriesProcessor.start(modelLastSync).subscribe({\n                            next: function next(_a) {\n                              var namespace = _a.namespace,\n                                modelDefinition = _a.modelDefinition,\n                                items = _a.items,\n                                done = _a.done,\n                                startedAt = _a.startedAt,\n                                isFullSync = _a.isFullSync;\n                              return __awaiter(_this, void 0, void 0, function () {\n                                var modelConstructor, modelName, modelMetadata_1, lastFullSync, fullSyncInterval, counts;\n                                var _this = this;\n                                return __generator(this, function (_b) {\n                                  switch (_b.label) {\n                                    case 0:\n                                      modelConstructor = this.userModelClasses[modelDefinition.name];\n                                      if (!count.has(modelConstructor)) {\n                                        count.set(modelConstructor, {\n                                          new: 0,\n                                          updated: 0,\n                                          deleted: 0\n                                        });\n                                        start = getNow();\n                                        newestStartedAt = newestStartedAt === undefined ? startedAt : Math.max(newestStartedAt, startedAt);\n                                      }\n                                      /**\n                                       * If there are mutations in the outbox for a given id, those need to be\n                                       * merged individually. Otherwise, we can merge them in batches.\n                                       */\n                                      return [4 /*yield*/, this.storage.runExclusive(function (storage) {\n                                        return __awaiter(_this, void 0, void 0, function () {\n                                          var idsInOutbox, oneByOne, page, opTypeCount, oneByOne_1, oneByOne_1_1, item, opType, e_1_1, _a, _b, _c, counts;\n                                          var e_1, _d;\n                                          return __generator(this, function (_e) {\n                                            switch (_e.label) {\n                                              case 0:\n                                                return [4 /*yield*/, this.outbox.getModelIds(storage)];\n                                              case 1:\n                                                idsInOutbox = _e.sent();\n                                                oneByOne = [];\n                                                page = items.filter(function (item) {\n                                                  if (!idsInOutbox.has(item.id)) {\n                                                    return true;\n                                                  }\n                                                  oneByOne.push(item);\n                                                  return false;\n                                                });\n                                                opTypeCount = [];\n                                                _e.label = 2;\n                                              case 2:\n                                                _e.trys.push([2, 7, 8, 9]);\n                                                oneByOne_1 = __values(oneByOne), oneByOne_1_1 = oneByOne_1.next();\n                                                _e.label = 3;\n                                              case 3:\n                                                if (!!oneByOne_1_1.done) return [3 /*break*/, 6];\n                                                item = oneByOne_1_1.value;\n                                                return [4 /*yield*/, this.modelMerger.merge(storage, item)];\n                                              case 4:\n                                                opType = _e.sent();\n                                                if (opType !== undefined) {\n                                                  opTypeCount.push([item, opType]);\n                                                }\n                                                _e.label = 5;\n                                              case 5:\n                                                oneByOne_1_1 = oneByOne_1.next();\n                                                return [3 /*break*/, 3];\n                                              case 6:\n                                                return [3 /*break*/, 9];\n                                              case 7:\n                                                e_1_1 = _e.sent();\n                                                e_1 = {\n                                                  error: e_1_1\n                                                };\n                                                return [3 /*break*/, 9];\n                                              case 8:\n                                                try {\n                                                  if (oneByOne_1_1 && !oneByOne_1_1.done && (_d = oneByOne_1.return)) _d.call(oneByOne_1);\n                                                } finally {\n                                                  if (e_1) throw e_1.error;\n                                                }\n                                                return [7 /*endfinally*/];\n                                              case 9:\n                                                _b = (_a = opTypeCount.push).apply;\n                                                _c = [opTypeCount];\n                                                return [4 /*yield*/, this.modelMerger.mergePage(storage, modelConstructor, page)];\n                                              case 10:\n                                                _b.apply(_a, _c.concat([__spread.apply(void 0, [_e.sent()])]));\n                                                counts = count.get(modelConstructor);\n                                                opTypeCount.forEach(function (_a) {\n                                                  var _b = __read(_a, 2),\n                                                    opType = _b[1];\n                                                  switch (opType) {\n                                                    case OpType.INSERT:\n                                                      counts.new++;\n                                                      break;\n                                                    case OpType.UPDATE:\n                                                      counts.updated++;\n                                                      break;\n                                                    case OpType.DELETE:\n                                                      counts.deleted++;\n                                                      break;\n                                                    default:\n                                                      exhaustiveCheck(opType);\n                                                  }\n                                                });\n                                                return [2 /*return*/];\n                                            }\n                                          });\n                                        });\n                                      })];\n\n                                    case 1:\n                                      /**\n                                       * If there are mutations in the outbox for a given id, those need to be\n                                       * merged individually. Otherwise, we can merge them in batches.\n                                       */\n                                      _b.sent();\n                                      if (!done) return [3 /*break*/, 4];\n                                      modelName = modelDefinition.name;\n                                      return [4 /*yield*/, this.getModelMetadata(namespace, modelName)];\n                                    case 2:\n                                      modelMetadata_1 = _b.sent();\n                                      lastFullSync = modelMetadata_1.lastFullSync, fullSyncInterval = modelMetadata_1.fullSyncInterval;\n                                      theInterval = fullSyncInterval;\n                                      newestFullSyncStartedAt = newestFullSyncStartedAt === undefined ? lastFullSync : Math.max(newestFullSyncStartedAt, isFullSync ? startedAt : lastFullSync);\n                                      modelMetadata_1 = this.modelClasses.ModelMetadata.copyOf(modelMetadata_1, function (draft) {\n                                        draft.lastSync = startedAt;\n                                        draft.lastFullSync = isFullSync ? startedAt : modelMetadata_1.lastFullSync;\n                                      });\n                                      return [4 /*yield*/, this.storage.save(modelMetadata_1, undefined, ownSymbol)];\n                                    case 3:\n                                      _b.sent();\n                                      counts = count.get(modelConstructor);\n                                      this.modelSyncedStatus.set(modelConstructor, true);\n                                      observer.next({\n                                        type: ControlMessage.SYNC_ENGINE_MODEL_SYNCED,\n                                        data: {\n                                          model: modelConstructor,\n                                          isFullSync: isFullSync,\n                                          isDeltaSync: !isFullSync,\n                                          counts: counts\n                                        }\n                                      });\n                                      paginatingModels.delete(modelDefinition);\n                                      if (paginatingModels.size === 0) {\n                                        duration = getNow() - start;\n                                        resolve();\n                                        observer.next({\n                                          type: ControlMessage.SYNC_ENGINE_SYNC_QUERIES_READY\n                                        });\n                                        syncQueriesSubscription.unsubscribe();\n                                      }\n                                      _b.label = 4;\n                                    case 4:\n                                      return [2 /*return*/];\n                                  }\n                                });\n                              });\n                            },\n\n                            error: function error(_error2) {\n                              observer.error(_error2);\n                            }\n                          });\n                          observer.next({\n                            type: ControlMessage.SYNC_ENGINE_SYNC_QUERIES_STARTED,\n                            data: {\n                              models: Array.from(paginatingModels).map(function (_a) {\n                                var name = _a.name;\n                                return name;\n                              })\n                            }\n                          });\n                        })];\n                      case 2:\n                        _a.sent();\n                        msNextFullSync = newestFullSyncStartedAt + theInterval - (newestStartedAt + duration);\n                        logger.debug(\"Next fullSync in \" + msNextFullSync / 1000 + \" seconds. (\" + new Date(Date.now() + msNextFullSync) + \")\");\n                        return [4 /*yield*/, new Promise(function (res) {\n                          waitTimeoutId = setTimeout(res, msNextFullSync);\n                        })];\n                      case 3:\n                        _a.sent();\n                        return [2 /*return*/];\n                    }\n                  });\n                };\n\n                this_1 = this;\n                _a.label = 1;\n              case 1:\n                if (!!observer.closed) return [3 /*break*/, 3];\n                return [5 /*yield**/, _loop_1()];\n              case 2:\n                _a.sent();\n                return [3 /*break*/, 1];\n              case 3:\n                return [2 /*return*/];\n            }\n          });\n        });\n      })();\n\n      return function () {\n        if (syncQueriesSubscription) {\n          syncQueriesSubscription.unsubscribe();\n        }\n        if (waitTimeoutId) {\n          clearTimeout(waitTimeoutId);\n        }\n      };\n    });\n  };\n  SyncEngine.prototype.disconnectionHandler = function () {\n    var _this = this;\n    return function (msg) {\n      // This implementation is tied to AWSAppSyncRealTimeProvider 'Connection closed', 'Timeout disconnect' msg\n      if (PUBSUB_CONTROL_MSG.CONNECTION_CLOSED === msg || PUBSUB_CONTROL_MSG.TIMEOUT_DISCONNECT === msg) {\n        _this.datastoreConnectivity.socketDisconnected();\n      }\n    };\n  };\n  SyncEngine.prototype.unsubscribeConnectivity = function () {\n    this.datastoreConnectivity.unsubscribe();\n  };\n  SyncEngine.prototype.setupModels = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var fullSyncInterval, ModelMetadata, models, savedModel, promises, result, _a, _b, modelMetadata, modelName, e_2_1;\n      var e_2, _c;\n      var _this = this;\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            fullSyncInterval = params.fullSyncInterval;\n            ModelMetadata = this.modelClasses.ModelMetadata;\n            models = [];\n            Object.values(this.schema.namespaces).forEach(function (namespace) {\n              Object.values(namespace.models).filter(function (_a) {\n                var syncable = _a.syncable;\n                return syncable;\n              }).forEach(function (model) {\n                models.push([namespace.name, model]);\n                if (namespace.name === USER) {\n                  var modelConstructor = _this.userModelClasses[model.name];\n                  _this.modelSyncedStatus.set(modelConstructor, false);\n                }\n              });\n            });\n            promises = models.map(function (_a) {\n              var _b = __read(_a, 2),\n                namespace = _b[0],\n                model = _b[1];\n              return __awaiter(_this, void 0, void 0, function () {\n                var modelMetadata, syncPredicate, lastSyncPredicate, prevSyncPredicate, syncPredicateUpdated_1;\n                var _c, _d, _e, _f;\n                return __generator(this, function (_g) {\n                  switch (_g.label) {\n                    case 0:\n                      return [4 /*yield*/, this.getModelMetadata(namespace, model.name)];\n                    case 1:\n                      modelMetadata = _g.sent();\n                      syncPredicate = ModelPredicateCreator.getPredicates(this.syncPredicates.get(model), false);\n                      lastSyncPredicate = syncPredicate ? JSON.stringify(syncPredicate) : null;\n                      if (!(modelMetadata === undefined)) return [3 /*break*/, 3];\n                      return [4 /*yield*/, this.storage.save(this.modelInstanceCreator(ModelMetadata, {\n                        model: model.name,\n                        namespace: namespace,\n                        lastSync: null,\n                        fullSyncInterval: fullSyncInterval,\n                        lastFullSync: null,\n                        lastSyncPredicate: lastSyncPredicate\n                      }), undefined, ownSymbol)];\n                    case 2:\n                      _c = __read.apply(void 0, [_g.sent(), 1]), _d = __read(_c[0], 1), savedModel = _d[0];\n                      return [3 /*break*/, 5];\n                    case 3:\n                      prevSyncPredicate = modelMetadata.lastSyncPredicate ? modelMetadata.lastSyncPredicate : null;\n                      syncPredicateUpdated_1 = prevSyncPredicate !== lastSyncPredicate;\n                      return [4 /*yield*/, this.storage.save(this.modelClasses.ModelMetadata.copyOf(modelMetadata, function (draft) {\n                        draft.fullSyncInterval = fullSyncInterval;\n                        // perform a base sync if the syncPredicate changed in between calls to DataStore.start\n                        // ensures that the local store contains all the data specified by the syncExpression\n                        if (syncPredicateUpdated_1) {\n                          draft.lastSync = null;\n                          draft.lastFullSync = null;\n                          draft.lastSyncPredicate = lastSyncPredicate;\n                        }\n                      }))];\n                    case 4:\n                      _e = __read.apply(void 0, [_g.sent(), 1]), _f = __read(_e[0], 1), savedModel = _f[0];\n                      _g.label = 5;\n                    case 5:\n                      return [2 /*return*/, savedModel];\n                  }\n                });\n              });\n            });\n            result = {};\n            _d.label = 1;\n          case 1:\n            _d.trys.push([1, 6, 7, 8]);\n            return [4 /*yield*/, Promise.all(promises)];\n          case 2:\n            _a = __values.apply(void 0, [_d.sent()]), _b = _a.next();\n            _d.label = 3;\n          case 3:\n            if (!!_b.done) return [3 /*break*/, 5];\n            modelMetadata = _b.value;\n            modelName = modelMetadata.model;\n            result[modelName] = modelMetadata;\n            _d.label = 4;\n          case 4:\n            _b = _a.next();\n            return [3 /*break*/, 3];\n          case 5:\n            return [3 /*break*/, 8];\n          case 6:\n            e_2_1 = _d.sent();\n            e_2 = {\n              error: e_2_1\n            };\n            return [3 /*break*/, 8];\n          case 7:\n            try {\n              if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n            } finally {\n              if (e_2) throw e_2.error;\n            }\n            return [7 /*endfinally*/];\n          case 8:\n            return [2 /*return*/, result];\n        }\n      });\n    });\n  };\n  SyncEngine.prototype.getModelsMetadata = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var ModelMetadata, modelsMetadata;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            ModelMetadata = this.modelClasses.ModelMetadata;\n            return [4 /*yield*/, this.storage.query(ModelMetadata)];\n          case 1:\n            modelsMetadata = _a.sent();\n            return [2 /*return*/, modelsMetadata];\n        }\n      });\n    });\n  };\n  SyncEngine.prototype.getModelMetadata = function (namespace, model) {\n    return __awaiter(this, void 0, void 0, function () {\n      var ModelMetadata, predicate, _a, modelMetadata;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            ModelMetadata = this.modelClasses.ModelMetadata;\n            predicate = ModelPredicateCreator.createFromExisting(this.schema.namespaces[SYNC].models[ModelMetadata.name], function (c) {\n              return c.namespace('eq', namespace).model('eq', model);\n            });\n            return [4 /*yield*/, this.storage.query(ModelMetadata, predicate, {\n              page: 0,\n              limit: 1\n            })];\n          case 1:\n            _a = __read.apply(void 0, [_b.sent(), 1]), modelMetadata = _a[0];\n            return [2 /*return*/, modelMetadata];\n        }\n      });\n    });\n  };\n  SyncEngine.prototype.getModelDefinition = function (modelConstructor) {\n    var namespaceName = this.namespaceResolver(modelConstructor);\n    var modelDefinition = this.schema.namespaces[namespaceName].models[modelConstructor.name];\n    return modelDefinition;\n  };\n  SyncEngine.getNamespace = function () {\n    var namespace = {\n      name: SYNC,\n      relationships: {},\n      enums: {\n        OperationType: {\n          name: 'OperationType',\n          values: ['CREATE', 'UPDATE', 'DELETE']\n        }\n      },\n      nonModels: {},\n      models: {\n        MutationEvent: {\n          name: 'MutationEvent',\n          pluralName: 'MutationEvents',\n          syncable: false,\n          fields: {\n            id: {\n              name: 'id',\n              type: 'ID',\n              isRequired: true,\n              isArray: false\n            },\n            model: {\n              name: 'model',\n              type: 'String',\n              isRequired: true,\n              isArray: false\n            },\n            data: {\n              name: 'data',\n              type: 'String',\n              isRequired: true,\n              isArray: false\n            },\n            modelId: {\n              name: 'modelId',\n              type: 'String',\n              isRequired: true,\n              isArray: false\n            },\n            operation: {\n              name: 'operation',\n              type: {\n                enum: 'Operationtype'\n              },\n              isArray: false,\n              isRequired: true\n            },\n            condition: {\n              name: 'condition',\n              type: 'String',\n              isArray: false,\n              isRequired: true\n            }\n          }\n        },\n        ModelMetadata: {\n          name: 'ModelMetadata',\n          pluralName: 'ModelsMetadata',\n          syncable: false,\n          fields: {\n            id: {\n              name: 'id',\n              type: 'ID',\n              isRequired: true,\n              isArray: false\n            },\n            namespace: {\n              name: 'namespace',\n              type: 'String',\n              isRequired: true,\n              isArray: false\n            },\n            model: {\n              name: 'model',\n              type: 'String',\n              isRequired: true,\n              isArray: false\n            },\n            lastSync: {\n              name: 'lastSync',\n              type: 'Int',\n              isRequired: false,\n              isArray: false\n            },\n            lastFullSync: {\n              name: 'lastFullSync',\n              type: 'Int',\n              isRequired: false,\n              isArray: false\n            },\n            fullSyncInterval: {\n              name: 'fullSyncInterval',\n              type: 'Int',\n              isRequired: true,\n              isArray: false\n            },\n            lastSyncPredicate: {\n              name: 'lastSyncPredicate',\n              type: 'String',\n              isRequired: false,\n              isArray: false\n            }\n          }\n        }\n      }\n    };\n    return namespace;\n  };\n  return SyncEngine;\n}();\nexport { SyncEngine };","map":{"version":3,"names":["browserOrNode","ConsoleLogger","Logger","CONTROL_MSG","PUBSUB_CONTROL_MSG","Observable","ModelPredicateCreator","OpType","exhaustiveCheck","getNow","SYNC","USER","DataStoreConnectivity","ModelMerger","MutationEventOutbox","MutationProcessor","SubscriptionProcessor","SyncProcessor","createMutationInstanceFromModelOperation","predicateToGraphQLCondition","isNode","logger","ownSymbol","Symbol","ControlMessage","SyncEngine","schema","namespaceResolver","modelClasses","userModelClasses","storage","modelInstanceCreator","maxRecordsToSync","syncPageSize","conflictHandler","errorHandler","syncPredicates","amplifyConfig","authModeStrategy","online","modelSyncedStatus","WeakMap","MutationEvent","outbox","modelMerger","syncQueriesProcessor","subscriptionsProcessor","mutationsProcessor","datastoreConnectivity","prototype","getModelSyncedStatus","modelConstructor","get","start","params","_this","observer","log","subscriptions","__awaiter","setupModels","_a","sent","error","err_1","startPromise","Promise","resolve","status","subscribe","next","type","SYNC_ENGINE_NETWORK_STATUS","data","active","dataSubsObservable","warn","_b","__read","ctlSubsObservable_1","reject","ctlSubsSubscription","msg","CONNECTED","err","handleDisconnect","disconnectionHandler","push","_c","err_2","SYNC_ENGINE_SUBSCRIPTIONS_ESTABLISHED","syncQuerySubscription","syncQueriesObservable","message","SYNC_ENGINE_SYNC_QUERIES_READY","complete","error_1","modelDefinition","item","model","hasMore","name","runExclusive","merge","SYNC_ENGINE_OUTBOX_MUTATION_PROCESSED","element","SYNC_ENGINE_OUTBOX_STATUS","isEmpty","_transformerMutationType","forEach","sub","unsubscribe","observe","filter","getModelDefinition","syncable","opType","condition","namespace","namespaces","MutationEventConstructor","graphQLCondition","mutationEvent","relationships","enqueue","SYNC_ENGINE_OUTBOX_MUTATION_ENQUEUED","resume","SYNC_ENGINE_STORAGE_SUBSCRIBED","peek","hasMutationsInOutbox","undefined","SYNC_ENGINE_READY","getModelsMetadataWithNextFullSync","currentTimeStamp","Map","bind","getModelsMetadata","modelLastSync","apply","map","lastSync","lastFullSync","fullSyncInterval","lastSyncPredicate","nextFullSync","syncFrom","models","of","syncQueriesSubscription","waitTimeoutId","count","this_1","Date","now","paginatingModels","Set","keys","items","done","startedAt","isFullSync","has","set","new","updated","deleted","newestStartedAt","Math","max","getModelIds","idsInOutbox","_e","oneByOne","page","id","opTypeCount","oneByOne_1","__values","oneByOne_1_1","value","mergePage","concat","__spread","counts","INSERT","UPDATE","DELETE","modelName","getModelMetadata","modelMetadata_1","theInterval","newestFullSyncStartedAt","ModelMetadata","copyOf","draft","save","SYNC_ENGINE_MODEL_SYNCED","isDeltaSync","delete","size","duration","SYNC_ENGINE_SYNC_QUERIES_STARTED","Array","from","msNextFullSync","debug","res","setTimeout","closed","clearTimeout","CONNECTION_CLOSED","TIMEOUT_DISCONNECT","socketDisconnected","unsubscribeConnectivity","Object","values","promises","modelMetadata","_g","syncPredicate","getPredicates","JSON","stringify","_d","savedModel","prevSyncPredicate","syncPredicateUpdated_1","_f","result","all","query","modelsMetadata","predicate","createFromExisting","c","limit","namespaceName","getNamespace","enums","OperationType","nonModels","pluralName","fields","isRequired","isArray","modelId","operation","enum"],"sources":["../../src/sync/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module"}