{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Junhaeng/Desktop/cocktail/cocktail-party/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/Junhaeng/Desktop/cocktail/cocktail-party/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/Junhaeng/Desktop/cocktail/cocktail-party/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/Junhaeng/Desktop/cocktail/cocktail-party/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport AWS from \"aws-sdk\";\n// import awsconfig from 'components/../aws-exports'\nimport Amplify from \"aws-amplify\";\nimport { Storage } from \"aws-amplify\";\nvar DynamoAccess = /*#__PURE__*/function () {\n  function DynamoAccess(bucket, region) {\n    _classCallCheck(this, DynamoAccess);\n    // Amplify.configure(awsconfig)\n    this.bucketRegion = region;\n    this.bucket = bucket;\n  }\n  _createClass(DynamoAccess, [{\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return Storage.get(\"labelerCred.json\").then( /*#__PURE__*/function () {\n                var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(resp) {\n                  var url;\n                  return _regeneratorRuntime().wrap(function _callee$(_context) {\n                    while (1) switch (_context.prev = _context.next) {\n                      case 0:\n                        url = \"\".concat(JSON.stringify(resp)).slice(1, -1);\n                        _context.next = 3;\n                        return fetch(url).then(function (res) {\n                          return res.json();\n                        }).then(function (data) {\n                          AWS.config.update({\n                            region: \"us-east-1\",\n                            endpoint: \"http://localhost:8000\",\n                            accessKeyId: \"AKIATI44Q6EJP6MQPZLX\",\n                            //data.ACCESS_KEY_ID,\n                            secretAccessKey: \"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\" //data.SECRET_ACCESS_KEY,\n                          });\n\n                          console.log(\"connected_dynamoaccess\");\n                        }).catch(function (err) {\n                          return console.error(err);\n                        });\n                      case 3:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }, _callee);\n                }));\n                return function (_x) {\n                  return _ref.apply(this, arguments);\n                };\n              }());\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      function connect() {\n        return _connect.apply(this, arguments);\n      }\n      return connect;\n    }()\n  }, {\n    key: \"listTables\",\n    value: function listTables() {\n      var ddb = new AWS.DynamoDB({\n        apiVersion: \"2012-08-10\"\n      });\n      ddb.listTables({\n        Limit: 10\n      }, function (err, data) {\n        if (err) {\n          console.log(\"Error\", err.code);\n        } else {\n          console.log(\"Table names are \", data.TableNames);\n        }\n      });\n    }\n  }, {\n    key: \"insertEntry\",\n    value: function insertEntry() {\n      console.log(\"Attempting test insert...\");\n    }\n  }]);\n  return DynamoAccess;\n}();\nexport { DynamoAccess as default };","map":{"version":3,"names":["AWS","Amplify","Storage","DynamoAccess","bucket","region","_classCallCheck","bucketRegion","_createClass","key","value","_connect","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","wrap","_callee2$","_context2","prev","next","get","then","_ref","_callee","resp","url","_callee$","_context","concat","JSON","stringify","slice","fetch","res","json","data","config","update","endpoint","accessKeyId","secretAccessKey","console","log","catch","err","error","stop","_x","apply","arguments","connect","listTables","ddb","DynamoDB","apiVersion","Limit","code","TableNames","insertEntry","default"],"sources":["/Users/Junhaeng/Desktop/cocktail/cocktail-party/src/functions/dynamoaccess.js"],"sourcesContent":["import AWS from \"aws-sdk\";\n// import awsconfig from 'components/../aws-exports'\nimport Amplify from \"aws-amplify\";\nimport { Storage } from \"aws-amplify\";\n\nexport default class DynamoAccess {\n  constructor(bucket, region) {\n    // Amplify.configure(awsconfig)\n    this.bucketRegion = region;\n    this.bucket = bucket;\n  }\n\n  async connect() {\n    await Storage.get(\"labelerCred.json\").then(async (resp) => {\n      const url = `${JSON.stringify(resp)}`.slice(1, -1);\n      await fetch(url)\n        .then((res) => res.json())\n        .then((data) => {\n          AWS.config.update({\n            region: \"us-east-1\",\n            endpoint: \"http://localhost:8000\",\n            accessKeyId: \"AKIATI44Q6EJP6MQPZLX\", //data.ACCESS_KEY_ID,\n            secretAccessKey: \"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\", //data.SECRET_ACCESS_KEY,\n          });\n          console.log(\"connected_dynamoaccess\");\n        })\n        .catch((err) => console.error(err));\n    });\n  }\n\n  listTables() {\n    var ddb = new AWS.DynamoDB({ apiVersion: \"2012-08-10\" });\n    ddb.listTables({ Limit: 10 }, function (err, data) {\n      if (err) {\n        console.log(\"Error\", err.code);\n      } else {\n        console.log(\"Table names are \", data.TableNames);\n      }\n    });\n  }\n\n  insertEntry() {\n    console.log(\"Attempting test insert...\");\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}