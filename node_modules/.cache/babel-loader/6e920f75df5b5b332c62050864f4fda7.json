{"ast":null,"code":"/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nimport { HttpResponse } from '@aws-sdk/protocol-http';\nimport { buildQueryString } from '@aws-sdk/querystring-builder';\nimport axios from 'axios';\nimport { ConsoleLogger as Logger, Platform } from '@aws-amplify/core';\nimport { AWSS3ProviderUploadErrorStrings } from '../common/StorageErrorStrings';\nvar logger = new Logger('axios-http-handler');\nexport var SEND_UPLOAD_PROGRESS_EVENT = 'sendUploadProgress';\nexport var SEND_DOWNLOAD_PROGRESS_EVENT = 'sendDownloadProgress';\nfunction isBlob(body) {\n  return typeof Blob !== 'undefined' && body instanceof Blob;\n}\nvar normalizeHeaders = function normalizeHeaders(headers, normalizedName) {\n  var e_1, _a;\n  try {\n    for (var _b = __values(Object.entries(headers)), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var _d = __read(_c.value, 2),\n        k = _d[0],\n        v = _d[1];\n      if (k !== normalizedName && k.toUpperCase() === normalizedName.toUpperCase()) {\n        headers[normalizedName] = v;\n        delete headers[k];\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n};\nexport var reactNativeRequestTransformer = [function (data, headers) {\n  if (isBlob(data)) {\n    normalizeHeaders(headers, 'Content-Type');\n    normalizeHeaders(headers, 'Accept');\n    return data;\n  }\n  // Axios' default transformRequest is an array\n  return axios.defaults.transformRequest[0].call(null, data, headers);\n}];\nvar AxiosHttpHandler = /** @class */function () {\n  function AxiosHttpHandler(httpOptions, emitter, cancelTokenSource) {\n    if (httpOptions === void 0) {\n      httpOptions = {};\n    }\n    this.httpOptions = httpOptions;\n    this.emitter = emitter;\n    this.cancelTokenSource = cancelTokenSource;\n  }\n  AxiosHttpHandler.prototype.destroy = function () {\n    // Do nothing. TLS and HTTP/2 connection pooling is handled by the\n    // browser.\n  };\n  AxiosHttpHandler.prototype.handle = function (request, options) {\n    var requestTimeoutInMs = this.httpOptions.requestTimeout;\n    // prioritize the call specific event emitter, this is useful for multipart upload as each individual parts has\n    // their own event emitter, without having to create s3client for every individual calls.\n    var emitter = options.emitter || this.emitter;\n    var path = request.path;\n    if (request.query) {\n      var queryString = buildQueryString(request.query);\n      if (queryString) {\n        path += \"?\" + queryString;\n      }\n    }\n    var port = request.port;\n    var url = request.protocol + \"//\" + request.hostname + (port ? \":\" + port : '') + path;\n    var axiosRequest = {};\n    axiosRequest.url = url;\n    axiosRequest.method = request.method;\n    axiosRequest.headers = request.headers;\n    // The host header is automatically added by the browser and adding it explicitly in the\n    // axios request throws an error https://github.com/aws-amplify/amplify-js/issues/5376\n    // This is because the host header is a forbidden header for the http client to set\n    // see https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name and\n    // https://fetch.spec.whatwg.org/#forbidden-header-name\n    // The reason we are removing this header here instead of in the aws-sdk's client\n    // middleware is that the host header is required to be in the request signature and if\n    // we remove it from the middlewares, then the request fails because the header is added\n    // by the browser but is absent from the signature.\n    delete axiosRequest.headers['host'];\n    if (request.body) {\n      axiosRequest.data = request.body;\n    } else {\n      // Fix for https://github.com/aws-amplify/amplify-js/issues/5432\n      // If the POST request body is empty but content-type header is set, axios is forcibly removing it\n      // See https://github.com/axios/axios/issues/1535 and refusing to fix it https://github.com/axios/axios/issues/755\n      // This change is a workaround to set the data as null (instead of undefined) to prevent axios from\n      // removing the content-type header. Link for the source code\n      // https://github.com/axios/axios/blob/dc4bc49673943e35280e5df831f5c3d0347a9393/lib/adapters/xhr.js#L121-L123\n      if (axiosRequest.headers[Object.keys(axiosRequest.headers).find(function (key) {\n        return key.toLowerCase() === 'content-type';\n      })]) {\n        axiosRequest.data = null;\n      }\n    }\n    if (emitter) {\n      axiosRequest.onUploadProgress = function (event) {\n        emitter.emit(SEND_UPLOAD_PROGRESS_EVENT, event);\n        logger.debug(event);\n      };\n      axiosRequest.onDownloadProgress = function (event) {\n        emitter.emit(SEND_DOWNLOAD_PROGRESS_EVENT, event);\n        logger.debug(event);\n      };\n    }\n    // If a cancel token source is passed down from the provider, allows cancellation of in-flight requests\n    if (this.cancelTokenSource) {\n      axiosRequest.cancelToken = this.cancelTokenSource.token;\n    }\n    if (options.cancelTokenSource) {\n      axiosRequest.cancelToken = options.cancelTokenSource.token;\n    }\n    // From gamma release, aws-sdk now expects all response type to be of blob or streams\n    axiosRequest.responseType = 'blob';\n    // In Axios, Blobs are identified by calling Object.prototype.toString on the object. However, on React Native,\n    // calling Object.prototype.toString on a Blob returns '[object Object]' instead of '[object Blob]', which causes\n    // Axios to treat Blobs as generic Javascript objects. Therefore we need a to use a custom request transformer\n    // to correctly handle Blob in React Native.\n    if (Platform.isReactNative) {\n      axiosRequest.transformRequest = reactNativeRequestTransformer;\n    }\n    var raceOfPromises = [axios.request(axiosRequest).then(function (response) {\n      return {\n        response: new HttpResponse({\n          headers: response.headers,\n          statusCode: response.status,\n          body: response.data\n        })\n      };\n    }).catch(function (error) {\n      var _a, _b, _c;\n      // Error\n      if (error.message !== AWSS3ProviderUploadErrorStrings.UPLOAD_PAUSED_MESSAGE) {\n        logger.error(error.message);\n      }\n      // for axios' cancel error, we should re-throw it back so it's not considered an s3client error\n      // if we return empty, or an abitrary error HttpResponse, it will be hard to debug down the line\n      if (axios.isCancel(error)) {\n        throw error;\n      }\n      // otherwise, we should re-construct an HttpResponse from the error, so that it can be passed down to other\n      // aws sdk middleware (e.g retry, clock skew correction, error message serializing)\n      return {\n        response: new HttpResponse({\n          statusCode: (_a = error.response) === null || _a === void 0 ? void 0 : _a.status,\n          body: (_b = error.response) === null || _b === void 0 ? void 0 : _b.data,\n          headers: (_c = error.response) === null || _c === void 0 ? void 0 : _c.headers\n        })\n      };\n    }), requestTimeout(requestTimeoutInMs)];\n    return Promise.race(raceOfPromises);\n  };\n  return AxiosHttpHandler;\n}();\nexport { AxiosHttpHandler };\nfunction requestTimeout(timeoutInMs) {\n  if (timeoutInMs === void 0) {\n    timeoutInMs = 0;\n  }\n  return new Promise(function (resolve, reject) {\n    if (timeoutInMs) {\n      setTimeout(function () {\n        var timeoutError = new Error(\"Request did not complete within \" + timeoutInMs + \" ms\");\n        timeoutError.name = 'TimeoutError';\n        reject(timeoutError);\n      }, timeoutInMs);\n    }\n  });\n}","map":{"version":3,"names":["HttpResponse","buildQueryString","axios","ConsoleLogger","Logger","Platform","AWSS3ProviderUploadErrorStrings","logger","SEND_UPLOAD_PROGRESS_EVENT","SEND_DOWNLOAD_PROGRESS_EVENT","isBlob","body","Blob","normalizeHeaders","headers","normalizedName","_b","__values","Object","entries","_c","next","done","_d","__read","value","k","v","toUpperCase","reactNativeRequestTransformer","data","defaults","transformRequest","call","AxiosHttpHandler","httpOptions","emitter","cancelTokenSource","prototype","destroy","handle","request","options","requestTimeoutInMs","requestTimeout","path","query","queryString","port","url","protocol","hostname","axiosRequest","method","keys","find","key","toLowerCase","onUploadProgress","event","emit","debug","onDownloadProgress","cancelToken","token","responseType","isReactNative","raceOfPromises","then","response","statusCode","status","catch","error","message","UPLOAD_PAUSED_MESSAGE","isCancel","_a","Promise","race","timeoutInMs","resolve","reject","setTimeout","timeoutError","Error","name"],"sources":["../../src/providers/axios-http-handler.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module"}